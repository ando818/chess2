import { isEmpty } from '../../misc/type-util';
import { ValueMap } from '../model/value-map';
/**
 * A number range constraint.
 */
export class RangeConstraint {
    constructor(config) {
        this.values = ValueMap.fromObject({
            max: config.max,
            min: config.min,
        });
    }
    // TODO: Remove property in the next major version
    /**
     * @deprecated Use values.get('max') instead.
     */
    get maxValue() {
        return this.values.get('max');
    }
    // TODO: Remove property in the next major version
    /**
     * @deprecated Use values.get('min') instead.
     */
    get minValue() {
        return this.values.get('min');
    }
    constrain(value) {
        const max = this.values.get('max');
        const min = this.values.get('min');
        let result = value;
        if (!isEmpty(min)) {
            result = Math.max(result, min);
        }
        if (!isEmpty(max)) {
            result = Math.min(result, max);
        }
        return result;
    }
}
