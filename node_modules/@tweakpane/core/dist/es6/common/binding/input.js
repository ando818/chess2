import { Emitter } from '../model/emitter';
/**
 * @hidden
 */
export class InputBinding {
    constructor(config) {
        this.onValueChange_ = this.onValueChange_.bind(this);
        this.reader = config.reader;
        this.writer = config.writer;
        this.emitter = new Emitter();
        this.value = config.value;
        this.value.emitter.on('change', this.onValueChange_);
        this.target = config.target;
        this.read();
    }
    read() {
        const targetValue = this.target.read();
        if (targetValue !== undefined) {
            this.value.rawValue = this.reader(targetValue);
        }
    }
    write_(rawValue) {
        this.writer(this.target, rawValue);
    }
    onValueChange_(ev) {
        this.write_(ev.rawValue);
        this.emitter.emit('change', {
            options: ev.options,
            rawValue: ev.rawValue,
            sender: this,
        });
    }
}
