import { bindValueMap } from '../../../common/model/reactive';
import { ViewProps } from '../../../common/model/view-props';
import { createBlade } from '../../common/model/blade';
import { RackController } from '../../rack/controller/rack';
import { TabItemController } from './tab-item';
export class TabPageController {
    constructor(doc, config) {
        this.onItemClick_ = this.onItemClick_.bind(this);
        this.ic_ = new TabItemController(doc, {
            props: config.itemProps,
            viewProps: ViewProps.create(),
        });
        this.ic_.emitter.on('click', this.onItemClick_);
        this.cc_ = new RackController(doc, {
            blade: createBlade(),
            viewProps: ViewProps.create(),
        });
        this.props = config.props;
        bindValueMap(this.props, 'selected', (selected) => {
            this.itemController.props.set('selected', selected);
            this.contentController.viewProps.set('hidden', !selected);
        });
    }
    get itemController() {
        return this.ic_;
    }
    get contentController() {
        return this.cc_;
    }
    onItemClick_() {
        this.props.set('selected', true);
    }
}
