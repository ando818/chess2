import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/@tweakpane/core/dist/cjs/blade/common/api/blade.js
var require_blade = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/api/blade.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BladeApi = void 0;
    var BladeApi = (
      /** @class */
      function() {
        function BladeApi2(controller) {
          this.controller_ = controller;
        }
        Object.defineProperty(BladeApi2.prototype, "element", {
          get: function() {
            return this.controller_.view.element;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(BladeApi2.prototype, "disabled", {
          get: function() {
            return this.controller_.viewProps.get("disabled");
          },
          set: function(disabled) {
            this.controller_.viewProps.set("disabled", disabled);
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(BladeApi2.prototype, "hidden", {
          get: function() {
            return this.controller_.viewProps.get("hidden");
          },
          set: function(hidden) {
            this.controller_.viewProps.set("hidden", hidden);
          },
          enumerable: false,
          configurable: true
        });
        BladeApi2.prototype.dispose = function() {
          this.controller_.viewProps.set("disposed", true);
        };
        return BladeApi2;
      }()
    );
    exports.BladeApi = BladeApi;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/api/events.js
var require_events = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/api/events.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/api/params.js
var require_params = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/api/params.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/api/tp-event.js
var require_tp_event = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/api/tp-event.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TpTabSelectEvent = exports.TpFoldEvent = exports.TpUpdateEvent = exports.TpChangeEvent = exports.TpEvent = void 0;
    var TpEvent = (
      /** @class */
      function() {
        function TpEvent2(target) {
          this.target = target;
        }
        return TpEvent2;
      }()
    );
    exports.TpEvent = TpEvent;
    var TpChangeEvent = (
      /** @class */
      function(_super) {
        __extends(TpChangeEvent2, _super);
        function TpChangeEvent2(target, value, presetKey, last) {
          var _this = _super.call(this, target) || this;
          _this.value = value;
          _this.presetKey = presetKey;
          _this.last = last !== null && last !== void 0 ? last : true;
          return _this;
        }
        return TpChangeEvent2;
      }(TpEvent)
    );
    exports.TpChangeEvent = TpChangeEvent;
    var TpUpdateEvent = (
      /** @class */
      function(_super) {
        __extends(TpUpdateEvent2, _super);
        function TpUpdateEvent2(target, value, presetKey) {
          var _this = _super.call(this, target) || this;
          _this.value = value;
          _this.presetKey = presetKey;
          return _this;
        }
        return TpUpdateEvent2;
      }(TpEvent)
    );
    exports.TpUpdateEvent = TpUpdateEvent;
    var TpFoldEvent = (
      /** @class */
      function(_super) {
        __extends(TpFoldEvent2, _super);
        function TpFoldEvent2(target, expanded) {
          var _this = _super.call(this, target) || this;
          _this.expanded = expanded;
          return _this;
        }
        return TpFoldEvent2;
      }(TpEvent)
    );
    exports.TpFoldEvent = TpFoldEvent;
    var TpTabSelectEvent = (
      /** @class */
      function(_super) {
        __extends(TpTabSelectEvent2, _super);
        function TpTabSelectEvent2(target, index) {
          var _this = _super.call(this, target) || this;
          _this.index = index;
          return _this;
        }
        return TpTabSelectEvent2;
      }(TpEvent)
    );
    exports.TpTabSelectEvent = TpTabSelectEvent;
  }
});

// node_modules/@tweakpane/core/dist/cjs/misc/type-util.js
var require_type_util = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/misc/type-util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isPropertyWritable = exports.deepEqualsArray = exports.isEmpty = exports.forceCast = void 0;
    function forceCast(v) {
      return v;
    }
    exports.forceCast = forceCast;
    function isEmpty(value) {
      return value === null || value === void 0;
    }
    exports.isEmpty = isEmpty;
    function deepEqualsArray(a1, a2) {
      if (a1.length !== a2.length) {
        return false;
      }
      for (var i = 0; i < a1.length; i++) {
        if (a1[i] !== a2[i]) {
          return false;
        }
      }
      return true;
    }
    exports.deepEqualsArray = deepEqualsArray;
    function isPropertyWritable(obj, key) {
      var target = obj;
      do {
        var d = Object.getOwnPropertyDescriptor(target, key);
        if (d && (d.set !== void 0 || d.writable === true)) {
          return true;
        }
        target = Object.getPrototypeOf(target);
      } while (target !== null);
      return false;
    }
    exports.isPropertyWritable = isPropertyWritable;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/tp-error.js
var require_tp_error = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/tp-error.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TpError = void 0;
    var type_util_1 = require_type_util();
    var CREATE_MESSAGE_MAP = {
      alreadydisposed: function() {
        return "View has been already disposed";
      },
      invalidparams: function(context) {
        return "Invalid parameters for '".concat(context.name, "'");
      },
      nomatchingcontroller: function(context) {
        return "No matching controller for '".concat(context.key, "'");
      },
      nomatchingview: function(context) {
        return "No matching view for '".concat(JSON.stringify(context.params), "'");
      },
      notbindable: function() {
        return "Value is not bindable";
      },
      propertynotfound: function(context) {
        return "Property '".concat(context.name, "' not found");
      },
      shouldneverhappen: function() {
        return "This error should never happen";
      }
    };
    var TpError = (
      /** @class */
      function() {
        function TpError2(config) {
          var _a;
          this.message = (_a = CREATE_MESSAGE_MAP[config.type]((0, type_util_1.forceCast)(config.context))) !== null && _a !== void 0 ? _a : "Unexpected error";
          this.name = this.constructor.name;
          this.stack = new Error(this.message).stack;
          this.type = config.type;
        }
        TpError2.alreadyDisposed = function() {
          return new TpError2({ type: "alreadydisposed" });
        };
        TpError2.notBindable = function() {
          return new TpError2({
            type: "notbindable"
          });
        };
        TpError2.propertyNotFound = function(name) {
          return new TpError2({
            type: "propertynotfound",
            context: {
              name
            }
          });
        };
        TpError2.shouldNeverHappen = function() {
          return new TpError2({ type: "shouldneverhappen" });
        };
        return TpError2;
      }()
    );
    exports.TpError = TpError;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/binding/target.js
var require_target = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/binding/target.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BindingTarget = void 0;
    var tp_error_1 = require_tp_error();
    var BindingTarget = (
      /** @class */
      function() {
        function BindingTarget2(obj, key, opt_id) {
          this.obj_ = obj;
          this.key_ = key;
          this.presetKey_ = opt_id !== null && opt_id !== void 0 ? opt_id : key;
        }
        BindingTarget2.isBindable = function(obj) {
          if (obj === null) {
            return false;
          }
          if (typeof obj !== "object") {
            return false;
          }
          return true;
        };
        Object.defineProperty(BindingTarget2.prototype, "key", {
          /**
           * The property name of the binding.
           */
          get: function() {
            return this.key_;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(BindingTarget2.prototype, "presetKey", {
          /**
           * The key used for presets.
           */
          get: function() {
            return this.presetKey_;
          },
          enumerable: false,
          configurable: true
        });
        BindingTarget2.prototype.read = function() {
          return this.obj_[this.key_];
        };
        BindingTarget2.prototype.write = function(value) {
          this.obj_[this.key_] = value;
        };
        BindingTarget2.prototype.writeProperty = function(name, value) {
          var valueObj = this.read();
          if (!BindingTarget2.isBindable(valueObj)) {
            throw tp_error_1.TpError.notBindable();
          }
          if (!(name in valueObj)) {
            throw tp_error_1.TpError.propertyNotFound(name);
          }
          valueObj[name] = value;
        };
        return BindingTarget2;
      }()
    );
    exports.BindingTarget = BindingTarget;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/button/api/button.js
var require_button = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/button/api/button.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ButtonApi = void 0;
    var blade_1 = require_blade();
    var tp_event_1 = require_tp_event();
    var ButtonApi = (
      /** @class */
      function(_super) {
        __extends(ButtonApi2, _super);
        function ButtonApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(ButtonApi2.prototype, "label", {
          get: function() {
            return this.controller_.props.get("label");
          },
          set: function(label) {
            this.controller_.props.set("label", label);
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(ButtonApi2.prototype, "title", {
          get: function() {
            var _a;
            return (_a = this.controller_.valueController.props.get("title")) !== null && _a !== void 0 ? _a : "";
          },
          set: function(title) {
            this.controller_.valueController.props.set("title", title);
          },
          enumerable: false,
          configurable: true
        });
        ButtonApi2.prototype.on = function(eventName, handler) {
          var _this = this;
          var bh = handler.bind(this);
          var emitter = this.controller_.valueController.emitter;
          emitter.on(eventName, function() {
            bh(new tp_event_1.TpEvent(_this));
          });
          return this;
        };
        return ButtonApi2;
      }(blade_1.BladeApi)
    );
    exports.ButtonApi = ButtonApi;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/emitter.js
var require_emitter = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/emitter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Emitter = void 0;
    var Emitter = (
      /** @class */
      function() {
        function Emitter2() {
          this.observers_ = {};
        }
        Emitter2.prototype.on = function(eventName, handler) {
          var observers = this.observers_[eventName];
          if (!observers) {
            observers = this.observers_[eventName] = [];
          }
          observers.push({
            handler
          });
          return this;
        };
        Emitter2.prototype.off = function(eventName, handler) {
          var observers = this.observers_[eventName];
          if (observers) {
            this.observers_[eventName] = observers.filter(function(observer) {
              return observer.handler !== handler;
            });
          }
          return this;
        };
        Emitter2.prototype.emit = function(eventName, event) {
          var observers = this.observers_[eventName];
          if (!observers) {
            return;
          }
          observers.forEach(function(observer) {
            observer.handler(event);
          });
        };
        return Emitter2;
      }()
    );
    exports.Emitter = Emitter;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/view/class-name.js
var require_class_name = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/view/class-name.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ClassName = void 0;
    var PREFIX = "tp";
    function ClassName(viewName) {
      var fn = function(opt_elementName, opt_modifier) {
        return [
          PREFIX,
          "-",
          viewName,
          "v",
          opt_elementName ? "_".concat(opt_elementName) : "",
          opt_modifier ? "-".concat(opt_modifier) : ""
        ].join("");
      };
      return fn;
    }
    exports.ClassName = ClassName;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/reactive.js
var require_reactive = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/reactive.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.bindValueMap = exports.bindValue = void 0;
    function compose(h1, h2) {
      return function(input) {
        return h2(h1(input));
      };
    }
    function extractValue(ev) {
      return ev.rawValue;
    }
    function bindValue(value, applyValue) {
      value.emitter.on("change", compose(extractValue, applyValue));
      applyValue(value.rawValue);
    }
    exports.bindValue = bindValue;
    function bindValueMap(valueMap, key, applyValue) {
      bindValue(valueMap.value(key), applyValue);
    }
    exports.bindValueMap = bindValueMap;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/view/reactive.js
var require_reactive2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/view/reactive.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.bindValueToTextContent = exports.valueToClassName = void 0;
    var reactive_1 = require_reactive();
    function applyClass(elem, className, active) {
      if (active) {
        elem.classList.add(className);
      } else {
        elem.classList.remove(className);
      }
    }
    function valueToClassName(elem, className) {
      return function(value) {
        applyClass(elem, className, value);
      };
    }
    exports.valueToClassName = valueToClassName;
    function bindValueToTextContent(value, elem) {
      (0, reactive_1.bindValue)(value, function(text) {
        elem.textContent = text !== null && text !== void 0 ? text : "";
      });
    }
    exports.bindValueToTextContent = bindValueToTextContent;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/button/view/button.js
var require_button2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/button/view/button.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ButtonView = void 0;
    var class_name_1 = require_class_name();
    var reactive_1 = require_reactive2();
    var className = (0, class_name_1.ClassName)("btn");
    var ButtonView = (
      /** @class */
      function() {
        function ButtonView2(doc, config) {
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var buttonElem = doc.createElement("button");
          buttonElem.classList.add(className("b"));
          config.viewProps.bindDisabled(buttonElem);
          this.element.appendChild(buttonElem);
          this.buttonElement = buttonElem;
          var titleElem = doc.createElement("div");
          titleElem.classList.add(className("t"));
          (0, reactive_1.bindValueToTextContent)(config.props.value("title"), titleElem);
          this.buttonElement.appendChild(titleElem);
        }
        return ButtonView2;
      }()
    );
    exports.ButtonView = ButtonView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/button/controller/button.js
var require_button3 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/button/controller/button.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ButtonController = void 0;
    var emitter_1 = require_emitter();
    var button_1 = require_button2();
    var ButtonController = (
      /** @class */
      function() {
        function ButtonController2(doc, config) {
          this.emitter = new emitter_1.Emitter();
          this.onClick_ = this.onClick_.bind(this);
          this.props = config.props;
          this.viewProps = config.viewProps;
          this.view = new button_1.ButtonView(doc, {
            props: this.props,
            viewProps: this.viewProps
          });
          this.view.buttonElement.addEventListener("click", this.onClick_);
        }
        ButtonController2.prototype.onClick_ = function() {
          this.emitter.emit("click", {
            sender: this
          });
        };
        return ButtonController2;
      }()
    );
    exports.ButtonController = ButtonController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/bound-value.js
var require_bound_value = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/bound-value.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BoundValue = void 0;
    var emitter_1 = require_emitter();
    var BoundValue = (
      /** @class */
      function() {
        function BoundValue2(initialValue, config) {
          var _a;
          this.constraint_ = config === null || config === void 0 ? void 0 : config.constraint;
          this.equals_ = (_a = config === null || config === void 0 ? void 0 : config.equals) !== null && _a !== void 0 ? _a : function(v1, v2) {
            return v1 === v2;
          };
          this.emitter = new emitter_1.Emitter();
          this.rawValue_ = initialValue;
        }
        Object.defineProperty(BoundValue2.prototype, "constraint", {
          get: function() {
            return this.constraint_;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(BoundValue2.prototype, "rawValue", {
          get: function() {
            return this.rawValue_;
          },
          set: function(rawValue) {
            this.setRawValue(rawValue, {
              forceEmit: false,
              last: true
            });
          },
          enumerable: false,
          configurable: true
        });
        BoundValue2.prototype.setRawValue = function(rawValue, options) {
          var opts = options !== null && options !== void 0 ? options : {
            forceEmit: false,
            last: true
          };
          var constrainedValue = this.constraint_ ? this.constraint_.constrain(rawValue) : rawValue;
          var prevValue = this.rawValue_;
          var changed = !this.equals_(prevValue, constrainedValue);
          if (!changed && !opts.forceEmit) {
            return;
          }
          this.emitter.emit("beforechange", {
            sender: this
          });
          this.rawValue_ = constrainedValue;
          this.emitter.emit("change", {
            options: opts,
            previousRawValue: prevValue,
            rawValue: constrainedValue,
            sender: this
          });
        };
        return BoundValue2;
      }()
    );
    exports.BoundValue = BoundValue;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/primitive-value.js
var require_primitive_value = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/primitive-value.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PrimitiveValue = void 0;
    var emitter_1 = require_emitter();
    var PrimitiveValue = (
      /** @class */
      function() {
        function PrimitiveValue2(initialValue) {
          this.emitter = new emitter_1.Emitter();
          this.value_ = initialValue;
        }
        Object.defineProperty(PrimitiveValue2.prototype, "rawValue", {
          get: function() {
            return this.value_;
          },
          set: function(value) {
            this.setRawValue(value, {
              forceEmit: false,
              last: true
            });
          },
          enumerable: false,
          configurable: true
        });
        PrimitiveValue2.prototype.setRawValue = function(value, options) {
          var opts = options !== null && options !== void 0 ? options : {
            forceEmit: false,
            last: true
          };
          var prevValue = this.value_;
          if (prevValue === value && !opts.forceEmit) {
            return;
          }
          this.emitter.emit("beforechange", {
            sender: this
          });
          this.value_ = value;
          this.emitter.emit("change", {
            options: opts,
            previousRawValue: prevValue,
            rawValue: this.value_,
            sender: this
          });
        };
        return PrimitiveValue2;
      }()
    );
    exports.PrimitiveValue = PrimitiveValue;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/values.js
var require_values = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/values.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createValue = void 0;
    var bound_value_1 = require_bound_value();
    var primitive_value_1 = require_primitive_value();
    function createValue(initialValue, config) {
      var constraint = config === null || config === void 0 ? void 0 : config.constraint;
      var equals = config === null || config === void 0 ? void 0 : config.equals;
      if (!constraint && !equals) {
        return new primitive_value_1.PrimitiveValue(initialValue);
      }
      return new bound_value_1.BoundValue(initialValue, config);
    }
    exports.createValue = createValue;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/value-map.js
var require_value_map = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/value-map.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ValueMap = void 0;
    var emitter_1 = require_emitter();
    var values_1 = require_values();
    var ValueMap = (
      /** @class */
      function() {
        function ValueMap2(valueMap) {
          var _this = this;
          this.emitter = new emitter_1.Emitter();
          this.valMap_ = valueMap;
          var _loop_1 = function(key2) {
            var v = this_1.valMap_[key2];
            v.emitter.on("change", function() {
              _this.emitter.emit("change", {
                key: key2,
                sender: _this
              });
            });
          };
          var this_1 = this;
          for (var key in this.valMap_) {
            _loop_1(key);
          }
        }
        ValueMap2.createCore = function(initialValue) {
          var keys = Object.keys(initialValue);
          return keys.reduce(function(o, key) {
            var _a;
            key;
            return Object.assign(o, (_a = {}, _a[key] = (0, values_1.createValue)(initialValue[key]), _a));
          }, {});
        };
        ValueMap2.fromObject = function(initialValue) {
          var core = this.createCore(initialValue);
          return new ValueMap2(core);
        };
        ValueMap2.prototype.get = function(key) {
          return this.valMap_[key].rawValue;
        };
        ValueMap2.prototype.set = function(key, value) {
          this.valMap_[key].rawValue = value;
        };
        ValueMap2.prototype.value = function(key) {
          return this.valMap_[key];
        };
        return ValueMap2;
      }()
    );
    exports.ValueMap = ValueMap;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/params-parsers.js
var require_params_parsers = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/params-parsers.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseParams = exports.ParamsParsers = void 0;
    var type_util_1 = require_type_util();
    function parseObject(value, keyToParserMap) {
      var keys = Object.keys(keyToParserMap);
      var result = keys.reduce(function(tmp, key) {
        var _a;
        if (tmp === void 0) {
          return void 0;
        }
        var parser = keyToParserMap[key];
        var result2 = parser(value[key]);
        return result2.succeeded ? __assign(__assign({}, tmp), (_a = {}, _a[key] = result2.value, _a)) : void 0;
      }, {});
      return (0, type_util_1.forceCast)(result);
    }
    function parseArray(value, parseItem) {
      return value.reduce(function(tmp, item) {
        if (tmp === void 0) {
          return void 0;
        }
        var result = parseItem(item);
        if (!result.succeeded || result.value === void 0) {
          return void 0;
        }
        return __spreadArray(__spreadArray([], tmp, true), [result.value], false);
      }, []);
    }
    function isObject(value) {
      if (value === null) {
        return false;
      }
      return typeof value === "object";
    }
    function createParamsParserBuilder(parse) {
      return function(optional) {
        return function(v) {
          if (!optional && v === void 0) {
            return {
              succeeded: false,
              value: void 0
            };
          }
          if (optional && v === void 0) {
            return {
              succeeded: true,
              value: void 0
            };
          }
          var result = parse(v);
          return result !== void 0 ? {
            succeeded: true,
            value: result
          } : {
            succeeded: false,
            value: void 0
          };
        };
      };
    }
    function createParamsParserBuilders(optional) {
      return {
        custom: function(parse) {
          return createParamsParserBuilder(parse)(optional);
        },
        boolean: createParamsParserBuilder(function(v) {
          return typeof v === "boolean" ? v : void 0;
        })(optional),
        number: createParamsParserBuilder(function(v) {
          return typeof v === "number" ? v : void 0;
        })(optional),
        string: createParamsParserBuilder(function(v) {
          return typeof v === "string" ? v : void 0;
        })(optional),
        // eslint-disable-next-line @typescript-eslint/ban-types
        function: createParamsParserBuilder(function(v) {
          return typeof v === "function" ? v : void 0;
        })(optional),
        constant: function(value) {
          return createParamsParserBuilder(function(v) {
            return v === value ? value : void 0;
          })(optional);
        },
        raw: createParamsParserBuilder(function(v) {
          return v;
        })(optional),
        object: function(keyToParserMap) {
          return createParamsParserBuilder(function(v) {
            if (!isObject(v)) {
              return void 0;
            }
            return parseObject(v, keyToParserMap);
          })(optional);
        },
        array: function(itemParser) {
          return createParamsParserBuilder(function(v) {
            if (!Array.isArray(v)) {
              return void 0;
            }
            return parseArray(v, itemParser);
          })(optional);
        }
      };
    }
    exports.ParamsParsers = {
      optional: createParamsParserBuilders(true),
      required: createParamsParserBuilders(false)
    };
    function parseParams(value, keyToParserMap) {
      var result = exports.ParamsParsers.required.object(keyToParserMap)(value);
      return result.succeeded ? result.value : void 0;
    }
    exports.parseParams = parseParams;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/compat.js
var require_compat = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/compat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.warnMissing = exports.warnDeprecation = void 0;
    function warnDeprecation(info) {
      var _a;
      console.warn([
        "".concat(info.name, " is deprecated."),
        info.alternative ? "use ".concat(info.alternative, " instead.") : "",
        (_a = info.postscript) !== null && _a !== void 0 ? _a : ""
      ].join(" "));
    }
    exports.warnDeprecation = warnDeprecation;
    function warnMissing(info) {
      console.warn([
        "Missing '".concat(info.key, "' of ").concat(info.target, " in ").concat(info.place, "."),
        "Please rebuild plugins with the latest core package."
      ].join(" "));
    }
    exports.warnMissing = warnMissing;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/disposing-util.js
var require_disposing_util = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/disposing-util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.disposeElement = void 0;
    function disposeElement(elem) {
      if (elem && elem.parentElement) {
        elem.parentElement.removeChild(elem);
      }
      return null;
    }
    exports.disposeElement = disposeElement;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/readonly-value.js
var require_readonly_value = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/readonly-value.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ReadonlyValue = void 0;
    var ReadonlyValue = (
      /** @class */
      function() {
        function ReadonlyValue2(value) {
          this.value_ = value;
        }
        ReadonlyValue2.create = function(value) {
          return [
            new ReadonlyValue2(value),
            function(rawValue, options) {
              value.setRawValue(rawValue, options);
            }
          ];
        };
        Object.defineProperty(ReadonlyValue2.prototype, "emitter", {
          /**
           * The event emitter for value changes.
           */
          get: function() {
            return this.value_.emitter;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(ReadonlyValue2.prototype, "rawValue", {
          /**
           * The raw value of the model.
           */
          get: function() {
            return this.value_.rawValue;
          },
          enumerable: false,
          configurable: true
        });
        return ReadonlyValue2;
      }()
    );
    exports.ReadonlyValue = ReadonlyValue;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/view-props.js
var require_view_props = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/view-props.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ViewProps = void 0;
    var class_name_1 = require_class_name();
    var reactive_1 = require_reactive2();
    var reactive_2 = require_reactive();
    var readonly_value_1 = require_readonly_value();
    var value_map_1 = require_value_map();
    var values_1 = require_values();
    var className = (0, class_name_1.ClassName)("");
    function valueToModifier(elem, modifier) {
      return (0, reactive_1.valueToClassName)(elem, className(void 0, modifier));
    }
    var ViewProps = (
      /** @class */
      function(_super) {
        __extends(ViewProps2, _super);
        function ViewProps2(valueMap) {
          var _a;
          var _this = this;
          var _b;
          _this = _super.call(this, valueMap) || this;
          _this.onDisabledChange_ = _this.onDisabledChange_.bind(_this);
          _this.onParentChange_ = _this.onParentChange_.bind(_this);
          _this.onParentGlobalDisabledChange_ = _this.onParentGlobalDisabledChange_.bind(_this);
          _a = readonly_value_1.ReadonlyValue.create((0, values_1.createValue)(_this.getGlobalDisabled_())), _this.globalDisabled_ = _a[0], _this.setGlobalDisabled_ = _a[1];
          _this.value("disabled").emitter.on("change", _this.onDisabledChange_);
          _this.value("parent").emitter.on("change", _this.onParentChange_);
          (_b = _this.get("parent")) === null || _b === void 0 ? void 0 : _b.globalDisabled.emitter.on("change", _this.onParentGlobalDisabledChange_);
          return _this;
        }
        ViewProps2.create = function(opt_initialValue) {
          var _a, _b, _c;
          var initialValue = opt_initialValue !== null && opt_initialValue !== void 0 ? opt_initialValue : {};
          return new ViewProps2(value_map_1.ValueMap.createCore({
            disabled: (_a = initialValue.disabled) !== null && _a !== void 0 ? _a : false,
            disposed: false,
            hidden: (_b = initialValue.hidden) !== null && _b !== void 0 ? _b : false,
            parent: (_c = initialValue.parent) !== null && _c !== void 0 ? _c : null
          }));
        };
        Object.defineProperty(ViewProps2.prototype, "globalDisabled", {
          get: function() {
            return this.globalDisabled_;
          },
          enumerable: false,
          configurable: true
        });
        ViewProps2.prototype.bindClassModifiers = function(elem) {
          (0, reactive_2.bindValue)(this.globalDisabled_, valueToModifier(elem, "disabled"));
          (0, reactive_2.bindValueMap)(this, "hidden", valueToModifier(elem, "hidden"));
        };
        ViewProps2.prototype.bindDisabled = function(target) {
          (0, reactive_2.bindValue)(this.globalDisabled_, function(disabled) {
            target.disabled = disabled;
          });
        };
        ViewProps2.prototype.bindTabIndex = function(elem) {
          (0, reactive_2.bindValue)(this.globalDisabled_, function(disabled) {
            elem.tabIndex = disabled ? -1 : 0;
          });
        };
        ViewProps2.prototype.handleDispose = function(callback) {
          this.value("disposed").emitter.on("change", function(disposed) {
            if (disposed) {
              callback();
            }
          });
        };
        ViewProps2.prototype.getGlobalDisabled_ = function() {
          var parent = this.get("parent");
          var parentDisabled = parent ? parent.globalDisabled.rawValue : false;
          return parentDisabled || this.get("disabled");
        };
        ViewProps2.prototype.updateGlobalDisabled_ = function() {
          this.setGlobalDisabled_(this.getGlobalDisabled_());
        };
        ViewProps2.prototype.onDisabledChange_ = function() {
          this.updateGlobalDisabled_();
        };
        ViewProps2.prototype.onParentGlobalDisabledChange_ = function() {
          this.updateGlobalDisabled_();
        };
        ViewProps2.prototype.onParentChange_ = function(ev) {
          var _a;
          var prevParent = ev.previousRawValue;
          prevParent === null || prevParent === void 0 ? void 0 : prevParent.globalDisabled.emitter.off("change", this.onParentGlobalDisabledChange_);
          (_a = this.get("parent")) === null || _a === void 0 ? void 0 : _a.globalDisabled.emitter.on("change", this.onParentGlobalDisabledChange_);
          this.updateGlobalDisabled_();
        };
        return ViewProps2;
      }(value_map_1.ValueMap)
    );
    exports.ViewProps = ViewProps;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/model/blade-positions.js
var require_blade_positions = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/model/blade-positions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getAllBladePositions = void 0;
    function getAllBladePositions() {
      return ["veryfirst", "first", "last", "verylast"];
    }
    exports.getAllBladePositions = getAllBladePositions;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/controller/blade.js
var require_blade2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/controller/blade.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BladeController = void 0;
    var compat_1 = require_compat();
    var disposing_util_1 = require_disposing_util();
    var view_props_1 = require_view_props();
    var class_name_1 = require_class_name();
    var blade_positions_1 = require_blade_positions();
    var className = (0, class_name_1.ClassName)("");
    var POS_TO_CLASS_NAME_MAP = {
      veryfirst: "vfst",
      first: "fst",
      last: "lst",
      verylast: "vlst"
    };
    var BladeController = (
      /** @class */
      function() {
        function BladeController2(config) {
          var _this = this;
          this.parent_ = null;
          this.blade = config.blade;
          this.view = config.view;
          this.viewProps = config.viewProps;
          var elem = this.view.element;
          this.blade.value("positions").emitter.on("change", function() {
            (0, blade_positions_1.getAllBladePositions)().forEach(function(pos) {
              elem.classList.remove(className(void 0, POS_TO_CLASS_NAME_MAP[pos]));
            });
            _this.blade.get("positions").forEach(function(pos) {
              elem.classList.add(className(void 0, POS_TO_CLASS_NAME_MAP[pos]));
            });
          });
          this.viewProps.handleDispose(function() {
            (0, disposing_util_1.disposeElement)(elem);
          });
        }
        Object.defineProperty(BladeController2.prototype, "parent", {
          get: function() {
            return this.parent_;
          },
          set: function(parent) {
            this.parent_ = parent;
            if (!("parent" in this.viewProps.valMap_)) {
              (0, compat_1.warnMissing)({
                key: "parent",
                target: view_props_1.ViewProps.name,
                place: "BladeController.parent"
              });
              return;
            }
            this.viewProps.set("parent", this.parent_ ? this.parent_.viewProps : null);
          },
          enumerable: false,
          configurable: true
        });
        return BladeController2;
      }()
    );
    exports.BladeController = BladeController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/dom-util.js
var require_dom_util = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/dom-util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.findNextTarget = exports.indexOfChildElement = exports.removeChildNodes = exports.removeChildElements = exports.removeElement = exports.insertElementAt = exports.createSvgIconElement = exports.getCanvasContext = exports.getWindowDocument = exports.supportsTouch = exports.disableTransitionTemporarily = exports.forceReflow = exports.SVG_NS = void 0;
    var type_util_1 = require_type_util();
    exports.SVG_NS = "http://www.w3.org/2000/svg";
    function forceReflow(element) {
      element.offsetHeight;
    }
    exports.forceReflow = forceReflow;
    function disableTransitionTemporarily(element, callback) {
      var t = element.style.transition;
      element.style.transition = "none";
      callback();
      element.style.transition = t;
    }
    exports.disableTransitionTemporarily = disableTransitionTemporarily;
    function supportsTouch(doc) {
      return doc.ontouchstart !== void 0;
    }
    exports.supportsTouch = supportsTouch;
    function getGlobalObject() {
      return globalThis;
    }
    function getWindowDocument() {
      var globalObj = (0, type_util_1.forceCast)(getGlobalObject());
      return globalObj.document;
    }
    exports.getWindowDocument = getWindowDocument;
    function getCanvasContext(canvasElement) {
      var win = canvasElement.ownerDocument.defaultView;
      if (!win) {
        return null;
      }
      var isBrowser = "document" in win;
      return isBrowser ? canvasElement.getContext("2d", {
        willReadFrequently: true
      }) : null;
    }
    exports.getCanvasContext = getCanvasContext;
    var ICON_ID_TO_INNER_HTML_MAP = {
      check: '<path d="M2 8l4 4l8 -8"/>',
      dropdown: '<path d="M5 7h6l-3 3 z"/>',
      p2dpad: '<path d="M8 4v8"/><path d="M4 8h8"/><circle cx="12" cy="12" r="1.2"/>'
    };
    function createSvgIconElement(document, iconId) {
      var elem = document.createElementNS(exports.SVG_NS, "svg");
      elem.innerHTML = ICON_ID_TO_INNER_HTML_MAP[iconId];
      return elem;
    }
    exports.createSvgIconElement = createSvgIconElement;
    function insertElementAt(parentElement, element, index) {
      parentElement.insertBefore(element, parentElement.children[index]);
    }
    exports.insertElementAt = insertElementAt;
    function removeElement(element) {
      if (element.parentElement) {
        element.parentElement.removeChild(element);
      }
    }
    exports.removeElement = removeElement;
    function removeChildElements(element) {
      while (element.children.length > 0) {
        element.removeChild(element.children[0]);
      }
    }
    exports.removeChildElements = removeChildElements;
    function removeChildNodes(element) {
      while (element.childNodes.length > 0) {
        element.removeChild(element.childNodes[0]);
      }
    }
    exports.removeChildNodes = removeChildNodes;
    function indexOfChildElement(element) {
      var parentElem = element.parentElement;
      if (!parentElem) {
        return -1;
      }
      var children = Array.prototype.slice.call(parentElem.children);
      return children.indexOf(element);
    }
    exports.indexOfChildElement = indexOfChildElement;
    function findNextTarget(ev) {
      if (ev.relatedTarget) {
        return (0, type_util_1.forceCast)(ev.relatedTarget);
      }
      if ("explicitOriginalTarget" in ev) {
        return ev.explicitOriginalTarget;
      }
      return null;
    }
    exports.findNextTarget = findNextTarget;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/label/view/label.js
var require_label = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/label/view/label.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.LabelView = void 0;
    var dom_util_1 = require_dom_util();
    var reactive_1 = require_reactive();
    var class_name_1 = require_class_name();
    var type_util_1 = require_type_util();
    var className = (0, class_name_1.ClassName)("lbl");
    function createLabelNode(doc, label) {
      var frag = doc.createDocumentFragment();
      var lineNodes = label.split("\n").map(function(line) {
        return doc.createTextNode(line);
      });
      lineNodes.forEach(function(lineNode, index) {
        if (index > 0) {
          frag.appendChild(doc.createElement("br"));
        }
        frag.appendChild(lineNode);
      });
      return frag;
    }
    var LabelView = (
      /** @class */
      function() {
        function LabelView2(doc, config) {
          var _this = this;
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var labelElem = doc.createElement("div");
          labelElem.classList.add(className("l"));
          (0, reactive_1.bindValueMap)(config.props, "label", function(value) {
            if ((0, type_util_1.isEmpty)(value)) {
              _this.element.classList.add(className(void 0, "nol"));
            } else {
              _this.element.classList.remove(className(void 0, "nol"));
              (0, dom_util_1.removeChildNodes)(labelElem);
              labelElem.appendChild(createLabelNode(doc, value));
            }
          });
          this.element.appendChild(labelElem);
          this.labelElement = labelElem;
          var valueElem = doc.createElement("div");
          valueElem.classList.add(className("v"));
          this.element.appendChild(valueElem);
          this.valueElement = valueElem;
        }
        return LabelView2;
      }()
    );
    exports.LabelView = LabelView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/label/controller/label.js
var require_label2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/label/controller/label.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.LabelController = void 0;
    var blade_1 = require_blade2();
    var label_1 = require_label();
    var LabelController = (
      /** @class */
      function(_super) {
        __extends(LabelController2, _super);
        function LabelController2(doc, config) {
          var _this = this;
          var viewProps = config.valueController.viewProps;
          _this = _super.call(this, __assign(__assign({}, config), { view: new label_1.LabelView(doc, {
            props: config.props,
            viewProps
          }), viewProps })) || this;
          _this.props = config.props;
          _this.valueController = config.valueController;
          _this.view.valueElement.appendChild(_this.valueController.view.element);
          return _this;
        }
        return LabelController2;
      }(blade_1.BladeController)
    );
    exports.LabelController = LabelController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/button/plugin.js
var require_plugin = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/button/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ButtonBladePlugin = void 0;
    var value_map_1 = require_value_map();
    var params_parsers_1 = require_params_parsers();
    var label_1 = require_label2();
    var button_1 = require_button();
    var button_2 = require_button3();
    exports.ButtonBladePlugin = {
      id: "button",
      type: "blade",
      accept: function(params) {
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          title: p.required.string,
          view: p.required.constant("button"),
          label: p.optional.string
        });
        return result ? { params: result } : null;
      },
      controller: function(args) {
        return new label_1.LabelController(args.document, {
          blade: args.blade,
          props: value_map_1.ValueMap.fromObject({
            label: args.params.label
          }),
          valueController: new button_2.ButtonController(args.document, {
            props: value_map_1.ValueMap.fromObject({
              title: args.params.title
            }),
            viewProps: args.viewProps
          })
        });
      },
      api: function(args) {
        if (!(args.controller instanceof label_1.LabelController)) {
          return null;
        }
        if (!(args.controller.valueController instanceof button_2.ButtonController)) {
          return null;
        }
        return new button_1.ButtonApi(args.controller);
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/controller/value-blade.js
var require_value_blade = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/controller/value-blade.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ValueBladeController = void 0;
    var blade_1 = require_blade2();
    var ValueBladeController = (
      /** @class */
      function(_super) {
        __extends(ValueBladeController2, _super);
        function ValueBladeController2(config) {
          var _this = _super.call(this, config) || this;
          _this.value = config.value;
          return _this;
        }
        return ValueBladeController2;
      }(blade_1.BladeController)
    );
    exports.ValueBladeController = ValueBladeController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/model/blade.js
var require_blade3 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/model/blade.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createBlade = void 0;
    var value_map_1 = require_value_map();
    var values_1 = require_values();
    var type_util_1 = require_type_util();
    function createBlade() {
      return new value_map_1.ValueMap({
        positions: (0, values_1.createValue)([], {
          equals: type_util_1.deepEqualsArray
        })
      });
    }
    exports.createBlade = createBlade;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/model/foldable.js
var require_foldable = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/model/foldable.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.bindFoldable = exports.getFoldableStyleHeight = exports.getFoldableStyleExpanded = exports.createFoldable = exports.Foldable = void 0;
    var dom_util_1 = require_dom_util();
    var reactive_1 = require_reactive();
    var value_map_1 = require_value_map();
    var type_util_1 = require_type_util();
    var Foldable = (
      /** @class */
      function(_super) {
        __extends(Foldable2, _super);
        function Foldable2(valueMap) {
          return _super.call(this, valueMap) || this;
        }
        Foldable2.create = function(expanded) {
          var coreObj = {
            completed: true,
            expanded,
            expandedHeight: null,
            shouldFixHeight: false,
            temporaryExpanded: null
          };
          var core = value_map_1.ValueMap.createCore(coreObj);
          return new Foldable2(core);
        };
        Object.defineProperty(Foldable2.prototype, "styleExpanded", {
          get: function() {
            var _a;
            return (_a = this.get("temporaryExpanded")) !== null && _a !== void 0 ? _a : this.get("expanded");
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Foldable2.prototype, "styleHeight", {
          get: function() {
            if (!this.styleExpanded) {
              return "0";
            }
            var exHeight = this.get("expandedHeight");
            if (this.get("shouldFixHeight") && !(0, type_util_1.isEmpty)(exHeight)) {
              return "".concat(exHeight, "px");
            }
            return "auto";
          },
          enumerable: false,
          configurable: true
        });
        Foldable2.prototype.bindExpandedClass = function(elem, expandedClassName) {
          var _this = this;
          var onExpand = function() {
            var expanded = _this.styleExpanded;
            if (expanded) {
              elem.classList.add(expandedClassName);
            } else {
              elem.classList.remove(expandedClassName);
            }
          };
          (0, reactive_1.bindValueMap)(this, "expanded", onExpand);
          (0, reactive_1.bindValueMap)(this, "temporaryExpanded", onExpand);
        };
        Foldable2.prototype.cleanUpTransition = function() {
          this.set("shouldFixHeight", false);
          this.set("expandedHeight", null);
          this.set("completed", true);
        };
        return Foldable2;
      }(value_map_1.ValueMap)
    );
    exports.Foldable = Foldable;
    function createFoldable(expanded) {
      return Foldable.create(expanded);
    }
    exports.createFoldable = createFoldable;
    function computeExpandedFolderHeight(folder, containerElement) {
      var height = 0;
      (0, dom_util_1.disableTransitionTemporarily)(containerElement, function() {
        folder.set("expandedHeight", null);
        folder.set("temporaryExpanded", true);
        (0, dom_util_1.forceReflow)(containerElement);
        height = containerElement.clientHeight;
        folder.set("temporaryExpanded", null);
        (0, dom_util_1.forceReflow)(containerElement);
      });
      return height;
    }
    function getFoldableStyleExpanded(foldable) {
      return foldable.styleExpanded;
    }
    exports.getFoldableStyleExpanded = getFoldableStyleExpanded;
    function getFoldableStyleHeight(foldable) {
      return foldable.styleHeight;
    }
    exports.getFoldableStyleHeight = getFoldableStyleHeight;
    function applyHeight(foldable, elem) {
      elem.style.height = foldable.styleHeight;
    }
    function bindFoldable(foldable, elem) {
      foldable.value("expanded").emitter.on("beforechange", function() {
        foldable.set("completed", false);
        if ((0, type_util_1.isEmpty)(foldable.get("expandedHeight"))) {
          var h = computeExpandedFolderHeight(foldable, elem);
          if (h > 0) {
            foldable.set("expandedHeight", h);
          }
        }
        foldable.set("shouldFixHeight", true);
        (0, dom_util_1.forceReflow)(elem);
      });
      foldable.emitter.on("change", function() {
        applyHeight(foldable, elem);
      });
      applyHeight(foldable, elem);
      elem.addEventListener("transitionend", function(ev) {
        if (ev.propertyName !== "height") {
          return;
        }
        foldable.cleanUpTransition();
      });
    }
    exports.bindFoldable = bindFoldable;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/api/rack-like-api.js
var require_rack_like_api = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/api/rack-like-api.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RackLikeApi = void 0;
    var blade_1 = require_blade();
    var RackLikeApi = (
      /** @class */
      function(_super) {
        __extends(RackLikeApi2, _super);
        function RackLikeApi2(controller, rackApi) {
          var _this = _super.call(this, controller) || this;
          _this.rackApi_ = rackApi;
          return _this;
        }
        return RackLikeApi2;
      }(blade_1.BladeApi)
    );
    exports.RackLikeApi = RackLikeApi;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/api/blade-rack.js
var require_blade_rack = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/api/blade-rack.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.addTabAsBlade = exports.addSeparatorAsBlade = exports.addFolderAsBlade = exports.addButtonAsBlade = void 0;
    function addButtonAsBlade(api, params) {
      return api.addBlade(__assign(__assign({}, params), { view: "button" }));
    }
    exports.addButtonAsBlade = addButtonAsBlade;
    function addFolderAsBlade(api, params) {
      return api.addBlade(__assign(__assign({}, params), { view: "folder" }));
    }
    exports.addFolderAsBlade = addFolderAsBlade;
    function addSeparatorAsBlade(api, opt_params) {
      var params = opt_params !== null && opt_params !== void 0 ? opt_params : {};
      return api.addBlade(__assign(__assign({}, params), { view: "separator" }));
    }
    exports.addSeparatorAsBlade = addSeparatorAsBlade;
    function addTabAsBlade(api, params) {
      return api.addBlade(__assign(__assign({}, params), { view: "tab" }));
    }
    exports.addTabAsBlade = addTabAsBlade;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/model/nested-ordered-set.js
var require_nested_ordered_set = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/model/nested-ordered-set.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NestedOrderedSet = void 0;
    var emitter_1 = require_emitter();
    var tp_error_1 = require_tp_error();
    var NestedOrderedSet = (
      /** @class */
      function() {
        function NestedOrderedSet2(extract) {
          this.emitter = new emitter_1.Emitter();
          this.items_ = [];
          this.cache_ = /* @__PURE__ */ new Set();
          this.onSubListAdd_ = this.onSubListAdd_.bind(this);
          this.onSubListRemove_ = this.onSubListRemove_.bind(this);
          this.extract_ = extract;
        }
        Object.defineProperty(NestedOrderedSet2.prototype, "items", {
          get: function() {
            return this.items_;
          },
          enumerable: false,
          configurable: true
        });
        NestedOrderedSet2.prototype.allItems = function() {
          return Array.from(this.cache_);
        };
        NestedOrderedSet2.prototype.find = function(callback) {
          for (var _i = 0, _a = this.allItems(); _i < _a.length; _i++) {
            var item = _a[_i];
            if (callback(item)) {
              return item;
            }
          }
          return null;
        };
        NestedOrderedSet2.prototype.includes = function(item) {
          return this.cache_.has(item);
        };
        NestedOrderedSet2.prototype.add = function(item, opt_index) {
          var _this = this;
          if (this.includes(item)) {
            throw tp_error_1.TpError.shouldNeverHappen();
          }
          var index = opt_index !== void 0 ? opt_index : this.items_.length;
          this.items_.splice(index, 0, item);
          this.cache_.add(item);
          var subList = this.extract_(item);
          if (subList) {
            subList.emitter.on("add", this.onSubListAdd_);
            subList.emitter.on("remove", this.onSubListRemove_);
            subList.allItems().forEach(function(item2) {
              _this.cache_.add(item2);
            });
          }
          this.emitter.emit("add", {
            index,
            item,
            root: this,
            target: this
          });
        };
        NestedOrderedSet2.prototype.remove = function(item) {
          var index = this.items_.indexOf(item);
          if (index < 0) {
            return;
          }
          this.items_.splice(index, 1);
          this.cache_.delete(item);
          var subList = this.extract_(item);
          if (subList) {
            subList.emitter.off("add", this.onSubListAdd_);
            subList.emitter.off("remove", this.onSubListRemove_);
          }
          this.emitter.emit("remove", {
            index,
            item,
            root: this,
            target: this
          });
        };
        NestedOrderedSet2.prototype.onSubListAdd_ = function(ev) {
          this.cache_.add(ev.item);
          this.emitter.emit("add", {
            index: ev.index,
            item: ev.item,
            root: this,
            target: ev.target
          });
        };
        NestedOrderedSet2.prototype.onSubListRemove_ = function(ev) {
          this.cache_.delete(ev.item);
          this.emitter.emit("remove", {
            index: ev.index,
            item: ev.item,
            root: this,
            target: ev.target
          });
        };
        return NestedOrderedSet2;
      }()
    );
    exports.NestedOrderedSet = NestedOrderedSet;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/input-binding/api/input-binding.js
var require_input_binding = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/input-binding/api/input-binding.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InputBindingApi = void 0;
    var emitter_1 = require_emitter();
    var type_util_1 = require_type_util();
    var blade_1 = require_blade();
    var tp_event_1 = require_tp_event();
    var InputBindingApi = (
      /** @class */
      function(_super) {
        __extends(InputBindingApi2, _super);
        function InputBindingApi2(controller) {
          var _this = _super.call(this, controller) || this;
          _this.onBindingChange_ = _this.onBindingChange_.bind(_this);
          _this.emitter_ = new emitter_1.Emitter();
          _this.controller_.binding.emitter.on("change", _this.onBindingChange_);
          return _this;
        }
        Object.defineProperty(InputBindingApi2.prototype, "label", {
          get: function() {
            return this.controller_.props.get("label");
          },
          set: function(label) {
            this.controller_.props.set("label", label);
          },
          enumerable: false,
          configurable: true
        });
        InputBindingApi2.prototype.on = function(eventName, handler) {
          var bh = handler.bind(this);
          this.emitter_.on(eventName, function(ev) {
            bh(ev.event);
          });
          return this;
        };
        InputBindingApi2.prototype.refresh = function() {
          this.controller_.binding.read();
        };
        InputBindingApi2.prototype.onBindingChange_ = function(ev) {
          var value = ev.sender.target.read();
          this.emitter_.emit("change", {
            event: new tp_event_1.TpChangeEvent(this, (0, type_util_1.forceCast)(value), this.controller_.binding.target.presetKey, ev.options.last)
          });
        };
        return InputBindingApi2;
      }(blade_1.BladeApi)
    );
    exports.InputBindingApi = InputBindingApi;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/input-binding/controller/input-binding.js
var require_input_binding2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/input-binding/controller/input-binding.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InputBindingController = void 0;
    var label_1 = require_label2();
    var InputBindingController = (
      /** @class */
      function(_super) {
        __extends(InputBindingController2, _super);
        function InputBindingController2(doc, config) {
          var _this = _super.call(this, doc, config) || this;
          _this.binding = config.binding;
          return _this;
        }
        return InputBindingController2;
      }(label_1.LabelController)
    );
    exports.InputBindingController = InputBindingController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/monitor-binding/api/monitor-binding.js
var require_monitor_binding = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/monitor-binding/api/monitor-binding.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MonitorBindingApi = void 0;
    var emitter_1 = require_emitter();
    var type_util_1 = require_type_util();
    var blade_1 = require_blade();
    var tp_event_1 = require_tp_event();
    var MonitorBindingApi = (
      /** @class */
      function(_super) {
        __extends(MonitorBindingApi2, _super);
        function MonitorBindingApi2(controller) {
          var _this = _super.call(this, controller) || this;
          _this.onBindingUpdate_ = _this.onBindingUpdate_.bind(_this);
          _this.emitter_ = new emitter_1.Emitter();
          _this.controller_.binding.emitter.on("update", _this.onBindingUpdate_);
          return _this;
        }
        Object.defineProperty(MonitorBindingApi2.prototype, "label", {
          get: function() {
            return this.controller_.props.get("label");
          },
          set: function(label) {
            this.controller_.props.set("label", label);
          },
          enumerable: false,
          configurable: true
        });
        MonitorBindingApi2.prototype.on = function(eventName, handler) {
          var bh = handler.bind(this);
          this.emitter_.on(eventName, function(ev) {
            bh(ev.event);
          });
          return this;
        };
        MonitorBindingApi2.prototype.refresh = function() {
          this.controller_.binding.read();
        };
        MonitorBindingApi2.prototype.onBindingUpdate_ = function(ev) {
          var value = ev.sender.target.read();
          this.emitter_.emit("update", {
            event: new tp_event_1.TpUpdateEvent(this, (0, type_util_1.forceCast)(value), this.controller_.binding.target.presetKey)
          });
        };
        return MonitorBindingApi2;
      }(blade_1.BladeApi)
    );
    exports.MonitorBindingApi = MonitorBindingApi;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/monitor-binding/controller/monitor-binding.js
var require_monitor_binding2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/monitor-binding/controller/monitor-binding.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MonitorBindingController = void 0;
    var label_1 = require_label2();
    var MonitorBindingController = (
      /** @class */
      function(_super) {
        __extends(MonitorBindingController2, _super);
        function MonitorBindingController2(doc, config) {
          var _this = _super.call(this, doc, config) || this;
          _this.binding = config.binding;
          _this.viewProps.bindDisabled(_this.binding.ticker);
          _this.viewProps.handleDispose(function() {
            _this.binding.dispose();
          });
          return _this;
        }
        return MonitorBindingController2;
      }(label_1.LabelController)
    );
    exports.MonitorBindingController = MonitorBindingController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/rack/api/rack.js
var require_rack = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/rack/api/rack.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RackApi = exports.findSubBladeApiSet = void 0;
    var target_1 = require_target();
    var emitter_1 = require_emitter();
    var tp_error_1 = require_tp_error();
    var type_util_1 = require_type_util();
    var blade_1 = require_blade();
    var blade_rack_1 = require_blade_rack();
    var rack_like_api_1 = require_rack_like_api();
    var tp_event_1 = require_tp_event();
    var value_blade_1 = require_value_blade();
    var nested_ordered_set_1 = require_nested_ordered_set();
    var input_binding_1 = require_input_binding();
    var input_binding_2 = require_input_binding2();
    var monitor_binding_1 = require_monitor_binding();
    var monitor_binding_2 = require_monitor_binding2();
    function findSubBladeApiSet(api) {
      if (api instanceof RackApi) {
        return api["apiSet_"];
      }
      if (api instanceof rack_like_api_1.RackLikeApi) {
        return api["rackApi_"]["apiSet_"];
      }
      return null;
    }
    exports.findSubBladeApiSet = findSubBladeApiSet;
    function getApiByController(apiSet, controller) {
      var api = apiSet.find(function(api2) {
        return api2.controller_ === controller;
      });
      if (!api) {
        throw tp_error_1.TpError.shouldNeverHappen();
      }
      return api;
    }
    function createBindingTarget(obj, key, opt_id) {
      if (!target_1.BindingTarget.isBindable(obj)) {
        throw tp_error_1.TpError.notBindable();
      }
      return new target_1.BindingTarget(obj, key, opt_id);
    }
    var RackApi = (
      /** @class */
      function(_super) {
        __extends(RackApi2, _super);
        function RackApi2(controller, pool) {
          var _this = _super.call(this, controller) || this;
          _this.onRackAdd_ = _this.onRackAdd_.bind(_this);
          _this.onRackRemove_ = _this.onRackRemove_.bind(_this);
          _this.onRackInputChange_ = _this.onRackInputChange_.bind(_this);
          _this.onRackMonitorUpdate_ = _this.onRackMonitorUpdate_.bind(_this);
          _this.emitter_ = new emitter_1.Emitter();
          _this.apiSet_ = new nested_ordered_set_1.NestedOrderedSet(findSubBladeApiSet);
          _this.pool_ = pool;
          var rack = _this.controller_.rack;
          rack.emitter.on("add", _this.onRackAdd_);
          rack.emitter.on("remove", _this.onRackRemove_);
          rack.emitter.on("inputchange", _this.onRackInputChange_);
          rack.emitter.on("monitorupdate", _this.onRackMonitorUpdate_);
          rack.children.forEach(function(bc) {
            _this.setUpApi_(bc);
          });
          return _this;
        }
        Object.defineProperty(RackApi2.prototype, "children", {
          get: function() {
            var _this = this;
            return this.controller_.rack.children.map(function(bc) {
              return getApiByController(_this.apiSet_, bc);
            });
          },
          enumerable: false,
          configurable: true
        });
        RackApi2.prototype.addInput = function(object, key, opt_params) {
          var params = opt_params !== null && opt_params !== void 0 ? opt_params : {};
          var doc = this.controller_.view.element.ownerDocument;
          var bc = this.pool_.createInput(doc, createBindingTarget(object, key, params.presetKey), params);
          var api = new input_binding_1.InputBindingApi(bc);
          return this.add(api, params.index);
        };
        RackApi2.prototype.addMonitor = function(object, key, opt_params) {
          var params = opt_params !== null && opt_params !== void 0 ? opt_params : {};
          var doc = this.controller_.view.element.ownerDocument;
          var bc = this.pool_.createMonitor(doc, createBindingTarget(object, key), params);
          var api = new monitor_binding_1.MonitorBindingApi(bc);
          return (0, type_util_1.forceCast)(this.add(api, params.index));
        };
        RackApi2.prototype.addFolder = function(params) {
          return (0, blade_rack_1.addFolderAsBlade)(this, params);
        };
        RackApi2.prototype.addButton = function(params) {
          return (0, blade_rack_1.addButtonAsBlade)(this, params);
        };
        RackApi2.prototype.addSeparator = function(opt_params) {
          return (0, blade_rack_1.addSeparatorAsBlade)(this, opt_params);
        };
        RackApi2.prototype.addTab = function(params) {
          return (0, blade_rack_1.addTabAsBlade)(this, params);
        };
        RackApi2.prototype.add = function(api, opt_index) {
          this.controller_.rack.add(api.controller_, opt_index);
          var gapi = this.apiSet_.find(function(a) {
            return a.controller_ === api.controller_;
          });
          if (gapi) {
            this.apiSet_.remove(gapi);
          }
          this.apiSet_.add(api);
          return api;
        };
        RackApi2.prototype.remove = function(api) {
          this.controller_.rack.remove(api.controller_);
        };
        RackApi2.prototype.addBlade = function(params) {
          var doc = this.controller_.view.element.ownerDocument;
          var bc = this.pool_.createBlade(doc, params);
          var api = this.pool_.createBladeApi(bc);
          return this.add(api, params.index);
        };
        RackApi2.prototype.on = function(eventName, handler) {
          var bh = handler.bind(this);
          this.emitter_.on(eventName, function(ev) {
            bh(ev.event);
          });
          return this;
        };
        RackApi2.prototype.setUpApi_ = function(bc) {
          var api = this.apiSet_.find(function(api2) {
            return api2.controller_ === bc;
          });
          if (!api) {
            this.apiSet_.add(this.pool_.createBladeApi(bc));
          }
        };
        RackApi2.prototype.onRackAdd_ = function(ev) {
          this.setUpApi_(ev.bladeController);
        };
        RackApi2.prototype.onRackRemove_ = function(ev) {
          if (ev.isRoot) {
            var api = getApiByController(this.apiSet_, ev.bladeController);
            this.apiSet_.remove(api);
          }
        };
        RackApi2.prototype.onRackInputChange_ = function(ev) {
          var bc = ev.bladeController;
          if (bc instanceof input_binding_2.InputBindingController) {
            var api = getApiByController(this.apiSet_, bc);
            var binding = bc.binding;
            this.emitter_.emit("change", {
              event: new tp_event_1.TpChangeEvent(api, (0, type_util_1.forceCast)(binding.target.read()), binding.target.presetKey, ev.options.last)
            });
          } else if (bc instanceof value_blade_1.ValueBladeController) {
            var api = getApiByController(this.apiSet_, bc);
            this.emitter_.emit("change", {
              event: new tp_event_1.TpChangeEvent(api, bc.value.rawValue, void 0, ev.options.last)
            });
          }
        };
        RackApi2.prototype.onRackMonitorUpdate_ = function(ev) {
          if (!(ev.bladeController instanceof monitor_binding_2.MonitorBindingController)) {
            throw tp_error_1.TpError.shouldNeverHappen();
          }
          var api = getApiByController(this.apiSet_, ev.bladeController);
          var binding = ev.bladeController.binding;
          this.emitter_.emit("update", {
            event: new tp_event_1.TpUpdateEvent(api, (0, type_util_1.forceCast)(binding.target.read()), binding.target.presetKey)
          });
        };
        return RackApi2;
      }(blade_1.BladeApi)
    );
    exports.RackApi = RackApi;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/folder/api/folder.js
var require_folder = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/folder/api/folder.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FolderApi = void 0;
    var emitter_1 = require_emitter();
    var rack_like_api_1 = require_rack_like_api();
    var tp_event_1 = require_tp_event();
    var rack_1 = require_rack();
    var FolderApi = (
      /** @class */
      function(_super) {
        __extends(FolderApi2, _super);
        function FolderApi2(controller, pool) {
          var _this = _super.call(this, controller, new rack_1.RackApi(controller.rackController, pool)) || this;
          _this.emitter_ = new emitter_1.Emitter();
          _this.controller_.foldable.value("expanded").emitter.on("change", function(ev) {
            _this.emitter_.emit("fold", {
              event: new tp_event_1.TpFoldEvent(_this, ev.sender.rawValue)
            });
          });
          _this.rackApi_.on("change", function(ev) {
            _this.emitter_.emit("change", {
              event: ev
            });
          });
          _this.rackApi_.on("update", function(ev) {
            _this.emitter_.emit("update", {
              event: ev
            });
          });
          return _this;
        }
        Object.defineProperty(FolderApi2.prototype, "expanded", {
          get: function() {
            return this.controller_.foldable.get("expanded");
          },
          set: function(expanded) {
            this.controller_.foldable.set("expanded", expanded);
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(FolderApi2.prototype, "title", {
          get: function() {
            return this.controller_.props.get("title");
          },
          set: function(title) {
            this.controller_.props.set("title", title);
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(FolderApi2.prototype, "children", {
          get: function() {
            return this.rackApi_.children;
          },
          enumerable: false,
          configurable: true
        });
        FolderApi2.prototype.addInput = function(object, key, opt_params) {
          return this.rackApi_.addInput(object, key, opt_params);
        };
        FolderApi2.prototype.addMonitor = function(object, key, opt_params) {
          return this.rackApi_.addMonitor(object, key, opt_params);
        };
        FolderApi2.prototype.addFolder = function(params) {
          return this.rackApi_.addFolder(params);
        };
        FolderApi2.prototype.addButton = function(params) {
          return this.rackApi_.addButton(params);
        };
        FolderApi2.prototype.addSeparator = function(opt_params) {
          return this.rackApi_.addSeparator(opt_params);
        };
        FolderApi2.prototype.addTab = function(params) {
          return this.rackApi_.addTab(params);
        };
        FolderApi2.prototype.add = function(api, opt_index) {
          return this.rackApi_.add(api, opt_index);
        };
        FolderApi2.prototype.remove = function(api) {
          this.rackApi_.remove(api);
        };
        FolderApi2.prototype.addBlade = function(params) {
          return this.rackApi_.addBlade(params);
        };
        FolderApi2.prototype.on = function(eventName, handler) {
          var bh = handler.bind(this);
          this.emitter_.on(eventName, function(ev) {
            bh(ev.event);
          });
          return this;
        };
        return FolderApi2;
      }(rack_like_api_1.RackLikeApi)
    );
    exports.FolderApi = FolderApi;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/controller/rack-like.js
var require_rack_like = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/controller/rack-like.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RackLikeController = void 0;
    var blade_1 = require_blade2();
    var RackLikeController = (
      /** @class */
      function(_super) {
        __extends(RackLikeController2, _super);
        function RackLikeController2(config) {
          var _this = _super.call(this, {
            blade: config.blade,
            view: config.view,
            viewProps: config.rackController.viewProps
          }) || this;
          _this.rackController = config.rackController;
          return _this;
        }
        return RackLikeController2;
      }(blade_1.BladeController)
    );
    exports.RackLikeController = RackLikeController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/view/plain.js
var require_plain = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/view/plain.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PlainView = void 0;
    var class_name_1 = require_class_name();
    var PlainView = (
      /** @class */
      function() {
        function PlainView2(doc, config) {
          var className = (0, class_name_1.ClassName)(config.viewName);
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
        }
        return PlainView2;
      }()
    );
    exports.PlainView = PlainView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/model/blade-rack.js
var require_blade_rack2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/model/blade-rack.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BladeRack = void 0;
    var compat_1 = require_compat();
    var emitter_1 = require_emitter();
    var tp_error_1 = require_tp_error();
    var type_util_1 = require_type_util();
    var input_binding_1 = require_input_binding2();
    var monitor_binding_1 = require_monitor_binding2();
    var rack_1 = require_rack2();
    var rack_like_1 = require_rack_like();
    var value_blade_1 = require_value_blade();
    var nested_ordered_set_1 = require_nested_ordered_set();
    function findInputBindingController(bcs, b) {
      for (var i = 0; i < bcs.length; i++) {
        var bc = bcs[i];
        if (bc instanceof input_binding_1.InputBindingController && bc.binding === b) {
          return bc;
        }
      }
      return null;
    }
    function findMonitorBindingController(bcs, b) {
      for (var i = 0; i < bcs.length; i++) {
        var bc = bcs[i];
        if (bc instanceof monitor_binding_1.MonitorBindingController && bc.binding === b) {
          return bc;
        }
      }
      return null;
    }
    function findValueBladeController(bcs, v) {
      for (var i = 0; i < bcs.length; i++) {
        var bc = bcs[i];
        if (bc instanceof value_blade_1.ValueBladeController && bc.value === v) {
          return bc;
        }
      }
      return null;
    }
    function findSubRack(bc) {
      if (bc instanceof rack_1.RackController) {
        return bc.rack;
      }
      if (bc instanceof rack_like_1.RackLikeController) {
        return bc.rackController.rack;
      }
      return null;
    }
    function findSubBladeControllerSet(bc) {
      var rack = findSubRack(bc);
      return rack ? rack["bcSet_"] : null;
    }
    var BladeRack = (
      /** @class */
      function() {
        function BladeRack2(config) {
          var _a, _b;
          this.onBladePositionsChange_ = this.onBladePositionsChange_.bind(this);
          this.onSetAdd_ = this.onSetAdd_.bind(this);
          this.onSetRemove_ = this.onSetRemove_.bind(this);
          this.onChildDispose_ = this.onChildDispose_.bind(this);
          this.onChildPositionsChange_ = this.onChildPositionsChange_.bind(this);
          this.onChildInputChange_ = this.onChildInputChange_.bind(this);
          this.onChildMonitorUpdate_ = this.onChildMonitorUpdate_.bind(this);
          this.onChildValueChange_ = this.onChildValueChange_.bind(this);
          this.onChildViewPropsChange_ = this.onChildViewPropsChange_.bind(this);
          this.onDescendantLayout_ = this.onDescendantLayout_.bind(this);
          this.onDescendantInputChange_ = this.onDescendantInputChange_.bind(this);
          this.onDescendantMonitorUpdate_ = this.onDescendantMonitorUpdate_.bind(this);
          this.emitter = new emitter_1.Emitter();
          this.blade_ = (_a = config.blade) !== null && _a !== void 0 ? _a : null;
          (_b = this.blade_) === null || _b === void 0 ? void 0 : _b.value("positions").emitter.on("change", this.onBladePositionsChange_);
          this.viewProps = config.viewProps;
          this.bcSet_ = new nested_ordered_set_1.NestedOrderedSet(findSubBladeControllerSet);
          this.bcSet_.emitter.on("add", this.onSetAdd_);
          this.bcSet_.emitter.on("remove", this.onSetRemove_);
        }
        Object.defineProperty(BladeRack2.prototype, "children", {
          get: function() {
            return this.bcSet_.items;
          },
          enumerable: false,
          configurable: true
        });
        BladeRack2.prototype.add = function(bc, opt_index) {
          var _a;
          (_a = bc.parent) === null || _a === void 0 ? void 0 : _a.remove(bc);
          if ((0, type_util_1.isPropertyWritable)(bc, "parent")) {
            bc.parent = this;
          } else {
            bc["parent_"] = this;
            (0, compat_1.warnMissing)({
              key: "parent",
              target: "BladeController",
              place: "BladeRack.add"
            });
          }
          this.bcSet_.add(bc, opt_index);
        };
        BladeRack2.prototype.remove = function(bc) {
          if ((0, type_util_1.isPropertyWritable)(bc, "parent")) {
            bc.parent = null;
          } else {
            bc["parent_"] = null;
            (0, compat_1.warnMissing)({
              key: "parent",
              target: "BladeController",
              place: "BladeRack.remove"
            });
          }
          this.bcSet_.remove(bc);
        };
        BladeRack2.prototype.find = function(controllerClass) {
          return (0, type_util_1.forceCast)(this.bcSet_.allItems().filter(function(bc) {
            return bc instanceof controllerClass;
          }));
        };
        BladeRack2.prototype.onSetAdd_ = function(ev) {
          this.updatePositions_();
          var isRoot = ev.target === ev.root;
          this.emitter.emit("add", {
            bladeController: ev.item,
            index: ev.index,
            isRoot,
            sender: this
          });
          if (!isRoot) {
            return;
          }
          var bc = ev.item;
          bc.viewProps.emitter.on("change", this.onChildViewPropsChange_);
          bc.blade.value("positions").emitter.on("change", this.onChildPositionsChange_);
          bc.viewProps.handleDispose(this.onChildDispose_);
          if (bc instanceof input_binding_1.InputBindingController) {
            bc.binding.emitter.on("change", this.onChildInputChange_);
          } else if (bc instanceof monitor_binding_1.MonitorBindingController) {
            bc.binding.emitter.on("update", this.onChildMonitorUpdate_);
          } else if (bc instanceof value_blade_1.ValueBladeController) {
            bc.value.emitter.on("change", this.onChildValueChange_);
          } else {
            var rack = findSubRack(bc);
            if (rack) {
              var emitter = rack.emitter;
              emitter.on("layout", this.onDescendantLayout_);
              emitter.on("inputchange", this.onDescendantInputChange_);
              emitter.on("monitorupdate", this.onDescendantMonitorUpdate_);
            }
          }
        };
        BladeRack2.prototype.onSetRemove_ = function(ev) {
          this.updatePositions_();
          var isRoot = ev.target === ev.root;
          this.emitter.emit("remove", {
            bladeController: ev.item,
            isRoot,
            sender: this
          });
          if (!isRoot) {
            return;
          }
          var bc = ev.item;
          if (bc instanceof input_binding_1.InputBindingController) {
            bc.binding.emitter.off("change", this.onChildInputChange_);
          } else if (bc instanceof monitor_binding_1.MonitorBindingController) {
            bc.binding.emitter.off("update", this.onChildMonitorUpdate_);
          } else if (bc instanceof value_blade_1.ValueBladeController) {
            bc.value.emitter.off("change", this.onChildValueChange_);
          } else {
            var rack = findSubRack(bc);
            if (rack) {
              var emitter = rack.emitter;
              emitter.off("layout", this.onDescendantLayout_);
              emitter.off("inputchange", this.onDescendantInputChange_);
              emitter.off("monitorupdate", this.onDescendantMonitorUpdate_);
            }
          }
        };
        BladeRack2.prototype.updatePositions_ = function() {
          var _this = this;
          var visibleItems = this.bcSet_.items.filter(function(bc) {
            return !bc.viewProps.get("hidden");
          });
          var firstVisibleItem = visibleItems[0];
          var lastVisibleItem = visibleItems[visibleItems.length - 1];
          this.bcSet_.items.forEach(function(bc) {
            var ps = [];
            if (bc === firstVisibleItem) {
              ps.push("first");
              if (!_this.blade_ || _this.blade_.get("positions").includes("veryfirst")) {
                ps.push("veryfirst");
              }
            }
            if (bc === lastVisibleItem) {
              ps.push("last");
              if (!_this.blade_ || _this.blade_.get("positions").includes("verylast")) {
                ps.push("verylast");
              }
            }
            bc.blade.set("positions", ps);
          });
        };
        BladeRack2.prototype.onChildPositionsChange_ = function() {
          this.updatePositions_();
          this.emitter.emit("layout", {
            sender: this
          });
        };
        BladeRack2.prototype.onChildViewPropsChange_ = function(_ev) {
          this.updatePositions_();
          this.emitter.emit("layout", {
            sender: this
          });
        };
        BladeRack2.prototype.onChildDispose_ = function() {
          var _this = this;
          var disposedUcs = this.bcSet_.items.filter(function(bc) {
            return bc.viewProps.get("disposed");
          });
          disposedUcs.forEach(function(bc) {
            _this.bcSet_.remove(bc);
          });
        };
        BladeRack2.prototype.onChildInputChange_ = function(ev) {
          var bc = findInputBindingController(this.find(input_binding_1.InputBindingController), ev.sender);
          if (!bc) {
            throw tp_error_1.TpError.alreadyDisposed();
          }
          this.emitter.emit("inputchange", {
            bladeController: bc,
            options: ev.options,
            sender: this
          });
        };
        BladeRack2.prototype.onChildMonitorUpdate_ = function(ev) {
          var bc = findMonitorBindingController(this.find(monitor_binding_1.MonitorBindingController), ev.sender);
          if (!bc) {
            throw tp_error_1.TpError.alreadyDisposed();
          }
          this.emitter.emit("monitorupdate", {
            bladeController: bc,
            sender: this
          });
        };
        BladeRack2.prototype.onChildValueChange_ = function(ev) {
          var bc = findValueBladeController(this.find(value_blade_1.ValueBladeController), ev.sender);
          if (!bc) {
            throw tp_error_1.TpError.alreadyDisposed();
          }
          this.emitter.emit("inputchange", {
            bladeController: bc,
            options: ev.options,
            sender: this
          });
        };
        BladeRack2.prototype.onDescendantLayout_ = function(_) {
          this.updatePositions_();
          this.emitter.emit("layout", {
            sender: this
          });
        };
        BladeRack2.prototype.onDescendantInputChange_ = function(ev) {
          this.emitter.emit("inputchange", {
            bladeController: ev.bladeController,
            options: ev.options,
            sender: this
          });
        };
        BladeRack2.prototype.onDescendantMonitorUpdate_ = function(ev) {
          this.emitter.emit("monitorupdate", {
            bladeController: ev.bladeController,
            sender: this
          });
        };
        BladeRack2.prototype.onBladePositionsChange_ = function() {
          this.updatePositions_();
        };
        return BladeRack2;
      }()
    );
    exports.BladeRack = BladeRack;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/rack/controller/rack.js
var require_rack2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/rack/controller/rack.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RackController = void 0;
    var dom_util_1 = require_dom_util();
    var plain_1 = require_plain();
    var blade_1 = require_blade2();
    var blade_rack_1 = require_blade_rack2();
    var RackController = (
      /** @class */
      function(_super) {
        __extends(RackController2, _super);
        function RackController2(doc, config) {
          var _this = _super.call(this, __assign(__assign({}, config), { view: new plain_1.PlainView(doc, {
            viewName: "brk",
            viewProps: config.viewProps
          }) })) || this;
          _this.onRackAdd_ = _this.onRackAdd_.bind(_this);
          _this.onRackRemove_ = _this.onRackRemove_.bind(_this);
          var rack = new blade_rack_1.BladeRack({
            blade: config.root ? void 0 : config.blade,
            viewProps: config.viewProps
          });
          rack.emitter.on("add", _this.onRackAdd_);
          rack.emitter.on("remove", _this.onRackRemove_);
          _this.rack = rack;
          _this.viewProps.handleDispose(function() {
            for (var i = _this.rack.children.length - 1; i >= 0; i--) {
              var bc = _this.rack.children[i];
              bc.viewProps.set("disposed", true);
            }
          });
          return _this;
        }
        RackController2.prototype.onRackAdd_ = function(ev) {
          if (!ev.isRoot) {
            return;
          }
          (0, dom_util_1.insertElementAt)(this.view.element, ev.bladeController.view.element, ev.index);
        };
        RackController2.prototype.onRackRemove_ = function(ev) {
          if (!ev.isRoot) {
            return;
          }
          (0, dom_util_1.removeElement)(ev.bladeController.view.element);
        };
        return RackController2;
      }(blade_1.BladeController)
    );
    exports.RackController = RackController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/common/view/blade-container.js
var require_blade_container = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/common/view/blade-container.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.bladeContainerClassName = void 0;
    var class_name_1 = require_class_name();
    exports.bladeContainerClassName = (0, class_name_1.ClassName)("cnt");
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/folder/view/folder.js
var require_folder2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/folder/view/folder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FolderView = void 0;
    var reactive_1 = require_reactive();
    var class_name_1 = require_class_name();
    var reactive_2 = require_reactive2();
    var type_util_1 = require_type_util();
    var blade_container_1 = require_blade_container();
    var FolderView = (
      /** @class */
      function() {
        function FolderView2(doc, config) {
          var _this = this;
          var _a;
          this.className_ = (0, class_name_1.ClassName)((_a = config.viewName) !== null && _a !== void 0 ? _a : "fld");
          this.element = doc.createElement("div");
          this.element.classList.add(this.className_(), (0, blade_container_1.bladeContainerClassName)());
          config.viewProps.bindClassModifiers(this.element);
          this.foldable_ = config.foldable;
          this.foldable_.bindExpandedClass(this.element, this.className_(void 0, "expanded"));
          (0, reactive_1.bindValueMap)(this.foldable_, "completed", (0, reactive_2.valueToClassName)(this.element, this.className_(void 0, "cpl")));
          var buttonElem = doc.createElement("button");
          buttonElem.classList.add(this.className_("b"));
          (0, reactive_1.bindValueMap)(config.props, "title", function(title) {
            if ((0, type_util_1.isEmpty)(title)) {
              _this.element.classList.add(_this.className_(void 0, "not"));
            } else {
              _this.element.classList.remove(_this.className_(void 0, "not"));
            }
          });
          config.viewProps.bindDisabled(buttonElem);
          this.element.appendChild(buttonElem);
          this.buttonElement = buttonElem;
          var indentElem = doc.createElement("div");
          indentElem.classList.add(this.className_("i"));
          this.element.appendChild(indentElem);
          var titleElem = doc.createElement("div");
          titleElem.classList.add(this.className_("t"));
          (0, reactive_2.bindValueToTextContent)(config.props.value("title"), titleElem);
          this.buttonElement.appendChild(titleElem);
          this.titleElement = titleElem;
          var markElem = doc.createElement("div");
          markElem.classList.add(this.className_("m"));
          this.buttonElement.appendChild(markElem);
          var containerElem = config.containerElement;
          containerElem.classList.add(this.className_("c"));
          this.element.appendChild(containerElem);
          this.containerElement = containerElem;
        }
        return FolderView2;
      }()
    );
    exports.FolderView = FolderView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/folder/controller/folder.js
var require_folder3 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/folder/controller/folder.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FolderController = void 0;
    var rack_like_1 = require_rack_like();
    var foldable_1 = require_foldable();
    var rack_1 = require_rack2();
    var folder_1 = require_folder2();
    var FolderController = (
      /** @class */
      function(_super) {
        __extends(FolderController2, _super);
        function FolderController2(doc, config) {
          var _this = this;
          var _a;
          var foldable = foldable_1.Foldable.create((_a = config.expanded) !== null && _a !== void 0 ? _a : true);
          var rc = new rack_1.RackController(doc, {
            blade: config.blade,
            root: config.root,
            viewProps: config.viewProps
          });
          _this = _super.call(this, __assign(__assign({}, config), { rackController: rc, view: new folder_1.FolderView(doc, {
            containerElement: rc.view.element,
            foldable,
            props: config.props,
            viewName: config.root ? "rot" : void 0,
            viewProps: config.viewProps
          }) })) || this;
          _this.onTitleClick_ = _this.onTitleClick_.bind(_this);
          _this.props = config.props;
          _this.foldable = foldable;
          (0, foldable_1.bindFoldable)(_this.foldable, _this.view.containerElement);
          _this.rackController.rack.emitter.on("add", function() {
            _this.foldable.cleanUpTransition();
          });
          _this.rackController.rack.emitter.on("remove", function() {
            _this.foldable.cleanUpTransition();
          });
          _this.view.buttonElement.addEventListener("click", _this.onTitleClick_);
          return _this;
        }
        Object.defineProperty(FolderController2.prototype, "document", {
          get: function() {
            return this.view.element.ownerDocument;
          },
          enumerable: false,
          configurable: true
        });
        FolderController2.prototype.onTitleClick_ = function() {
          this.foldable.set("expanded", !this.foldable.get("expanded"));
        };
        return FolderController2;
      }(rack_like_1.RackLikeController)
    );
    exports.FolderController = FolderController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/folder/plugin.js
var require_plugin2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/folder/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FolderBladePlugin = void 0;
    var value_map_1 = require_value_map();
    var params_parsers_1 = require_params_parsers();
    var folder_1 = require_folder();
    var folder_2 = require_folder3();
    exports.FolderBladePlugin = {
      id: "folder",
      type: "blade",
      accept: function(params) {
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          title: p.required.string,
          view: p.required.constant("folder"),
          expanded: p.optional.boolean
        });
        return result ? { params: result } : null;
      },
      controller: function(args) {
        return new folder_2.FolderController(args.document, {
          blade: args.blade,
          expanded: args.params.expanded,
          props: value_map_1.ValueMap.fromObject({
            title: args.params.title
          }),
          viewProps: args.viewProps
        });
      },
      api: function(args) {
        if (!(args.controller instanceof folder_2.FolderController)) {
          return null;
        }
        return new folder_1.FolderApi(args.controller, args.pool);
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/label/controller/value-label.js
var require_value_label = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/label/controller/value-label.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.LabeledValueController = void 0;
    var value_blade_1 = require_value_blade();
    var label_1 = require_label();
    var LabeledValueController = (
      /** @class */
      function(_super) {
        __extends(LabeledValueController2, _super);
        function LabeledValueController2(doc, config) {
          var _this = this;
          var viewProps = config.valueController.viewProps;
          _this = _super.call(this, __assign(__assign({}, config), { value: config.valueController.value, view: new label_1.LabelView(doc, {
            props: config.props,
            viewProps
          }), viewProps })) || this;
          _this.props = config.props;
          _this.valueController = config.valueController;
          _this.view.valueElement.appendChild(_this.valueController.view.element);
          return _this;
        }
        return LabeledValueController2;
      }(value_blade_1.ValueBladeController)
    );
    exports.LabeledValueController = LabeledValueController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/separator/api/separator.js
var require_separator = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/separator/api/separator.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SeparatorApi = void 0;
    var blade_1 = require_blade();
    var SeparatorApi = (
      /** @class */
      function(_super) {
        __extends(SeparatorApi2, _super);
        function SeparatorApi2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        return SeparatorApi2;
      }(blade_1.BladeApi)
    );
    exports.SeparatorApi = SeparatorApi;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/separator/view/separator.js
var require_separator2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/separator/view/separator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SeparatorView = void 0;
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("spr");
    var SeparatorView = (
      /** @class */
      function() {
        function SeparatorView2(doc, config) {
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var hrElem = doc.createElement("hr");
          hrElem.classList.add(className("r"));
          this.element.appendChild(hrElem);
        }
        return SeparatorView2;
      }()
    );
    exports.SeparatorView = SeparatorView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/separator/controller/separator.js
var require_separator3 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/separator/controller/separator.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SeparatorController = void 0;
    var blade_1 = require_blade2();
    var separator_1 = require_separator2();
    var SeparatorController = (
      /** @class */
      function(_super) {
        __extends(SeparatorController2, _super);
        function SeparatorController2(doc, config) {
          return _super.call(this, __assign(__assign({}, config), { view: new separator_1.SeparatorView(doc, {
            viewProps: config.viewProps
          }) })) || this;
        }
        return SeparatorController2;
      }(blade_1.BladeController)
    );
    exports.SeparatorController = SeparatorController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/separator/plugin.js
var require_plugin3 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/separator/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SeparatorBladePlugin = void 0;
    var params_parsers_1 = require_params_parsers();
    var separator_1 = require_separator();
    var separator_2 = require_separator3();
    exports.SeparatorBladePlugin = {
      id: "separator",
      type: "blade",
      accept: function(params) {
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          view: p.required.constant("separator")
        });
        return result ? { params: result } : null;
      },
      controller: function(args) {
        return new separator_2.SeparatorController(args.document, {
          blade: args.blade,
          viewProps: args.viewProps
        });
      },
      api: function(args) {
        if (!(args.controller instanceof separator_2.SeparatorController)) {
          return null;
        }
        return new separator_1.SeparatorApi(args.controller);
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/tab/view/tab-item.js
var require_tab_item = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/tab/view/tab-item.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TabItemView = void 0;
    var reactive_1 = require_reactive();
    var class_name_1 = require_class_name();
    var reactive_2 = require_reactive2();
    var className = (0, class_name_1.ClassName)("tbi");
    var TabItemView = (
      /** @class */
      function() {
        function TabItemView2(doc, config) {
          var _this = this;
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          (0, reactive_1.bindValueMap)(config.props, "selected", function(selected) {
            if (selected) {
              _this.element.classList.add(className(void 0, "sel"));
            } else {
              _this.element.classList.remove(className(void 0, "sel"));
            }
          });
          var buttonElem = doc.createElement("button");
          buttonElem.classList.add(className("b"));
          config.viewProps.bindDisabled(buttonElem);
          this.element.appendChild(buttonElem);
          this.buttonElement = buttonElem;
          var titleElem = doc.createElement("div");
          titleElem.classList.add(className("t"));
          (0, reactive_2.bindValueToTextContent)(config.props.value("title"), titleElem);
          this.buttonElement.appendChild(titleElem);
          this.titleElement = titleElem;
        }
        return TabItemView2;
      }()
    );
    exports.TabItemView = TabItemView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/tab/controller/tab-item.js
var require_tab_item2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/tab/controller/tab-item.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TabItemController = void 0;
    var emitter_1 = require_emitter();
    var tab_item_1 = require_tab_item();
    var TabItemController = (
      /** @class */
      function() {
        function TabItemController2(doc, config) {
          this.emitter = new emitter_1.Emitter();
          this.onClick_ = this.onClick_.bind(this);
          this.props = config.props;
          this.viewProps = config.viewProps;
          this.view = new tab_item_1.TabItemView(doc, {
            props: config.props,
            viewProps: config.viewProps
          });
          this.view.buttonElement.addEventListener("click", this.onClick_);
        }
        TabItemController2.prototype.onClick_ = function() {
          this.emitter.emit("click", {
            sender: this
          });
        };
        return TabItemController2;
      }()
    );
    exports.TabItemController = TabItemController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/tab/controller/tab-page.js
var require_tab_page = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/tab/controller/tab-page.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TabPageController = void 0;
    var reactive_1 = require_reactive();
    var view_props_1 = require_view_props();
    var blade_1 = require_blade3();
    var rack_1 = require_rack2();
    var tab_item_1 = require_tab_item2();
    var TabPageController = (
      /** @class */
      function() {
        function TabPageController2(doc, config) {
          var _this = this;
          this.onItemClick_ = this.onItemClick_.bind(this);
          this.ic_ = new tab_item_1.TabItemController(doc, {
            props: config.itemProps,
            viewProps: view_props_1.ViewProps.create()
          });
          this.ic_.emitter.on("click", this.onItemClick_);
          this.cc_ = new rack_1.RackController(doc, {
            blade: (0, blade_1.createBlade)(),
            viewProps: view_props_1.ViewProps.create()
          });
          this.props = config.props;
          (0, reactive_1.bindValueMap)(this.props, "selected", function(selected) {
            _this.itemController.props.set("selected", selected);
            _this.contentController.viewProps.set("hidden", !selected);
          });
        }
        Object.defineProperty(TabPageController2.prototype, "itemController", {
          get: function() {
            return this.ic_;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(TabPageController2.prototype, "contentController", {
          get: function() {
            return this.cc_;
          },
          enumerable: false,
          configurable: true
        });
        TabPageController2.prototype.onItemClick_ = function() {
          this.props.set("selected", true);
        };
        return TabPageController2;
      }()
    );
    exports.TabPageController = TabPageController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/tab/api/tab-page.js
var require_tab_page2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/tab/api/tab-page.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TabPageApi = void 0;
    var TabPageApi = (
      /** @class */
      function() {
        function TabPageApi2(controller, contentRackApi) {
          this.controller_ = controller;
          this.rackApi_ = contentRackApi;
        }
        Object.defineProperty(TabPageApi2.prototype, "title", {
          get: function() {
            var _a;
            return (_a = this.controller_.itemController.props.get("title")) !== null && _a !== void 0 ? _a : "";
          },
          set: function(title) {
            this.controller_.itemController.props.set("title", title);
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(TabPageApi2.prototype, "selected", {
          get: function() {
            return this.controller_.props.get("selected");
          },
          set: function(selected) {
            this.controller_.props.set("selected", selected);
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(TabPageApi2.prototype, "children", {
          get: function() {
            return this.rackApi_.children;
          },
          enumerable: false,
          configurable: true
        });
        TabPageApi2.prototype.addButton = function(params) {
          return this.rackApi_.addButton(params);
        };
        TabPageApi2.prototype.addFolder = function(params) {
          return this.rackApi_.addFolder(params);
        };
        TabPageApi2.prototype.addSeparator = function(opt_params) {
          return this.rackApi_.addSeparator(opt_params);
        };
        TabPageApi2.prototype.addTab = function(params) {
          return this.rackApi_.addTab(params);
        };
        TabPageApi2.prototype.add = function(api, opt_index) {
          this.rackApi_.add(api, opt_index);
        };
        TabPageApi2.prototype.remove = function(api) {
          this.rackApi_.remove(api);
        };
        TabPageApi2.prototype.addInput = function(object, key, opt_params) {
          return this.rackApi_.addInput(object, key, opt_params);
        };
        TabPageApi2.prototype.addMonitor = function(object, key, opt_params) {
          return this.rackApi_.addMonitor(object, key, opt_params);
        };
        TabPageApi2.prototype.addBlade = function(params) {
          return this.rackApi_.addBlade(params);
        };
        return TabPageApi2;
      }()
    );
    exports.TabPageApi = TabPageApi;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/tab/api/tab.js
var require_tab = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/tab/api/tab.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TabApi = void 0;
    var emitter_1 = require_emitter();
    var value_map_1 = require_value_map();
    var tp_error_1 = require_tp_error();
    var rack_like_api_1 = require_rack_like_api();
    var tp_event_1 = require_tp_event();
    var rack_1 = require_rack();
    var tab_page_1 = require_tab_page();
    var tab_page_2 = require_tab_page2();
    var TabApi = (
      /** @class */
      function(_super) {
        __extends(TabApi2, _super);
        function TabApi2(controller, pool) {
          var _this = _super.call(this, controller, new rack_1.RackApi(controller.rackController, pool)) || this;
          _this.onPageAdd_ = _this.onPageAdd_.bind(_this);
          _this.onPageRemove_ = _this.onPageRemove_.bind(_this);
          _this.onSelect_ = _this.onSelect_.bind(_this);
          _this.emitter_ = new emitter_1.Emitter();
          _this.pageApiMap_ = /* @__PURE__ */ new Map();
          _this.rackApi_.on("change", function(ev) {
            _this.emitter_.emit("change", {
              event: ev
            });
          });
          _this.rackApi_.on("update", function(ev) {
            _this.emitter_.emit("update", {
              event: ev
            });
          });
          _this.controller_.tab.selectedIndex.emitter.on("change", _this.onSelect_);
          _this.controller_.pageSet.emitter.on("add", _this.onPageAdd_);
          _this.controller_.pageSet.emitter.on("remove", _this.onPageRemove_);
          _this.controller_.pageSet.items.forEach(function(pc) {
            _this.setUpPageApi_(pc);
          });
          return _this;
        }
        Object.defineProperty(TabApi2.prototype, "pages", {
          get: function() {
            var _this = this;
            return this.controller_.pageSet.items.map(function(pc) {
              var api = _this.pageApiMap_.get(pc);
              if (!api) {
                throw tp_error_1.TpError.shouldNeverHappen();
              }
              return api;
            });
          },
          enumerable: false,
          configurable: true
        });
        TabApi2.prototype.addPage = function(params) {
          var doc = this.controller_.view.element.ownerDocument;
          var pc = new tab_page_1.TabPageController(doc, {
            itemProps: value_map_1.ValueMap.fromObject({
              selected: false,
              title: params.title
            }),
            props: value_map_1.ValueMap.fromObject({
              selected: false
            })
          });
          this.controller_.add(pc, params.index);
          var api = this.pageApiMap_.get(pc);
          if (!api) {
            throw tp_error_1.TpError.shouldNeverHappen();
          }
          return api;
        };
        TabApi2.prototype.removePage = function(index) {
          this.controller_.remove(index);
        };
        TabApi2.prototype.on = function(eventName, handler) {
          var bh = handler.bind(this);
          this.emitter_.on(eventName, function(ev) {
            bh(ev.event);
          });
          return this;
        };
        TabApi2.prototype.setUpPageApi_ = function(pc) {
          var rackApi = this.rackApi_["apiSet_"].find(function(api2) {
            return api2.controller_ === pc.contentController;
          });
          if (!rackApi) {
            throw tp_error_1.TpError.shouldNeverHappen();
          }
          var api = new tab_page_2.TabPageApi(pc, rackApi);
          this.pageApiMap_.set(pc, api);
        };
        TabApi2.prototype.onPageAdd_ = function(ev) {
          this.setUpPageApi_(ev.item);
        };
        TabApi2.prototype.onPageRemove_ = function(ev) {
          var api = this.pageApiMap_.get(ev.item);
          if (!api) {
            throw tp_error_1.TpError.shouldNeverHappen();
          }
          this.pageApiMap_.delete(ev.item);
        };
        TabApi2.prototype.onSelect_ = function(ev) {
          this.emitter_.emit("select", {
            event: new tp_event_1.TpTabSelectEvent(this, ev.rawValue)
          });
        };
        return TabApi2;
      }(rack_like_api_1.RackLikeApi)
    );
    exports.TabApi = TabApi;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/tab/model/tab.js
var require_tab2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/tab/model/tab.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Tab = void 0;
    var values_1 = require_values();
    var INDEX_NOT_SELECTED = -1;
    var Tab = (
      /** @class */
      function() {
        function Tab2() {
          this.onItemSelectedChange_ = this.onItemSelectedChange_.bind(this);
          this.empty = (0, values_1.createValue)(true);
          this.selectedIndex = (0, values_1.createValue)(INDEX_NOT_SELECTED);
          this.items_ = [];
        }
        Tab2.prototype.add = function(item, opt_index) {
          var index = opt_index !== null && opt_index !== void 0 ? opt_index : this.items_.length;
          this.items_.splice(index, 0, item);
          item.emitter.on("change", this.onItemSelectedChange_);
          this.keepSelection_();
        };
        Tab2.prototype.remove = function(item) {
          var index = this.items_.indexOf(item);
          if (index < 0) {
            return;
          }
          this.items_.splice(index, 1);
          item.emitter.off("change", this.onItemSelectedChange_);
          this.keepSelection_();
        };
        Tab2.prototype.keepSelection_ = function() {
          if (this.items_.length === 0) {
            this.selectedIndex.rawValue = INDEX_NOT_SELECTED;
            this.empty.rawValue = true;
            return;
          }
          var firstSelIndex = this.items_.findIndex(function(s) {
            return s.rawValue;
          });
          if (firstSelIndex < 0) {
            this.items_.forEach(function(s, i) {
              s.rawValue = i === 0;
            });
            this.selectedIndex.rawValue = 0;
          } else {
            this.items_.forEach(function(s, i) {
              s.rawValue = i === firstSelIndex;
            });
            this.selectedIndex.rawValue = firstSelIndex;
          }
          this.empty.rawValue = false;
        };
        Tab2.prototype.onItemSelectedChange_ = function(ev) {
          if (ev.rawValue) {
            var index_1 = this.items_.findIndex(function(s) {
              return s === ev.sender;
            });
            this.items_.forEach(function(s, i) {
              s.rawValue = i === index_1;
            });
            this.selectedIndex.rawValue = index_1;
          } else {
            this.keepSelection_();
          }
        };
        return Tab2;
      }()
    );
    exports.Tab = Tab;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/tab/view/tab.js
var require_tab3 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/tab/view/tab.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TabView = void 0;
    var reactive_1 = require_reactive();
    var class_name_1 = require_class_name();
    var reactive_2 = require_reactive2();
    var blade_container_1 = require_blade_container();
    var className = (0, class_name_1.ClassName)("tab");
    var TabView = (
      /** @class */
      function() {
        function TabView2(doc, config) {
          this.element = doc.createElement("div");
          this.element.classList.add(className(), (0, blade_container_1.bladeContainerClassName)());
          config.viewProps.bindClassModifiers(this.element);
          (0, reactive_1.bindValue)(config.empty, (0, reactive_2.valueToClassName)(this.element, className(void 0, "nop")));
          var titleElem = doc.createElement("div");
          titleElem.classList.add(className("t"));
          this.element.appendChild(titleElem);
          this.itemsElement = titleElem;
          var indentElem = doc.createElement("div");
          indentElem.classList.add(className("i"));
          this.element.appendChild(indentElem);
          var contentsElem = config.contentsElement;
          contentsElem.classList.add(className("c"));
          this.element.appendChild(contentsElem);
          this.contentsElement = contentsElem;
        }
        return TabView2;
      }()
    );
    exports.TabView = TabView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/tab/controller/tab.js
var require_tab4 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/tab/controller/tab.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TabController = void 0;
    var dom_util_1 = require_dom_util();
    var rack_like_1 = require_rack_like();
    var nested_ordered_set_1 = require_nested_ordered_set();
    var rack_1 = require_rack2();
    var tab_1 = require_tab2();
    var tab_2 = require_tab3();
    var TabController = (
      /** @class */
      function(_super) {
        __extends(TabController2, _super);
        function TabController2(doc, config) {
          var _this = this;
          var cr = new rack_1.RackController(doc, {
            blade: config.blade,
            viewProps: config.viewProps
          });
          var tab = new tab_1.Tab();
          _this = _super.call(this, {
            blade: config.blade,
            rackController: cr,
            view: new tab_2.TabView(doc, {
              contentsElement: cr.view.element,
              empty: tab.empty,
              viewProps: config.viewProps
            })
          }) || this;
          _this.onPageAdd_ = _this.onPageAdd_.bind(_this);
          _this.onPageRemove_ = _this.onPageRemove_.bind(_this);
          _this.pageSet_ = new nested_ordered_set_1.NestedOrderedSet(function() {
            return null;
          });
          _this.pageSet_.emitter.on("add", _this.onPageAdd_);
          _this.pageSet_.emitter.on("remove", _this.onPageRemove_);
          _this.tab = tab;
          return _this;
        }
        Object.defineProperty(TabController2.prototype, "pageSet", {
          get: function() {
            return this.pageSet_;
          },
          enumerable: false,
          configurable: true
        });
        TabController2.prototype.add = function(pc, opt_index) {
          this.pageSet_.add(pc, opt_index);
        };
        TabController2.prototype.remove = function(index) {
          this.pageSet_.remove(this.pageSet_.items[index]);
        };
        TabController2.prototype.onPageAdd_ = function(ev) {
          var pc = ev.item;
          (0, dom_util_1.insertElementAt)(this.view.itemsElement, pc.itemController.view.element, ev.index);
          pc.itemController.viewProps.set("parent", this.viewProps);
          this.rackController.rack.add(pc.contentController, ev.index);
          this.tab.add(pc.props.value("selected"));
        };
        TabController2.prototype.onPageRemove_ = function(ev) {
          var pc = ev.item;
          (0, dom_util_1.removeElement)(pc.itemController.view.element);
          pc.itemController.viewProps.set("parent", null);
          this.rackController.rack.remove(pc.contentController);
          this.tab.remove(pc.props.value("selected"));
        };
        return TabController2;
      }(rack_like_1.RackLikeController)
    );
    exports.TabController = TabController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/tab/plugin.js
var require_plugin4 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/tab/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TabBladePlugin = void 0;
    var value_map_1 = require_value_map();
    var params_parsers_1 = require_params_parsers();
    var tab_1 = require_tab();
    var tab_2 = require_tab4();
    var tab_page_1 = require_tab_page();
    exports.TabBladePlugin = {
      id: "tab",
      type: "blade",
      accept: function(params) {
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          pages: p.required.array(p.required.object({ title: p.required.string })),
          view: p.required.constant("tab")
        });
        if (!result || result.pages.length === 0) {
          return null;
        }
        return { params: result };
      },
      controller: function(args) {
        var c = new tab_2.TabController(args.document, {
          blade: args.blade,
          viewProps: args.viewProps
        });
        args.params.pages.forEach(function(p) {
          var pc = new tab_page_1.TabPageController(args.document, {
            itemProps: value_map_1.ValueMap.fromObject({
              selected: false,
              title: p.title
            }),
            props: value_map_1.ValueMap.fromObject({
              selected: false
            })
          });
          c.add(pc);
        });
        return c;
      },
      api: function(args) {
        if (!(args.controller instanceof tab_2.TabController)) {
          return null;
        }
        return new tab_1.TabApi(args.controller, args.pool);
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/blade/plugin.js
var require_plugin5 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/blade/plugin.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createBladeController = void 0;
    var view_props_1 = require_view_props();
    var params_parsers_1 = require_params_parsers();
    var type_util_1 = require_type_util();
    var blade_1 = require_blade3();
    function createBladeController(plugin, args) {
      var ac = plugin.accept(args.params);
      if (!ac) {
        return null;
      }
      var disabled = params_parsers_1.ParamsParsers.optional.boolean(args.params["disabled"]).value;
      var hidden = params_parsers_1.ParamsParsers.optional.boolean(args.params["hidden"]).value;
      return plugin.controller({
        blade: (0, blade_1.createBlade)(),
        document: args.document,
        params: (0, type_util_1.forceCast)(__assign(__assign({}, ac.params), { disabled, hidden })),
        viewProps: view_props_1.ViewProps.create({
          disabled,
          hidden
        })
      });
    }
    exports.createBladeController = createBladeController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/binding/ticker/manual.js
var require_manual = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/binding/ticker/manual.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ManualTicker = void 0;
    var emitter_1 = require_emitter();
    var ManualTicker = (
      /** @class */
      function() {
        function ManualTicker2() {
          this.disabled = false;
          this.emitter = new emitter_1.Emitter();
        }
        ManualTicker2.prototype.dispose = function() {
        };
        ManualTicker2.prototype.tick = function() {
          if (this.disabled) {
            return;
          }
          this.emitter.emit("tick", {
            sender: this
          });
        };
        return ManualTicker2;
      }()
    );
    exports.ManualTicker = ManualTicker;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/binding/ticker/interval.js
var require_interval = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/binding/ticker/interval.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IntervalTicker = void 0;
    var emitter_1 = require_emitter();
    var IntervalTicker = (
      /** @class */
      function() {
        function IntervalTicker2(doc, interval) {
          this.disabled_ = false;
          this.timerId_ = null;
          this.onTick_ = this.onTick_.bind(this);
          this.doc_ = doc;
          this.emitter = new emitter_1.Emitter();
          this.interval_ = interval;
          this.setTimer_();
        }
        Object.defineProperty(IntervalTicker2.prototype, "disabled", {
          get: function() {
            return this.disabled_;
          },
          set: function(inactive) {
            this.disabled_ = inactive;
            if (this.disabled_) {
              this.clearTimer_();
            } else {
              this.setTimer_();
            }
          },
          enumerable: false,
          configurable: true
        });
        IntervalTicker2.prototype.dispose = function() {
          this.clearTimer_();
        };
        IntervalTicker2.prototype.clearTimer_ = function() {
          if (this.timerId_ === null) {
            return;
          }
          var win = this.doc_.defaultView;
          if (win) {
            win.clearInterval(this.timerId_);
          }
          this.timerId_ = null;
        };
        IntervalTicker2.prototype.setTimer_ = function() {
          this.clearTimer_();
          if (this.interval_ <= 0) {
            return;
          }
          var win = this.doc_.defaultView;
          if (win) {
            this.timerId_ = win.setInterval(this.onTick_, this.interval_);
          }
        };
        IntervalTicker2.prototype.onTick_ = function() {
          if (this.disabled_) {
            return;
          }
          this.emitter.emit("tick", {
            sender: this
          });
        };
        return IntervalTicker2;
      }()
    );
    exports.IntervalTicker = IntervalTicker;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/binding/ticker/ticker.js
var require_ticker = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/binding/ticker/ticker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/binding/input.js
var require_input = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/binding/input.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InputBinding = void 0;
    var emitter_1 = require_emitter();
    var InputBinding = (
      /** @class */
      function() {
        function InputBinding2(config) {
          this.onValueChange_ = this.onValueChange_.bind(this);
          this.reader = config.reader;
          this.writer = config.writer;
          this.emitter = new emitter_1.Emitter();
          this.value = config.value;
          this.value.emitter.on("change", this.onValueChange_);
          this.target = config.target;
          this.read();
        }
        InputBinding2.prototype.read = function() {
          var targetValue = this.target.read();
          if (targetValue !== void 0) {
            this.value.rawValue = this.reader(targetValue);
          }
        };
        InputBinding2.prototype.write_ = function(rawValue) {
          this.writer(this.target, rawValue);
        };
        InputBinding2.prototype.onValueChange_ = function(ev) {
          this.write_(ev.rawValue);
          this.emitter.emit("change", {
            options: ev.options,
            rawValue: ev.rawValue,
            sender: this
          });
        };
        return InputBinding2;
      }()
    );
    exports.InputBinding = InputBinding;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/buffered-value.js
var require_buffered_value = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/buffered-value.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createPushedBuffer = exports.initializeBuffer = void 0;
    var type_util_1 = require_type_util();
    var values_1 = require_values();
    function fillBuffer(buffer, bufferSize) {
      while (buffer.length < bufferSize) {
        buffer.push(void 0);
      }
    }
    function initializeBuffer(bufferSize) {
      var buffer = [];
      fillBuffer(buffer, bufferSize);
      return (0, values_1.createValue)(buffer);
    }
    exports.initializeBuffer = initializeBuffer;
    function createTrimmedBuffer(buffer) {
      var index = buffer.indexOf(void 0);
      return (0, type_util_1.forceCast)(index < 0 ? buffer : buffer.slice(0, index));
    }
    function createPushedBuffer(buffer, newValue) {
      var newBuffer = __spreadArray(__spreadArray([], createTrimmedBuffer(buffer), true), [newValue], false);
      if (newBuffer.length > buffer.length) {
        newBuffer.splice(0, newBuffer.length - buffer.length);
      } else {
        fillBuffer(newBuffer, buffer.length);
      }
      return newBuffer;
    }
    exports.createPushedBuffer = createPushedBuffer;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/binding/monitor.js
var require_monitor = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/binding/monitor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MonitorBinding = void 0;
    var buffered_value_1 = require_buffered_value();
    var emitter_1 = require_emitter();
    var MonitorBinding = (
      /** @class */
      function() {
        function MonitorBinding2(config) {
          this.onTick_ = this.onTick_.bind(this);
          this.reader_ = config.reader;
          this.target = config.target;
          this.emitter = new emitter_1.Emitter();
          this.value = config.value;
          this.ticker = config.ticker;
          this.ticker.emitter.on("tick", this.onTick_);
          this.read();
        }
        MonitorBinding2.prototype.dispose = function() {
          this.ticker.dispose();
        };
        MonitorBinding2.prototype.read = function() {
          var targetValue = this.target.read();
          if (targetValue === void 0) {
            return;
          }
          var buffer = this.value.rawValue;
          var newValue = this.reader_(targetValue);
          this.value.rawValue = (0, buffered_value_1.createPushedBuffer)(buffer, newValue);
          this.emitter.emit("update", {
            rawValue: newValue,
            sender: this
          });
        };
        MonitorBinding2.prototype.onTick_ = function(_) {
          this.read();
        };
        return MonitorBinding2;
      }()
    );
    exports.MonitorBinding = MonitorBinding;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/constraint/composite.js
var require_composite = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/constraint/composite.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.findConstraint = exports.CompositeConstraint = void 0;
    var CompositeConstraint = (
      /** @class */
      function() {
        function CompositeConstraint2(constraints) {
          this.constraints = constraints;
        }
        CompositeConstraint2.prototype.constrain = function(value) {
          return this.constraints.reduce(function(result, c) {
            return c.constrain(result);
          }, value);
        };
        return CompositeConstraint2;
      }()
    );
    exports.CompositeConstraint = CompositeConstraint;
    function findConstraint(c, constraintClass) {
      if (c instanceof constraintClass) {
        return c;
      }
      if (c instanceof CompositeConstraint) {
        var result = c.constraints.reduce(function(tmpResult, sc) {
          if (tmpResult) {
            return tmpResult;
          }
          return sc instanceof constraintClass ? sc : null;
        }, null);
        if (result) {
          return result;
        }
      }
      return null;
    }
    exports.findConstraint = findConstraint;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/constraint/constraint.js
var require_constraint = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/constraint/constraint.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/constraint/definite-range.js
var require_definite_range = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/constraint/definite-range.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DefiniteRangeConstraint = void 0;
    var value_map_1 = require_value_map();
    var DefiniteRangeConstraint = (
      /** @class */
      function() {
        function DefiniteRangeConstraint2(config) {
          this.values = value_map_1.ValueMap.fromObject({
            max: config.max,
            min: config.min
          });
        }
        DefiniteRangeConstraint2.prototype.constrain = function(value) {
          var max = this.values.get("max");
          var min = this.values.get("min");
          return Math.min(Math.max(value, min), max);
        };
        return DefiniteRangeConstraint2;
      }()
    );
    exports.DefiniteRangeConstraint = DefiniteRangeConstraint;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/constraint/list.js
var require_list = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/constraint/list.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ListConstraint = void 0;
    var value_map_1 = require_value_map();
    var ListConstraint = (
      /** @class */
      function() {
        function ListConstraint2(options) {
          this.values = value_map_1.ValueMap.fromObject({
            options
          });
        }
        Object.defineProperty(ListConstraint2.prototype, "options", {
          // TODO: Remove property in the next major version
          /**
           * @deprecated Use values.get('options') instead.
           */
          get: function() {
            return this.values.get("options");
          },
          enumerable: false,
          configurable: true
        });
        ListConstraint2.prototype.constrain = function(value) {
          var opts = this.values.get("options");
          if (opts.length === 0) {
            return value;
          }
          var matched = opts.filter(function(item) {
            return item.value === value;
          }).length > 0;
          return matched ? value : opts[0].value;
        };
        return ListConstraint2;
      }()
    );
    exports.ListConstraint = ListConstraint;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/constraint/range.js
var require_range = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/constraint/range.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RangeConstraint = void 0;
    var type_util_1 = require_type_util();
    var value_map_1 = require_value_map();
    var RangeConstraint = (
      /** @class */
      function() {
        function RangeConstraint2(config) {
          this.values = value_map_1.ValueMap.fromObject({
            max: config.max,
            min: config.min
          });
        }
        Object.defineProperty(RangeConstraint2.prototype, "maxValue", {
          // TODO: Remove property in the next major version
          /**
           * @deprecated Use values.get('max') instead.
           */
          get: function() {
            return this.values.get("max");
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(RangeConstraint2.prototype, "minValue", {
          // TODO: Remove property in the next major version
          /**
           * @deprecated Use values.get('min') instead.
           */
          get: function() {
            return this.values.get("min");
          },
          enumerable: false,
          configurable: true
        });
        RangeConstraint2.prototype.constrain = function(value) {
          var max = this.values.get("max");
          var min = this.values.get("min");
          var result = value;
          if (!(0, type_util_1.isEmpty)(min)) {
            result = Math.max(result, min);
          }
          if (!(0, type_util_1.isEmpty)(max)) {
            result = Math.min(result, max);
          }
          return result;
        };
        return RangeConstraint2;
      }()
    );
    exports.RangeConstraint = RangeConstraint;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/constraint/step.js
var require_step = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/constraint/step.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StepConstraint = void 0;
    var StepConstraint = (
      /** @class */
      function() {
        function StepConstraint2(step, origin) {
          if (origin === void 0) {
            origin = 0;
          }
          this.step = step;
          this.origin = origin;
        }
        StepConstraint2.prototype.constrain = function(value) {
          var o = this.origin % this.step;
          var r = Math.round((value - o) / this.step);
          return o + r * this.step;
        };
        return StepConstraint2;
      }()
    );
    exports.StepConstraint = StepConstraint;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/controller/controller.js
var require_controller = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/controller/controller.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/view/list.js
var require_list2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/view/list.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ListView = void 0;
    var dom_util_1 = require_dom_util();
    var reactive_1 = require_reactive();
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("lst");
    var ListView = (
      /** @class */
      function() {
        function ListView2(doc, config) {
          this.onValueChange_ = this.onValueChange_.bind(this);
          this.props_ = config.props;
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var selectElem = doc.createElement("select");
          selectElem.classList.add(className("s"));
          (0, reactive_1.bindValueMap)(this.props_, "options", function(opts) {
            (0, dom_util_1.removeChildElements)(selectElem);
            opts.forEach(function(item, index) {
              var optionElem = doc.createElement("option");
              optionElem.dataset.index = String(index);
              optionElem.textContent = item.text;
              optionElem.value = String(item.value);
              selectElem.appendChild(optionElem);
            });
          });
          config.viewProps.bindDisabled(selectElem);
          this.element.appendChild(selectElem);
          this.selectElement = selectElem;
          var markElem = doc.createElement("div");
          markElem.classList.add(className("m"));
          markElem.appendChild((0, dom_util_1.createSvgIconElement)(doc, "dropdown"));
          this.element.appendChild(markElem);
          config.value.emitter.on("change", this.onValueChange_);
          this.value_ = config.value;
          this.update_();
        }
        ListView2.prototype.update_ = function() {
          this.selectElement.value = String(this.value_.rawValue);
        };
        ListView2.prototype.onValueChange_ = function() {
          this.update_();
        };
        return ListView2;
      }()
    );
    exports.ListView = ListView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/controller/list.js
var require_list3 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/controller/list.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ListController = void 0;
    var type_util_1 = require_type_util();
    var list_1 = require_list2();
    var ListController = (
      /** @class */
      function() {
        function ListController2(doc, config) {
          this.onSelectChange_ = this.onSelectChange_.bind(this);
          this.props = config.props;
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.view = new list_1.ListView(doc, {
            props: this.props,
            value: this.value,
            viewProps: this.viewProps
          });
          this.view.selectElement.addEventListener("change", this.onSelectChange_);
        }
        ListController2.prototype.onSelectChange_ = function(e) {
          var selectElem = (0, type_util_1.forceCast)(e.currentTarget);
          var optElem = selectElem.selectedOptions.item(0);
          if (!optElem) {
            return;
          }
          var itemIndex = Number(optElem.dataset.index);
          this.value.rawValue = this.props.get("options")[itemIndex].value;
        };
        return ListController2;
      }()
    );
    exports.ListController = ListController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/view/popup.js
var require_popup = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/view/popup.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PopupView = void 0;
    var reactive_1 = require_reactive();
    var class_name_1 = require_class_name();
    var reactive_2 = require_reactive2();
    var className = (0, class_name_1.ClassName)("pop");
    var PopupView = (
      /** @class */
      function() {
        function PopupView2(doc, config) {
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          (0, reactive_1.bindValue)(config.shows, (0, reactive_2.valueToClassName)(this.element, className(void 0, "v")));
        }
        return PopupView2;
      }()
    );
    exports.PopupView = PopupView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/controller/popup.js
var require_popup2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/controller/popup.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PopupController = void 0;
    var values_1 = require_values();
    var popup_1 = require_popup();
    var PopupController = (
      /** @class */
      function() {
        function PopupController2(doc, config) {
          this.shows = (0, values_1.createValue)(false);
          this.viewProps = config.viewProps;
          this.view = new popup_1.PopupView(doc, {
            shows: this.shows,
            viewProps: this.viewProps
          });
        }
        return PopupController2;
      }()
    );
    exports.PopupController = PopupController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/view/text.js
var require_text = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/view/text.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextView = void 0;
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("txt");
    var TextView = (
      /** @class */
      function() {
        function TextView2(doc, config) {
          this.onChange_ = this.onChange_.bind(this);
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          this.props_ = config.props;
          this.props_.emitter.on("change", this.onChange_);
          var inputElem = doc.createElement("input");
          inputElem.classList.add(className("i"));
          inputElem.type = "text";
          config.viewProps.bindDisabled(inputElem);
          this.element.appendChild(inputElem);
          this.inputElement = inputElem;
          config.value.emitter.on("change", this.onChange_);
          this.value_ = config.value;
          this.refresh();
        }
        TextView2.prototype.refresh = function() {
          var formatter = this.props_.get("formatter");
          this.inputElement.value = formatter(this.value_.rawValue);
        };
        TextView2.prototype.onChange_ = function() {
          this.refresh();
        };
        return TextView2;
      }()
    );
    exports.TextView = TextView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/controller/text.js
var require_text2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/controller/text.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TextController = void 0;
    var type_util_1 = require_type_util();
    var text_1 = require_text();
    var TextController = (
      /** @class */
      function() {
        function TextController2(doc, config) {
          this.onInputChange_ = this.onInputChange_.bind(this);
          this.parser_ = config.parser;
          this.props = config.props;
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.view = new text_1.TextView(doc, {
            props: config.props,
            value: this.value,
            viewProps: this.viewProps
          });
          this.view.inputElement.addEventListener("change", this.onInputChange_);
        }
        TextController2.prototype.onInputChange_ = function(e) {
          var inputElem = (0, type_util_1.forceCast)(e.currentTarget);
          var value = inputElem.value;
          var parsedValue = this.parser_(value);
          if (!(0, type_util_1.isEmpty)(parsedValue)) {
            this.value.rawValue = parsedValue;
          }
          this.view.refresh();
        };
        return TextController2;
      }()
    );
    exports.TextController = TextController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/controller/value.js
var require_value = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/controller/value.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/converter/boolean.js
var require_boolean = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/converter/boolean.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BooleanFormatter = exports.boolFromUnknown = exports.boolToString = void 0;
    function boolToString(value) {
      return String(value);
    }
    exports.boolToString = boolToString;
    function boolFromUnknown(value) {
      if (value === "false") {
        return false;
      }
      return !!value;
    }
    exports.boolFromUnknown = boolFromUnknown;
    function BooleanFormatter(value) {
      return boolToString(value);
    }
    exports.BooleanFormatter = BooleanFormatter;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/converter/formatter.js
var require_formatter = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/converter/formatter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/converter/ecma/nodes.js
var require_nodes = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/converter/ecma/nodes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UnaryOperationNode = exports.BinaryOperationNode = exports.NumberLiteralNode = void 0;
    var NumberLiteralNode = (
      /** @class */
      function() {
        function NumberLiteralNode2(text) {
          this.text = text;
        }
        NumberLiteralNode2.prototype.evaluate = function() {
          return Number(this.text);
        };
        NumberLiteralNode2.prototype.toString = function() {
          return this.text;
        };
        return NumberLiteralNode2;
      }()
    );
    exports.NumberLiteralNode = NumberLiteralNode;
    var BINARY_OPERATION_MAP = {
      "**": function(v1, v2) {
        return Math.pow(v1, v2);
      },
      "*": function(v1, v2) {
        return v1 * v2;
      },
      "/": function(v1, v2) {
        return v1 / v2;
      },
      "%": function(v1, v2) {
        return v1 % v2;
      },
      "+": function(v1, v2) {
        return v1 + v2;
      },
      "-": function(v1, v2) {
        return v1 - v2;
      },
      "<<": function(v1, v2) {
        return v1 << v2;
      },
      ">>": function(v1, v2) {
        return v1 >> v2;
      },
      ">>>": function(v1, v2) {
        return v1 >>> v2;
      },
      "&": function(v1, v2) {
        return v1 & v2;
      },
      "^": function(v1, v2) {
        return v1 ^ v2;
      },
      "|": function(v1, v2) {
        return v1 | v2;
      }
    };
    var BinaryOperationNode = (
      /** @class */
      function() {
        function BinaryOperationNode2(operator, left, right) {
          this.left = left;
          this.operator = operator;
          this.right = right;
        }
        BinaryOperationNode2.prototype.evaluate = function() {
          var op = BINARY_OPERATION_MAP[this.operator];
          if (!op) {
            throw new Error("unexpected binary operator: '".concat(this.operator));
          }
          return op(this.left.evaluate(), this.right.evaluate());
        };
        BinaryOperationNode2.prototype.toString = function() {
          return [
            "b(",
            this.left.toString(),
            this.operator,
            this.right.toString(),
            ")"
          ].join(" ");
        };
        return BinaryOperationNode2;
      }()
    );
    exports.BinaryOperationNode = BinaryOperationNode;
    var UNARY_OPERATION_MAP = {
      "+": function(v) {
        return v;
      },
      "-": function(v) {
        return -v;
      },
      "~": function(v) {
        return ~v;
      }
    };
    var UnaryOperationNode = (
      /** @class */
      function() {
        function UnaryOperationNode2(operator, expr) {
          this.operator = operator;
          this.expression = expr;
        }
        UnaryOperationNode2.prototype.evaluate = function() {
          var op = UNARY_OPERATION_MAP[this.operator];
          if (!op) {
            throw new Error("unexpected unary operator: '".concat(this.operator));
          }
          return op(this.expression.evaluate());
        };
        UnaryOperationNode2.prototype.toString = function() {
          return ["u(", this.operator, this.expression.toString(), ")"].join(" ");
        };
        return UnaryOperationNode2;
      }()
    );
    exports.UnaryOperationNode = UnaryOperationNode;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/converter/ecma/reader.js
var require_reader = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/converter/ecma/reader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.readNumericLiteral = exports.readWhitespace = void 0;
    function combineReader(parsers) {
      return function(text, cursor) {
        for (var i = 0; i < parsers.length; i++) {
          var result = parsers[i](text, cursor);
          if (result !== "") {
            return result;
          }
        }
        return "";
      };
    }
    function readWhitespace(text, cursor) {
      var _a;
      var m = text.substr(cursor).match(/^\s+/);
      return (_a = m && m[0]) !== null && _a !== void 0 ? _a : "";
    }
    exports.readWhitespace = readWhitespace;
    function readNonZeroDigit(text, cursor) {
      var ch = text.substr(cursor, 1);
      return ch.match(/^[1-9]$/) ? ch : "";
    }
    function readDecimalDigits(text, cursor) {
      var _a;
      var m = text.substr(cursor).match(/^[0-9]+/);
      return (_a = m && m[0]) !== null && _a !== void 0 ? _a : "";
    }
    function readSignedInteger(text, cursor) {
      var ds = readDecimalDigits(text, cursor);
      if (ds !== "") {
        return ds;
      }
      var sign = text.substr(cursor, 1);
      cursor += 1;
      if (sign !== "-" && sign !== "+") {
        return "";
      }
      var sds = readDecimalDigits(text, cursor);
      if (sds === "") {
        return "";
      }
      return sign + sds;
    }
    function readExponentPart(text, cursor) {
      var result = [];
      var e = text.substr(cursor, 1);
      cursor += 1;
      if (e.toLowerCase() !== "e") {
        return "";
      }
      result.push(e);
      var si = readSignedInteger(text, cursor);
      if (si === "") {
        return "";
      }
      return e + si;
    }
    function readDecimalIntegerLiteral(text, cursor) {
      var ch = text.substr(cursor, 1);
      if (ch === "0") {
        return ch;
      }
      var nzd = readNonZeroDigit(text, cursor);
      cursor += nzd.length;
      if (nzd === "") {
        return "";
      }
      return nzd + readDecimalDigits(text, cursor);
    }
    function readDecimalLiteral1(text, cursor) {
      var dil = readDecimalIntegerLiteral(text, cursor);
      cursor += dil.length;
      if (dil === "") {
        return "";
      }
      var dot = text.substr(cursor, 1);
      cursor += dot.length;
      if (dot !== ".") {
        return "";
      }
      var dds = readDecimalDigits(text, cursor);
      cursor += dds.length;
      return dil + dot + dds + readExponentPart(text, cursor);
    }
    function readDecimalLiteral2(text, cursor) {
      var dot = text.substr(cursor, 1);
      cursor += dot.length;
      if (dot !== ".") {
        return "";
      }
      var dds = readDecimalDigits(text, cursor);
      cursor += dds.length;
      if (dds === "") {
        return "";
      }
      return dot + dds + readExponentPart(text, cursor);
    }
    function readDecimalLiteral3(text, cursor) {
      var dil = readDecimalIntegerLiteral(text, cursor);
      cursor += dil.length;
      if (dil === "") {
        return "";
      }
      return dil + readExponentPart(text, cursor);
    }
    var readDecimalLiteral = combineReader([
      readDecimalLiteral1,
      readDecimalLiteral2,
      readDecimalLiteral3
    ]);
    function parseBinaryDigits(text, cursor) {
      var _a;
      var m = text.substr(cursor).match(/^[01]+/);
      return (_a = m && m[0]) !== null && _a !== void 0 ? _a : "";
    }
    function readBinaryIntegerLiteral(text, cursor) {
      var prefix = text.substr(cursor, 2);
      cursor += prefix.length;
      if (prefix.toLowerCase() !== "0b") {
        return "";
      }
      var bds = parseBinaryDigits(text, cursor);
      if (bds === "") {
        return "";
      }
      return prefix + bds;
    }
    function readOctalDigits(text, cursor) {
      var _a;
      var m = text.substr(cursor).match(/^[0-7]+/);
      return (_a = m && m[0]) !== null && _a !== void 0 ? _a : "";
    }
    function readOctalIntegerLiteral(text, cursor) {
      var prefix = text.substr(cursor, 2);
      cursor += prefix.length;
      if (prefix.toLowerCase() !== "0o") {
        return "";
      }
      var ods = readOctalDigits(text, cursor);
      if (ods === "") {
        return "";
      }
      return prefix + ods;
    }
    function readHexDigits(text, cursor) {
      var _a;
      var m = text.substr(cursor).match(/^[0-9a-f]+/i);
      return (_a = m && m[0]) !== null && _a !== void 0 ? _a : "";
    }
    function readHexIntegerLiteral(text, cursor) {
      var prefix = text.substr(cursor, 2);
      cursor += prefix.length;
      if (prefix.toLowerCase() !== "0x") {
        return "";
      }
      var hds = readHexDigits(text, cursor);
      if (hds === "") {
        return "";
      }
      return prefix + hds;
    }
    var readNonDecimalIntegerLiteral = combineReader([
      readBinaryIntegerLiteral,
      readOctalIntegerLiteral,
      readHexIntegerLiteral
    ]);
    exports.readNumericLiteral = combineReader([
      readNonDecimalIntegerLiteral,
      readDecimalLiteral
    ]);
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/converter/ecma/parser.js
var require_parser = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/converter/ecma/parser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseEcmaNumberExpression = void 0;
    var nodes_1 = require_nodes();
    var reader_1 = require_reader();
    function parseLiteral(text, cursor) {
      var num = (0, reader_1.readNumericLiteral)(text, cursor);
      cursor += num.length;
      if (num === "") {
        return null;
      }
      return {
        evaluable: new nodes_1.NumberLiteralNode(num),
        cursor
      };
    }
    function parseParenthesizedExpression(text, cursor) {
      var op = text.substr(cursor, 1);
      cursor += op.length;
      if (op !== "(") {
        return null;
      }
      var expr = parseExpression(text, cursor);
      if (!expr) {
        return null;
      }
      cursor = expr.cursor;
      cursor += (0, reader_1.readWhitespace)(text, cursor).length;
      var cl = text.substr(cursor, 1);
      cursor += cl.length;
      if (cl !== ")") {
        return null;
      }
      return {
        evaluable: expr.evaluable,
        cursor
      };
    }
    function parsePrimaryExpression(text, cursor) {
      var _a;
      return (_a = parseLiteral(text, cursor)) !== null && _a !== void 0 ? _a : parseParenthesizedExpression(text, cursor);
    }
    function parseUnaryExpression(text, cursor) {
      var expr = parsePrimaryExpression(text, cursor);
      if (expr) {
        return expr;
      }
      var op = text.substr(cursor, 1);
      cursor += op.length;
      if (op !== "+" && op !== "-" && op !== "~") {
        return null;
      }
      var num = parseUnaryExpression(text, cursor);
      if (!num) {
        return null;
      }
      cursor = num.cursor;
      return {
        cursor,
        evaluable: new nodes_1.UnaryOperationNode(op, num.evaluable)
      };
    }
    function readBinaryOperator(ops, text, cursor) {
      cursor += (0, reader_1.readWhitespace)(text, cursor).length;
      var op = ops.filter(function(op2) {
        return text.startsWith(op2, cursor);
      })[0];
      if (!op) {
        return null;
      }
      cursor += op.length;
      cursor += (0, reader_1.readWhitespace)(text, cursor).length;
      return {
        cursor,
        operator: op
      };
    }
    function createBinaryOperationExpressionParser(exprParser, ops) {
      return function(text, cursor) {
        var firstExpr = exprParser(text, cursor);
        if (!firstExpr) {
          return null;
        }
        cursor = firstExpr.cursor;
        var expr = firstExpr.evaluable;
        for (; ; ) {
          var op = readBinaryOperator(ops, text, cursor);
          if (!op) {
            break;
          }
          cursor = op.cursor;
          var nextExpr = exprParser(text, cursor);
          if (!nextExpr) {
            return null;
          }
          cursor = nextExpr.cursor;
          expr = new nodes_1.BinaryOperationNode(op.operator, expr, nextExpr.evaluable);
        }
        return expr ? {
          cursor,
          evaluable: expr
        } : null;
      };
    }
    var parseBinaryOperationExpression = [
      ["**"],
      ["*", "/", "%"],
      ["+", "-"],
      ["<<", ">>>", ">>"],
      ["&"],
      ["^"],
      ["|"]
    ].reduce(function(parser, ops) {
      return createBinaryOperationExpressionParser(parser, ops);
    }, parseUnaryExpression);
    function parseExpression(text, cursor) {
      cursor += (0, reader_1.readWhitespace)(text, cursor).length;
      return parseBinaryOperationExpression(text, cursor);
    }
    function parseEcmaNumberExpression(text) {
      var expr = parseExpression(text, 0);
      if (!expr) {
        return null;
      }
      var cursor = expr.cursor + (0, reader_1.readWhitespace)(text, expr.cursor).length;
      if (cursor !== text.length) {
        return null;
      }
      return expr.evaluable;
    }
    exports.parseEcmaNumberExpression = parseEcmaNumberExpression;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/converter/number.js
var require_number = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/converter/number.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createNumberFormatter = exports.numberToString = exports.numberFromUnknown = exports.parseNumber = void 0;
    var type_util_1 = require_type_util();
    var parser_1 = require_parser();
    function parseNumber(text) {
      var _a;
      var r = (0, parser_1.parseEcmaNumberExpression)(text);
      return (_a = r === null || r === void 0 ? void 0 : r.evaluate()) !== null && _a !== void 0 ? _a : null;
    }
    exports.parseNumber = parseNumber;
    function numberFromUnknown(value) {
      if (typeof value === "number") {
        return value;
      }
      if (typeof value === "string") {
        var pv = parseNumber(value);
        if (!(0, type_util_1.isEmpty)(pv)) {
          return pv;
        }
      }
      return 0;
    }
    exports.numberFromUnknown = numberFromUnknown;
    function numberToString(value) {
      return String(value);
    }
    exports.numberToString = numberToString;
    function createNumberFormatter(digits) {
      return function(value) {
        return value.toFixed(Math.max(Math.min(digits, 20), 0));
      };
    }
    exports.createNumberFormatter = createNumberFormatter;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/converter/parser.js
var require_parser2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/converter/parser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/converter/percentage.js
var require_percentage = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/converter/percentage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.formatPercentage = void 0;
    var number_1 = require_number();
    var innerFormatter = (0, number_1.createNumberFormatter)(0);
    function formatPercentage(value) {
      return innerFormatter(value) + "%";
    }
    exports.formatPercentage = formatPercentage;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/converter/string.js
var require_string = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/converter/string.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.formatString = exports.stringFromUnknown = void 0;
    function stringFromUnknown(value) {
      return String(value);
    }
    exports.stringFromUnknown = stringFromUnknown;
    function formatString(value) {
      return value;
    }
    exports.formatString = formatString;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/value.js
var require_value2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/value.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/model/value-sync.js
var require_value_sync = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/model/value-sync.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.connectValues = void 0;
    function connectValues(_a) {
      var primary = _a.primary, secondary = _a.secondary, forward = _a.forward, backward = _a.backward;
      var changing = false;
      function preventFeedback(callback) {
        if (changing) {
          return;
        }
        changing = true;
        callback();
        changing = false;
      }
      primary.emitter.on("change", function(ev) {
        preventFeedback(function() {
          secondary.setRawValue(forward(primary, secondary), ev.options);
        });
      });
      secondary.emitter.on("change", function(ev) {
        preventFeedback(function() {
          primary.setRawValue(backward(primary, secondary), ev.options);
        });
        preventFeedback(function() {
          secondary.setRawValue(forward(primary, secondary), ev.options);
        });
      });
      preventFeedback(function() {
        secondary.setRawValue(forward(primary, secondary), {
          forceEmit: false,
          last: true
        });
      });
    }
    exports.connectValues = connectValues;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/ui.js
var require_ui = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/ui.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isArrowKey = exports.isVerticalArrowKey = exports.getHorizontalStepKeys = exports.getVerticalStepKeys = exports.getStepForKey = void 0;
    function getStepForKey(baseStep, keys) {
      var step = baseStep * (keys.altKey ? 0.1 : 1) * (keys.shiftKey ? 10 : 1);
      if (keys.upKey) {
        return +step;
      } else if (keys.downKey) {
        return -step;
      }
      return 0;
    }
    exports.getStepForKey = getStepForKey;
    function getVerticalStepKeys(ev) {
      return {
        altKey: ev.altKey,
        downKey: ev.key === "ArrowDown",
        shiftKey: ev.shiftKey,
        upKey: ev.key === "ArrowUp"
      };
    }
    exports.getVerticalStepKeys = getVerticalStepKeys;
    function getHorizontalStepKeys(ev) {
      return {
        altKey: ev.altKey,
        downKey: ev.key === "ArrowLeft",
        shiftKey: ev.shiftKey,
        upKey: ev.key === "ArrowRight"
      };
    }
    exports.getHorizontalStepKeys = getHorizontalStepKeys;
    function isVerticalArrowKey(key) {
      return key === "ArrowUp" || key === "ArrowDown";
    }
    exports.isVerticalArrowKey = isVerticalArrowKey;
    function isArrowKey(key) {
      return isVerticalArrowKey(key) || key === "ArrowLeft" || key === "ArrowRight";
    }
    exports.isArrowKey = isArrowKey;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/view/pointer-handler.js
var require_pointer_handler = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/view/pointer-handler.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PointerHandler = void 0;
    var emitter_1 = require_emitter();
    function computeOffset(ev, elem) {
      var _a, _b;
      var win = elem.ownerDocument.defaultView;
      var rect = elem.getBoundingClientRect();
      return {
        x: ev.pageX - (((_a = win && win.scrollX) !== null && _a !== void 0 ? _a : 0) + rect.left),
        y: ev.pageY - (((_b = win && win.scrollY) !== null && _b !== void 0 ? _b : 0) + rect.top)
      };
    }
    var PointerHandler = (
      /** @class */
      function() {
        function PointerHandler2(element) {
          this.lastTouch_ = null;
          this.onDocumentMouseMove_ = this.onDocumentMouseMove_.bind(this);
          this.onDocumentMouseUp_ = this.onDocumentMouseUp_.bind(this);
          this.onMouseDown_ = this.onMouseDown_.bind(this);
          this.onTouchEnd_ = this.onTouchEnd_.bind(this);
          this.onTouchMove_ = this.onTouchMove_.bind(this);
          this.onTouchStart_ = this.onTouchStart_.bind(this);
          this.elem_ = element;
          this.emitter = new emitter_1.Emitter();
          element.addEventListener("touchstart", this.onTouchStart_, {
            passive: false
          });
          element.addEventListener("touchmove", this.onTouchMove_, {
            passive: true
          });
          element.addEventListener("touchend", this.onTouchEnd_);
          element.addEventListener("mousedown", this.onMouseDown_);
        }
        PointerHandler2.prototype.computePosition_ = function(offset) {
          var rect = this.elem_.getBoundingClientRect();
          return {
            bounds: {
              width: rect.width,
              height: rect.height
            },
            point: offset ? {
              x: offset.x,
              y: offset.y
            } : null
          };
        };
        PointerHandler2.prototype.onMouseDown_ = function(ev) {
          var _a;
          ev.preventDefault();
          (_a = ev.currentTarget) === null || _a === void 0 ? void 0 : _a.focus();
          var doc = this.elem_.ownerDocument;
          doc.addEventListener("mousemove", this.onDocumentMouseMove_);
          doc.addEventListener("mouseup", this.onDocumentMouseUp_);
          this.emitter.emit("down", {
            altKey: ev.altKey,
            data: this.computePosition_(computeOffset(ev, this.elem_)),
            sender: this,
            shiftKey: ev.shiftKey
          });
        };
        PointerHandler2.prototype.onDocumentMouseMove_ = function(ev) {
          this.emitter.emit("move", {
            altKey: ev.altKey,
            data: this.computePosition_(computeOffset(ev, this.elem_)),
            sender: this,
            shiftKey: ev.shiftKey
          });
        };
        PointerHandler2.prototype.onDocumentMouseUp_ = function(ev) {
          var doc = this.elem_.ownerDocument;
          doc.removeEventListener("mousemove", this.onDocumentMouseMove_);
          doc.removeEventListener("mouseup", this.onDocumentMouseUp_);
          this.emitter.emit("up", {
            altKey: ev.altKey,
            data: this.computePosition_(computeOffset(ev, this.elem_)),
            sender: this,
            shiftKey: ev.shiftKey
          });
        };
        PointerHandler2.prototype.onTouchStart_ = function(ev) {
          ev.preventDefault();
          var touch = ev.targetTouches.item(0);
          var rect = this.elem_.getBoundingClientRect();
          this.emitter.emit("down", {
            altKey: ev.altKey,
            data: this.computePosition_(touch ? {
              x: touch.clientX - rect.left,
              y: touch.clientY - rect.top
            } : void 0),
            sender: this,
            shiftKey: ev.shiftKey
          });
          this.lastTouch_ = touch;
        };
        PointerHandler2.prototype.onTouchMove_ = function(ev) {
          var touch = ev.targetTouches.item(0);
          var rect = this.elem_.getBoundingClientRect();
          this.emitter.emit("move", {
            altKey: ev.altKey,
            data: this.computePosition_(touch ? {
              x: touch.clientX - rect.left,
              y: touch.clientY - rect.top
            } : void 0),
            sender: this,
            shiftKey: ev.shiftKey
          });
          this.lastTouch_ = touch;
        };
        PointerHandler2.prototype.onTouchEnd_ = function(ev) {
          var _a;
          var touch = (_a = ev.targetTouches.item(0)) !== null && _a !== void 0 ? _a : this.lastTouch_;
          var rect = this.elem_.getBoundingClientRect();
          this.emitter.emit("up", {
            altKey: ev.altKey,
            data: this.computePosition_(touch ? {
              x: touch.clientX - rect.left,
              y: touch.clientY - rect.top
            } : void 0),
            sender: this,
            shiftKey: ev.shiftKey
          });
        };
        return PointerHandler2;
      }()
    );
    exports.PointerHandler = PointerHandler;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/number-util.js
var require_number_util = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/number-util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.loopRange = exports.constrainRange = exports.getDecimalDigits = exports.mapRange = void 0;
    function mapRange(value, start1, end1, start2, end2) {
      var p = (value - start1) / (end1 - start1);
      return start2 + p * (end2 - start2);
    }
    exports.mapRange = mapRange;
    function getDecimalDigits(value) {
      var text = String(value.toFixed(10));
      var frac = text.split(".")[1];
      return frac.replace(/0+$/, "").length;
    }
    exports.getDecimalDigits = getDecimalDigits;
    function constrainRange(value, min, max) {
      return Math.min(Math.max(value, min), max);
    }
    exports.constrainRange = constrainRange;
    function loopRange(value, max) {
      return (value % max + max) % max;
    }
    exports.loopRange = loopRange;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/number/view/number-text.js
var require_number_text = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/number/view/number-text.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NumberTextView = void 0;
    var dom_util_1 = require_dom_util();
    var number_util_1 = require_number_util();
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("txt");
    var NumberTextView = (
      /** @class */
      function() {
        function NumberTextView2(doc, config) {
          this.onChange_ = this.onChange_.bind(this);
          this.props_ = config.props;
          this.props_.emitter.on("change", this.onChange_);
          this.element = doc.createElement("div");
          this.element.classList.add(className(), className(void 0, "num"));
          if (config.arrayPosition) {
            this.element.classList.add(className(void 0, config.arrayPosition));
          }
          config.viewProps.bindClassModifiers(this.element);
          var inputElem = doc.createElement("input");
          inputElem.classList.add(className("i"));
          inputElem.type = "text";
          config.viewProps.bindDisabled(inputElem);
          this.element.appendChild(inputElem);
          this.inputElement = inputElem;
          this.onDraggingChange_ = this.onDraggingChange_.bind(this);
          this.dragging_ = config.dragging;
          this.dragging_.emitter.on("change", this.onDraggingChange_);
          this.element.classList.add(className());
          this.inputElement.classList.add(className("i"));
          var knobElem = doc.createElement("div");
          knobElem.classList.add(className("k"));
          this.element.appendChild(knobElem);
          this.knobElement = knobElem;
          var guideElem = doc.createElementNS(dom_util_1.SVG_NS, "svg");
          guideElem.classList.add(className("g"));
          this.knobElement.appendChild(guideElem);
          var bodyElem = doc.createElementNS(dom_util_1.SVG_NS, "path");
          bodyElem.classList.add(className("gb"));
          guideElem.appendChild(bodyElem);
          this.guideBodyElem_ = bodyElem;
          var headElem = doc.createElementNS(dom_util_1.SVG_NS, "path");
          headElem.classList.add(className("gh"));
          guideElem.appendChild(headElem);
          this.guideHeadElem_ = headElem;
          var tooltipElem = doc.createElement("div");
          tooltipElem.classList.add((0, class_name_1.ClassName)("tt")());
          this.knobElement.appendChild(tooltipElem);
          this.tooltipElem_ = tooltipElem;
          config.value.emitter.on("change", this.onChange_);
          this.value = config.value;
          this.refresh();
        }
        NumberTextView2.prototype.onDraggingChange_ = function(ev) {
          if (ev.rawValue === null) {
            this.element.classList.remove(className(void 0, "drg"));
            return;
          }
          this.element.classList.add(className(void 0, "drg"));
          var x = ev.rawValue / this.props_.get("draggingScale");
          var aox = x + (x > 0 ? -1 : x < 0 ? 1 : 0);
          var adx = (0, number_util_1.constrainRange)(-aox, -4, 4);
          this.guideHeadElem_.setAttributeNS(null, "d", ["M ".concat(aox + adx, ",0 L").concat(aox, ",4 L").concat(aox + adx, ",8"), "M ".concat(x, ",-1 L").concat(x, ",9")].join(" "));
          this.guideBodyElem_.setAttributeNS(null, "d", "M 0,4 L".concat(x, ",4"));
          var formatter = this.props_.get("formatter");
          this.tooltipElem_.textContent = formatter(this.value.rawValue);
          this.tooltipElem_.style.left = "".concat(x, "px");
        };
        NumberTextView2.prototype.refresh = function() {
          var formatter = this.props_.get("formatter");
          this.inputElement.value = formatter(this.value.rawValue);
        };
        NumberTextView2.prototype.onChange_ = function() {
          this.refresh();
        };
        return NumberTextView2;
      }()
    );
    exports.NumberTextView = NumberTextView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/number/controller/number-text.js
var require_number_text2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/number/controller/number-text.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NumberTextController = void 0;
    var type_util_1 = require_type_util();
    var values_1 = require_values();
    var ui_1 = require_ui();
    var pointer_handler_1 = require_pointer_handler();
    var number_text_1 = require_number_text();
    var NumberTextController = (
      /** @class */
      function() {
        function NumberTextController2(doc, config) {
          var _a;
          this.originRawValue_ = 0;
          this.onInputChange_ = this.onInputChange_.bind(this);
          this.onInputKeyDown_ = this.onInputKeyDown_.bind(this);
          this.onInputKeyUp_ = this.onInputKeyUp_.bind(this);
          this.onPointerDown_ = this.onPointerDown_.bind(this);
          this.onPointerMove_ = this.onPointerMove_.bind(this);
          this.onPointerUp_ = this.onPointerUp_.bind(this);
          this.baseStep_ = config.baseStep;
          this.parser_ = config.parser;
          this.props = config.props;
          this.sliderProps_ = (_a = config.sliderProps) !== null && _a !== void 0 ? _a : null;
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.dragging_ = (0, values_1.createValue)(null);
          this.view = new number_text_1.NumberTextView(doc, {
            arrayPosition: config.arrayPosition,
            dragging: this.dragging_,
            props: this.props,
            value: this.value,
            viewProps: this.viewProps
          });
          this.view.inputElement.addEventListener("change", this.onInputChange_);
          this.view.inputElement.addEventListener("keydown", this.onInputKeyDown_);
          this.view.inputElement.addEventListener("keyup", this.onInputKeyUp_);
          var ph = new pointer_handler_1.PointerHandler(this.view.knobElement);
          ph.emitter.on("down", this.onPointerDown_);
          ph.emitter.on("move", this.onPointerMove_);
          ph.emitter.on("up", this.onPointerUp_);
        }
        NumberTextController2.prototype.constrainValue_ = function(value) {
          var _a, _b;
          var min = (_a = this.sliderProps_) === null || _a === void 0 ? void 0 : _a.get("minValue");
          var max = (_b = this.sliderProps_) === null || _b === void 0 ? void 0 : _b.get("maxValue");
          var v = value;
          if (min !== void 0) {
            v = Math.max(v, min);
          }
          if (max !== void 0) {
            v = Math.min(v, max);
          }
          return v;
        };
        NumberTextController2.prototype.onInputChange_ = function(e) {
          var inputElem = (0, type_util_1.forceCast)(e.currentTarget);
          var value = inputElem.value;
          var parsedValue = this.parser_(value);
          if (!(0, type_util_1.isEmpty)(parsedValue)) {
            this.value.rawValue = this.constrainValue_(parsedValue);
          }
          this.view.refresh();
        };
        NumberTextController2.prototype.onInputKeyDown_ = function(ev) {
          var step = (0, ui_1.getStepForKey)(this.baseStep_, (0, ui_1.getVerticalStepKeys)(ev));
          if (step === 0) {
            return;
          }
          this.value.setRawValue(this.constrainValue_(this.value.rawValue + step), {
            forceEmit: false,
            last: false
          });
        };
        NumberTextController2.prototype.onInputKeyUp_ = function(ev) {
          var step = (0, ui_1.getStepForKey)(this.baseStep_, (0, ui_1.getVerticalStepKeys)(ev));
          if (step === 0) {
            return;
          }
          this.value.setRawValue(this.value.rawValue, {
            forceEmit: true,
            last: true
          });
        };
        NumberTextController2.prototype.onPointerDown_ = function() {
          this.originRawValue_ = this.value.rawValue;
          this.dragging_.rawValue = 0;
        };
        NumberTextController2.prototype.computeDraggingValue_ = function(data) {
          if (!data.point) {
            return null;
          }
          var dx = data.point.x - data.bounds.width / 2;
          return this.constrainValue_(this.originRawValue_ + dx * this.props.get("draggingScale"));
        };
        NumberTextController2.prototype.onPointerMove_ = function(ev) {
          var v = this.computeDraggingValue_(ev.data);
          if (v === null) {
            return;
          }
          this.value.setRawValue(v, {
            forceEmit: false,
            last: false
          });
          this.dragging_.rawValue = this.value.rawValue - this.originRawValue_;
        };
        NumberTextController2.prototype.onPointerUp_ = function(ev) {
          var v = this.computeDraggingValue_(ev.data);
          if (v === null) {
            return;
          }
          this.value.setRawValue(v, {
            forceEmit: true,
            last: true
          });
          this.dragging_.rawValue = null;
        };
        return NumberTextController2;
      }()
    );
    exports.NumberTextController = NumberTextController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/number/view/slider.js
var require_slider = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/number/view/slider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SliderView = void 0;
    var number_util_1 = require_number_util();
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("sld");
    var SliderView = (
      /** @class */
      function() {
        function SliderView2(doc, config) {
          this.onChange_ = this.onChange_.bind(this);
          this.props_ = config.props;
          this.props_.emitter.on("change", this.onChange_);
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var trackElem = doc.createElement("div");
          trackElem.classList.add(className("t"));
          config.viewProps.bindTabIndex(trackElem);
          this.element.appendChild(trackElem);
          this.trackElement = trackElem;
          var knobElem = doc.createElement("div");
          knobElem.classList.add(className("k"));
          this.trackElement.appendChild(knobElem);
          this.knobElement = knobElem;
          config.value.emitter.on("change", this.onChange_);
          this.value = config.value;
          this.update_();
        }
        SliderView2.prototype.update_ = function() {
          var p = (0, number_util_1.constrainRange)((0, number_util_1.mapRange)(this.value.rawValue, this.props_.get("minValue"), this.props_.get("maxValue"), 0, 100), 0, 100);
          this.knobElement.style.width = "".concat(p, "%");
        };
        SliderView2.prototype.onChange_ = function() {
          this.update_();
        };
        return SliderView2;
      }()
    );
    exports.SliderView = SliderView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/number/controller/slider.js
var require_slider2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/number/controller/slider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SliderController = void 0;
    var number_util_1 = require_number_util();
    var ui_1 = require_ui();
    var pointer_handler_1 = require_pointer_handler();
    var slider_1 = require_slider();
    var SliderController = (
      /** @class */
      function() {
        function SliderController2(doc, config) {
          this.onKeyDown_ = this.onKeyDown_.bind(this);
          this.onKeyUp_ = this.onKeyUp_.bind(this);
          this.onPointerDownOrMove_ = this.onPointerDownOrMove_.bind(this);
          this.onPointerUp_ = this.onPointerUp_.bind(this);
          this.baseStep_ = config.baseStep;
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.props = config.props;
          this.view = new slider_1.SliderView(doc, {
            props: this.props,
            value: this.value,
            viewProps: this.viewProps
          });
          this.ptHandler_ = new pointer_handler_1.PointerHandler(this.view.trackElement);
          this.ptHandler_.emitter.on("down", this.onPointerDownOrMove_);
          this.ptHandler_.emitter.on("move", this.onPointerDownOrMove_);
          this.ptHandler_.emitter.on("up", this.onPointerUp_);
          this.view.trackElement.addEventListener("keydown", this.onKeyDown_);
          this.view.trackElement.addEventListener("keyup", this.onKeyUp_);
        }
        SliderController2.prototype.handlePointerEvent_ = function(d, opts) {
          if (!d.point) {
            return;
          }
          this.value.setRawValue((0, number_util_1.mapRange)((0, number_util_1.constrainRange)(d.point.x, 0, d.bounds.width), 0, d.bounds.width, this.props.get("minValue"), this.props.get("maxValue")), opts);
        };
        SliderController2.prototype.onPointerDownOrMove_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: false,
            last: false
          });
        };
        SliderController2.prototype.onPointerUp_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: true,
            last: true
          });
        };
        SliderController2.prototype.onKeyDown_ = function(ev) {
          var step = (0, ui_1.getStepForKey)(this.baseStep_, (0, ui_1.getHorizontalStepKeys)(ev));
          if (step === 0) {
            return;
          }
          this.value.setRawValue(this.value.rawValue + step, {
            forceEmit: false,
            last: false
          });
        };
        SliderController2.prototype.onKeyUp_ = function(ev) {
          var step = (0, ui_1.getStepForKey)(this.baseStep_, (0, ui_1.getHorizontalStepKeys)(ev));
          if (step === 0) {
            return;
          }
          this.value.setRawValue(this.value.rawValue, {
            forceEmit: true,
            last: true
          });
        };
        return SliderController2;
      }()
    );
    exports.SliderController = SliderController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/number/view/slider-text.js
var require_slider_text = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/number/view/slider-text.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SliderTextView = void 0;
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("sldtxt");
    var SliderTextView = (
      /** @class */
      function() {
        function SliderTextView2(doc, config) {
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          var sliderElem = doc.createElement("div");
          sliderElem.classList.add(className("s"));
          this.sliderView_ = config.sliderView;
          sliderElem.appendChild(this.sliderView_.element);
          this.element.appendChild(sliderElem);
          var textElem = doc.createElement("div");
          textElem.classList.add(className("t"));
          this.textView_ = config.textView;
          textElem.appendChild(this.textView_.element);
          this.element.appendChild(textElem);
        }
        return SliderTextView2;
      }()
    );
    exports.SliderTextView = SliderTextView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/number/controller/slider-text.js
var require_slider_text2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/number/controller/slider-text.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SliderTextController = void 0;
    var slider_text_1 = require_slider_text();
    var number_text_1 = require_number_text2();
    var slider_1 = require_slider2();
    var SliderTextController = (
      /** @class */
      function() {
        function SliderTextController2(doc, config) {
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.sliderC_ = new slider_1.SliderController(doc, {
            baseStep: config.baseStep,
            props: config.sliderProps,
            value: config.value,
            viewProps: this.viewProps
          });
          this.textC_ = new number_text_1.NumberTextController(doc, {
            baseStep: config.baseStep,
            parser: config.parser,
            props: config.textProps,
            sliderProps: config.sliderProps,
            value: config.value,
            viewProps: config.viewProps
          });
          this.view = new slider_text_1.SliderTextView(doc, {
            sliderView: this.sliderC_.view,
            textView: this.textC_.view
          });
        }
        Object.defineProperty(SliderTextController2.prototype, "sliderController", {
          get: function() {
            return this.sliderC_;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(SliderTextController2.prototype, "textController", {
          get: function() {
            return this.textC_;
          },
          enumerable: false,
          configurable: true
        });
        return SliderTextController2;
      }()
    );
    exports.SliderTextController = SliderTextController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/view/view.js
var require_view = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/view/view.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/params.js
var require_params2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/params.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/primitive.js
var require_primitive = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/primitive.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.writePrimitive = void 0;
    function writePrimitive(target, value) {
      target.write(value);
    }
    exports.writePrimitive = writePrimitive;
  }
});

// node_modules/@tweakpane/core/dist/cjs/common/util.js
var require_util = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/common/util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getSuitableDraggingScale = exports.getBaseStep = exports.getSuitableDecimalDigits = exports.createListConstraint = exports.normalizeListOptions = exports.parsePointDimensionParams = exports.parsePickerLayout = exports.parseListOptions = void 0;
    var type_util_1 = require_type_util();
    var composite_1 = require_composite();
    var list_1 = require_list();
    var step_1 = require_step();
    var number_util_1 = require_number_util();
    var params_parsers_1 = require_params_parsers();
    function parseListOptions(value) {
      var p = params_parsers_1.ParamsParsers;
      if (Array.isArray(value)) {
        return p.required.array(p.required.object({
          text: p.required.string,
          value: p.required.raw
        }))(value).value;
      }
      if (typeof value === "object") {
        return p.required.raw(value).value;
      }
      return void 0;
    }
    exports.parseListOptions = parseListOptions;
    function parsePickerLayout(value) {
      if (value === "inline" || value === "popup") {
        return value;
      }
      return void 0;
    }
    exports.parsePickerLayout = parsePickerLayout;
    function parsePointDimensionParams(value) {
      var p = params_parsers_1.ParamsParsers;
      return p.required.object({
        max: p.optional.number,
        min: p.optional.number,
        step: p.optional.number
      })(value).value;
    }
    exports.parsePointDimensionParams = parsePointDimensionParams;
    function normalizeListOptions(options) {
      if (Array.isArray(options)) {
        return options;
      }
      var items = [];
      Object.keys(options).forEach(function(text) {
        items.push({ text, value: options[text] });
      });
      return items;
    }
    exports.normalizeListOptions = normalizeListOptions;
    function createListConstraint(options) {
      return !(0, type_util_1.isEmpty)(options) ? new list_1.ListConstraint(normalizeListOptions((0, type_util_1.forceCast)(options))) : null;
    }
    exports.createListConstraint = createListConstraint;
    function findStep(constraint) {
      var c = constraint ? (0, composite_1.findConstraint)(constraint, step_1.StepConstraint) : null;
      if (!c) {
        return null;
      }
      return c.step;
    }
    function getSuitableDecimalDigits(constraint, rawValue) {
      var sc = constraint && (0, composite_1.findConstraint)(constraint, step_1.StepConstraint);
      if (sc) {
        return (0, number_util_1.getDecimalDigits)(sc.step);
      }
      return Math.max((0, number_util_1.getDecimalDigits)(rawValue), 2);
    }
    exports.getSuitableDecimalDigits = getSuitableDecimalDigits;
    function getBaseStep(constraint) {
      var step = findStep(constraint);
      return step !== null && step !== void 0 ? step : 1;
    }
    exports.getBaseStep = getBaseStep;
    function getSuitableDraggingScale(constraint, rawValue) {
      var _a;
      var sc = constraint && (0, composite_1.findConstraint)(constraint, step_1.StepConstraint);
      var base = Math.abs((_a = sc === null || sc === void 0 ? void 0 : sc.step) !== null && _a !== void 0 ? _a : rawValue);
      return base === 0 ? 0.1 : Math.pow(10, Math.floor(Math.log10(base)) - 1);
    }
    exports.getSuitableDraggingScale = getSuitableDraggingScale;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/boolean/view/checkbox.js
var require_checkbox = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/boolean/view/checkbox.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CheckboxView = void 0;
    var dom_util_1 = require_dom_util();
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("ckb");
    var CheckboxView = (
      /** @class */
      function() {
        function CheckboxView2(doc, config) {
          this.onValueChange_ = this.onValueChange_.bind(this);
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var labelElem = doc.createElement("label");
          labelElem.classList.add(className("l"));
          this.element.appendChild(labelElem);
          var inputElem = doc.createElement("input");
          inputElem.classList.add(className("i"));
          inputElem.type = "checkbox";
          labelElem.appendChild(inputElem);
          this.inputElement = inputElem;
          config.viewProps.bindDisabled(this.inputElement);
          var wrapperElem = doc.createElement("div");
          wrapperElem.classList.add(className("w"));
          labelElem.appendChild(wrapperElem);
          var markElem = (0, dom_util_1.createSvgIconElement)(doc, "check");
          wrapperElem.appendChild(markElem);
          config.value.emitter.on("change", this.onValueChange_);
          this.value = config.value;
          this.update_();
        }
        CheckboxView2.prototype.update_ = function() {
          this.inputElement.checked = this.value.rawValue;
        };
        CheckboxView2.prototype.onValueChange_ = function() {
          this.update_();
        };
        return CheckboxView2;
      }()
    );
    exports.CheckboxView = CheckboxView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/boolean/controller/checkbox.js
var require_checkbox2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/boolean/controller/checkbox.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CheckboxController = void 0;
    var type_util_1 = require_type_util();
    var checkbox_1 = require_checkbox();
    var CheckboxController = (
      /** @class */
      function() {
        function CheckboxController2(doc, config) {
          this.onInputChange_ = this.onInputChange_.bind(this);
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.view = new checkbox_1.CheckboxView(doc, {
            value: this.value,
            viewProps: this.viewProps
          });
          this.view.inputElement.addEventListener("change", this.onInputChange_);
        }
        CheckboxController2.prototype.onInputChange_ = function(e) {
          var inputElem = (0, type_util_1.forceCast)(e.currentTarget);
          this.value.rawValue = inputElem.checked;
        };
        return CheckboxController2;
      }()
    );
    exports.CheckboxController = CheckboxController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/boolean/plugin.js
var require_plugin6 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/boolean/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BooleanInputPlugin = void 0;
    var composite_1 = require_composite();
    var list_1 = require_list();
    var list_2 = require_list3();
    var boolean_1 = require_boolean();
    var value_map_1 = require_value_map();
    var params_parsers_1 = require_params_parsers();
    var primitive_1 = require_primitive();
    var util_1 = require_util();
    var checkbox_1 = require_checkbox2();
    function createConstraint(params) {
      var constraints = [];
      var lc = (0, util_1.createListConstraint)(params.options);
      if (lc) {
        constraints.push(lc);
      }
      return new composite_1.CompositeConstraint(constraints);
    }
    exports.BooleanInputPlugin = {
      id: "input-bool",
      type: "input",
      accept: function(value, params) {
        if (typeof value !== "boolean") {
          return null;
        }
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          options: p.optional.custom(util_1.parseListOptions)
        });
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(_args) {
          return boolean_1.boolFromUnknown;
        },
        constraint: function(args) {
          return createConstraint(args.params);
        },
        writer: function(_args) {
          return primitive_1.writePrimitive;
        }
      },
      controller: function(args) {
        var doc = args.document;
        var value = args.value;
        var c = args.constraint;
        var lc = c && (0, composite_1.findConstraint)(c, list_1.ListConstraint);
        if (lc) {
          return new list_2.ListController(doc, {
            props: new value_map_1.ValueMap({
              options: lc.values.value("options")
            }),
            value,
            viewProps: args.viewProps
          });
        }
        return new checkbox_1.CheckboxController(doc, {
          value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/color.js
var require_color = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/color.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ColorView = void 0;
    var reactive_1 = require_reactive();
    var class_name_1 = require_class_name();
    var reactive_2 = require_reactive2();
    var className = (0, class_name_1.ClassName)("col");
    var ColorView = (
      /** @class */
      function() {
        function ColorView2(doc, config) {
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.foldable.bindExpandedClass(this.element, className(void 0, "expanded"));
          (0, reactive_1.bindValueMap)(config.foldable, "completed", (0, reactive_2.valueToClassName)(this.element, className(void 0, "cpl")));
          var headElem = doc.createElement("div");
          headElem.classList.add(className("h"));
          this.element.appendChild(headElem);
          var swatchElem = doc.createElement("div");
          swatchElem.classList.add(className("s"));
          headElem.appendChild(swatchElem);
          this.swatchElement = swatchElem;
          var textElem = doc.createElement("div");
          textElem.classList.add(className("t"));
          headElem.appendChild(textElem);
          this.textElement = textElem;
          if (config.pickerLayout === "inline") {
            var pickerElem = doc.createElement("div");
            pickerElem.classList.add(className("p"));
            this.element.appendChild(pickerElem);
            this.pickerElement = pickerElem;
          } else {
            this.pickerElement = null;
          }
        }
        return ColorView2;
      }()
    );
    exports.ColorView = ColorView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/model/color-model.js
var require_color_model = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/model/color-model.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.convertColor = exports.constrainColorComponents = exports.getColorMaxComponents = exports.appendAlphaComponent = exports.removeAlphaComponent = exports.hsvToHslInt = exports.hslToHsvInt = exports.hsvToRgbInt = void 0;
    var number_util_1 = require_number_util();
    function rgbToHslInt(r, g, b) {
      var rp = (0, number_util_1.constrainRange)(r / 255, 0, 1);
      var gp = (0, number_util_1.constrainRange)(g / 255, 0, 1);
      var bp = (0, number_util_1.constrainRange)(b / 255, 0, 1);
      var cmax = Math.max(rp, gp, bp);
      var cmin = Math.min(rp, gp, bp);
      var c = cmax - cmin;
      var h = 0;
      var s = 0;
      var l = (cmin + cmax) / 2;
      if (c !== 0) {
        s = c / (1 - Math.abs(cmax + cmin - 1));
        if (rp === cmax) {
          h = (gp - bp) / c;
        } else if (gp === cmax) {
          h = 2 + (bp - rp) / c;
        } else {
          h = 4 + (rp - gp) / c;
        }
        h = h / 6 + (h < 0 ? 1 : 0);
      }
      return [h * 360, s * 100, l * 100];
    }
    function hslToRgbInt(h, s, l) {
      var _a, _b, _c, _d, _e, _f;
      var hp = (h % 360 + 360) % 360;
      var sp = (0, number_util_1.constrainRange)(s / 100, 0, 1);
      var lp = (0, number_util_1.constrainRange)(l / 100, 0, 1);
      var c = (1 - Math.abs(2 * lp - 1)) * sp;
      var x = c * (1 - Math.abs(hp / 60 % 2 - 1));
      var m = lp - c / 2;
      var rp, gp, bp;
      if (hp >= 0 && hp < 60) {
        _a = [c, x, 0], rp = _a[0], gp = _a[1], bp = _a[2];
      } else if (hp >= 60 && hp < 120) {
        _b = [x, c, 0], rp = _b[0], gp = _b[1], bp = _b[2];
      } else if (hp >= 120 && hp < 180) {
        _c = [0, c, x], rp = _c[0], gp = _c[1], bp = _c[2];
      } else if (hp >= 180 && hp < 240) {
        _d = [0, x, c], rp = _d[0], gp = _d[1], bp = _d[2];
      } else if (hp >= 240 && hp < 300) {
        _e = [x, 0, c], rp = _e[0], gp = _e[1], bp = _e[2];
      } else {
        _f = [c, 0, x], rp = _f[0], gp = _f[1], bp = _f[2];
      }
      return [(rp + m) * 255, (gp + m) * 255, (bp + m) * 255];
    }
    function rgbToHsvInt(r, g, b) {
      var rp = (0, number_util_1.constrainRange)(r / 255, 0, 1);
      var gp = (0, number_util_1.constrainRange)(g / 255, 0, 1);
      var bp = (0, number_util_1.constrainRange)(b / 255, 0, 1);
      var cmax = Math.max(rp, gp, bp);
      var cmin = Math.min(rp, gp, bp);
      var d = cmax - cmin;
      var h;
      if (d === 0) {
        h = 0;
      } else if (cmax === rp) {
        h = 60 * (((gp - bp) / d % 6 + 6) % 6);
      } else if (cmax === gp) {
        h = 60 * ((bp - rp) / d + 2);
      } else {
        h = 60 * ((rp - gp) / d + 4);
      }
      var s = cmax === 0 ? 0 : d / cmax;
      var v = cmax;
      return [h, s * 100, v * 100];
    }
    function hsvToRgbInt(h, s, v) {
      var _a, _b, _c, _d, _e, _f;
      var hp = (0, number_util_1.loopRange)(h, 360);
      var sp = (0, number_util_1.constrainRange)(s / 100, 0, 1);
      var vp = (0, number_util_1.constrainRange)(v / 100, 0, 1);
      var c = vp * sp;
      var x = c * (1 - Math.abs(hp / 60 % 2 - 1));
      var m = vp - c;
      var rp, gp, bp;
      if (hp >= 0 && hp < 60) {
        _a = [c, x, 0], rp = _a[0], gp = _a[1], bp = _a[2];
      } else if (hp >= 60 && hp < 120) {
        _b = [x, c, 0], rp = _b[0], gp = _b[1], bp = _b[2];
      } else if (hp >= 120 && hp < 180) {
        _c = [0, c, x], rp = _c[0], gp = _c[1], bp = _c[2];
      } else if (hp >= 180 && hp < 240) {
        _d = [0, x, c], rp = _d[0], gp = _d[1], bp = _d[2];
      } else if (hp >= 240 && hp < 300) {
        _e = [x, 0, c], rp = _e[0], gp = _e[1], bp = _e[2];
      } else {
        _f = [c, 0, x], rp = _f[0], gp = _f[1], bp = _f[2];
      }
      return [(rp + m) * 255, (gp + m) * 255, (bp + m) * 255];
    }
    exports.hsvToRgbInt = hsvToRgbInt;
    function hslToHsvInt(h, s, l) {
      var sd = l + s * (100 - Math.abs(2 * l - 100)) / (2 * 100);
      return [
        h,
        sd !== 0 ? s * (100 - Math.abs(2 * l - 100)) / sd : 0,
        l + s * (100 - Math.abs(2 * l - 100)) / (2 * 100)
      ];
    }
    exports.hslToHsvInt = hslToHsvInt;
    function hsvToHslInt(h, s, v) {
      var sd = 100 - Math.abs(v * (200 - s) / 100 - 100);
      return [h, sd !== 0 ? s * v / sd : 0, v * (200 - s) / (2 * 100)];
    }
    exports.hsvToHslInt = hsvToHslInt;
    function removeAlphaComponent(comps) {
      return [comps[0], comps[1], comps[2]];
    }
    exports.removeAlphaComponent = removeAlphaComponent;
    function appendAlphaComponent(comps, alpha) {
      return [comps[0], comps[1], comps[2], alpha];
    }
    exports.appendAlphaComponent = appendAlphaComponent;
    var MODE_CONVERTER_MAP = {
      hsl: {
        hsl: function(h, s, l) {
          return [h, s, l];
        },
        hsv: hslToHsvInt,
        rgb: hslToRgbInt
      },
      hsv: {
        hsl: hsvToHslInt,
        hsv: function(h, s, v) {
          return [h, s, v];
        },
        rgb: hsvToRgbInt
      },
      rgb: {
        hsl: rgbToHslInt,
        hsv: rgbToHsvInt,
        rgb: function(r, g, b) {
          return [r, g, b];
        }
      }
    };
    function getColorMaxComponents(mode, type) {
      return [
        type === "float" ? 1 : mode === "rgb" ? 255 : 360,
        type === "float" ? 1 : mode === "rgb" ? 255 : 100,
        type === "float" ? 1 : mode === "rgb" ? 255 : 100
      ];
    }
    exports.getColorMaxComponents = getColorMaxComponents;
    function loopHueRange(hue, max) {
      return hue === max ? max : (0, number_util_1.loopRange)(hue, max);
    }
    function constrainColorComponents(components, mode, type) {
      var _a;
      var ms = getColorMaxComponents(mode, type);
      return [
        mode === "rgb" ? (0, number_util_1.constrainRange)(components[0], 0, ms[0]) : loopHueRange(components[0], ms[0]),
        (0, number_util_1.constrainRange)(components[1], 0, ms[1]),
        (0, number_util_1.constrainRange)(components[2], 0, ms[2]),
        (0, number_util_1.constrainRange)((_a = components[3]) !== null && _a !== void 0 ? _a : 1, 0, 1)
      ];
    }
    exports.constrainColorComponents = constrainColorComponents;
    function convertColorType(comps, mode, from, to) {
      var fms = getColorMaxComponents(mode, from);
      var tms = getColorMaxComponents(mode, to);
      return comps.map(function(c, index) {
        return c / fms[index] * tms[index];
      });
    }
    function convertColor(components, from, to) {
      var _a;
      var intComps = convertColorType(components, from.mode, from.type, "int");
      var result = (_a = MODE_CONVERTER_MAP[from.mode])[to.mode].apply(_a, intComps);
      return convertColorType(result, to.mode, "int", to.type);
    }
    exports.convertColor = convertColor;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/model/color.js
var require_color2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/model/color.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Color = void 0;
    var type_util_1 = require_type_util();
    var color_model_1 = require_color_model();
    function isRgbColorComponent(obj, key) {
      if (typeof obj !== "object" || (0, type_util_1.isEmpty)(obj)) {
        return false;
      }
      return key in obj && typeof obj[key] === "number";
    }
    var Color = (
      /** @class */
      function() {
        function Color2(comps, mode, type) {
          if (type === void 0) {
            type = "int";
          }
          this.mode = mode;
          this.type = type;
          this.comps_ = (0, color_model_1.constrainColorComponents)(comps, mode, type);
        }
        Color2.black = function(type) {
          if (type === void 0) {
            type = "int";
          }
          return new Color2([0, 0, 0], "rgb", type);
        };
        Color2.fromObject = function(obj, type) {
          if (type === void 0) {
            type = "int";
          }
          var comps = "a" in obj ? [obj.r, obj.g, obj.b, obj.a] : [obj.r, obj.g, obj.b];
          return new Color2(comps, "rgb", type);
        };
        Color2.toRgbaObject = function(color, type) {
          if (type === void 0) {
            type = "int";
          }
          return color.toRgbaObject(type);
        };
        Color2.isRgbColorObject = function(obj) {
          return isRgbColorComponent(obj, "r") && isRgbColorComponent(obj, "g") && isRgbColorComponent(obj, "b");
        };
        Color2.isRgbaColorObject = function(obj) {
          return this.isRgbColorObject(obj) && isRgbColorComponent(obj, "a");
        };
        Color2.isColorObject = function(obj) {
          return this.isRgbColorObject(obj);
        };
        Color2.equals = function(v1, v2) {
          if (v1.mode !== v2.mode) {
            return false;
          }
          var comps1 = v1.comps_;
          var comps2 = v2.comps_;
          for (var i = 0; i < comps1.length; i++) {
            if (comps1[i] !== comps2[i]) {
              return false;
            }
          }
          return true;
        };
        Color2.prototype.getComponents = function(opt_mode, type) {
          if (type === void 0) {
            type = "int";
          }
          return (0, color_model_1.appendAlphaComponent)((0, color_model_1.convertColor)((0, color_model_1.removeAlphaComponent)(this.comps_), { mode: this.mode, type: this.type }, { mode: opt_mode !== null && opt_mode !== void 0 ? opt_mode : this.mode, type }), this.comps_[3]);
        };
        Color2.prototype.toRgbaObject = function(type) {
          if (type === void 0) {
            type = "int";
          }
          var rgbComps = this.getComponents("rgb", type);
          return {
            r: rgbComps[0],
            g: rgbComps[1],
            b: rgbComps[2],
            a: rgbComps[3]
          };
        };
        return Color2;
      }()
    );
    exports.Color = Color;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/color-picker.js
var require_color_picker = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/color-picker.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ColorPickerView = void 0;
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("colp");
    var ColorPickerView = (
      /** @class */
      function() {
        function ColorPickerView2(doc, config) {
          this.alphaViews_ = null;
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var hsvElem = doc.createElement("div");
          hsvElem.classList.add(className("hsv"));
          var svElem = doc.createElement("div");
          svElem.classList.add(className("sv"));
          this.svPaletteView_ = config.svPaletteView;
          svElem.appendChild(this.svPaletteView_.element);
          hsvElem.appendChild(svElem);
          var hElem = doc.createElement("div");
          hElem.classList.add(className("h"));
          this.hPaletteView_ = config.hPaletteView;
          hElem.appendChild(this.hPaletteView_.element);
          hsvElem.appendChild(hElem);
          this.element.appendChild(hsvElem);
          var rgbElem = doc.createElement("div");
          rgbElem.classList.add(className("rgb"));
          this.textView_ = config.textView;
          rgbElem.appendChild(this.textView_.element);
          this.element.appendChild(rgbElem);
          if (config.alphaViews) {
            this.alphaViews_ = {
              palette: config.alphaViews.palette,
              text: config.alphaViews.text
            };
            var aElem = doc.createElement("div");
            aElem.classList.add(className("a"));
            var apElem = doc.createElement("div");
            apElem.classList.add(className("ap"));
            apElem.appendChild(this.alphaViews_.palette.element);
            aElem.appendChild(apElem);
            var atElem = doc.createElement("div");
            atElem.classList.add(className("at"));
            atElem.appendChild(this.alphaViews_.text.element);
            aElem.appendChild(atElem);
            this.element.appendChild(aElem);
          }
        }
        Object.defineProperty(ColorPickerView2.prototype, "allFocusableElements", {
          get: function() {
            var elems = __spreadArray([
              this.svPaletteView_.element,
              this.hPaletteView_.element,
              this.textView_.modeSelectElement
            ], this.textView_.textViews.map(function(v) {
              return v.inputElement;
            }), true);
            if (this.alphaViews_) {
              elems.push(this.alphaViews_.palette.element, this.alphaViews_.text.inputElement);
            }
            return elems;
          },
          enumerable: false,
          configurable: true
        });
        return ColorPickerView2;
      }()
    );
    exports.ColorPickerView = ColorPickerView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/util.js
var require_util2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.extractColorType = exports.getBaseStepForColor = exports.parseColorInputParams = void 0;
    var params_parsers_1 = require_params_parsers();
    var util_1 = require_util();
    function parseColorType(value) {
      return value === "int" ? "int" : value === "float" ? "float" : void 0;
    }
    function parseColorInputParams(params) {
      var p = params_parsers_1.ParamsParsers;
      return (0, params_parsers_1.parseParams)(params, {
        alpha: p.optional.boolean,
        color: p.optional.object({
          alpha: p.optional.boolean,
          type: p.optional.custom(parseColorType)
        }),
        expanded: p.optional.boolean,
        picker: p.optional.custom(util_1.parsePickerLayout)
      });
    }
    exports.parseColorInputParams = parseColorInputParams;
    function getBaseStepForColor(forAlpha) {
      return forAlpha ? 0.1 : 1;
    }
    exports.getBaseStepForColor = getBaseStepForColor;
    function extractColorType(params) {
      var _a;
      return (_a = params.color) === null || _a === void 0 ? void 0 : _a.type;
    }
    exports.extractColorType = extractColorType;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/converter/color-string.js
var require_color_string = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/converter/color-string.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.findColorStringifier = exports.getColorStringifier = exports.colorToObjectRgbaString = exports.colorToObjectRgbString = exports.colorToFunctionalHslaString = exports.colorToFunctionalHslString = exports.colorToFunctionalRgbaString = exports.colorToFunctionalRgbString = exports.colorToHexRgbaString = exports.colorToHexRgbString = exports.colorFromString = exports.hasAlphaComponent = exports.createColorStringParser = exports.createColorStringBindingReader = exports.CompositeColorParser = exports.detectStringColorFormat = exports.getColorNotation = void 0;
    var number_1 = require_number();
    var percentage_1 = require_percentage();
    var number_util_1 = require_number_util();
    var color_1 = require_color2();
    var color_model_1 = require_color_model();
    function equalsStringColorFormat(f1, f2) {
      return f1.alpha === f2.alpha && f1.mode === f2.mode && f1.notation === f2.notation && f1.type === f2.type;
    }
    function parseCssNumberOrPercentage(text, maxValue) {
      var m = text.match(/^(.+)%$/);
      if (!m) {
        return Math.min(parseFloat(text), maxValue);
      }
      return Math.min(parseFloat(m[1]) * 0.01 * maxValue, maxValue);
    }
    var ANGLE_TO_DEG_MAP = {
      deg: function(angle) {
        return angle;
      },
      grad: function(angle) {
        return angle * 360 / 400;
      },
      rad: function(angle) {
        return angle * 360 / (2 * Math.PI);
      },
      turn: function(angle) {
        return angle * 360;
      }
    };
    function parseCssNumberOrAngle(text) {
      var m = text.match(/^([0-9.]+?)(deg|grad|rad|turn)$/);
      if (!m) {
        return parseFloat(text);
      }
      var angle = parseFloat(m[1]);
      var unit = m[2];
      return ANGLE_TO_DEG_MAP[unit](angle);
    }
    function parseFunctionalRgbColorComponents(text) {
      var m = text.match(/^rgb\(\s*([0-9A-Fa-f.]+%?)\s*,\s*([0-9A-Fa-f.]+%?)\s*,\s*([0-9A-Fa-f.]+%?)\s*\)$/);
      if (!m) {
        return null;
      }
      var comps = [
        parseCssNumberOrPercentage(m[1], 255),
        parseCssNumberOrPercentage(m[2], 255),
        parseCssNumberOrPercentage(m[3], 255)
      ];
      if (isNaN(comps[0]) || isNaN(comps[1]) || isNaN(comps[2])) {
        return null;
      }
      return comps;
    }
    function createFunctionalRgbColorParser(type) {
      return function(text) {
        var comps = parseFunctionalRgbColorComponents(text);
        return comps ? new color_1.Color(comps, "rgb", type) : null;
      };
    }
    function parseFunctionalRgbaColorComponents(text) {
      var m = text.match(/^rgba\(\s*([0-9A-Fa-f.]+%?)\s*,\s*([0-9A-Fa-f.]+%?)\s*,\s*([0-9A-Fa-f.]+%?)\s*,\s*([0-9A-Fa-f.]+%?)\s*\)$/);
      if (!m) {
        return null;
      }
      var comps = [
        parseCssNumberOrPercentage(m[1], 255),
        parseCssNumberOrPercentage(m[2], 255),
        parseCssNumberOrPercentage(m[3], 255),
        parseCssNumberOrPercentage(m[4], 1)
      ];
      if (isNaN(comps[0]) || isNaN(comps[1]) || isNaN(comps[2]) || isNaN(comps[3])) {
        return null;
      }
      return comps;
    }
    function createFunctionalRgbaColorParser(type) {
      return function(text) {
        var comps = parseFunctionalRgbaColorComponents(text);
        return comps ? new color_1.Color(comps, "rgb", type) : null;
      };
    }
    function parseHslColorComponents(text) {
      var m = text.match(/^hsl\(\s*([0-9A-Fa-f.]+(?:deg|grad|rad|turn)?)\s*,\s*([0-9A-Fa-f.]+%?)\s*,\s*([0-9A-Fa-f.]+%?)\s*\)$/);
      if (!m) {
        return null;
      }
      var comps = [
        parseCssNumberOrAngle(m[1]),
        parseCssNumberOrPercentage(m[2], 100),
        parseCssNumberOrPercentage(m[3], 100)
      ];
      if (isNaN(comps[0]) || isNaN(comps[1]) || isNaN(comps[2])) {
        return null;
      }
      return comps;
    }
    function createHslColorParser(type) {
      return function(text) {
        var comps = parseHslColorComponents(text);
        return comps ? new color_1.Color(comps, "hsl", type) : null;
      };
    }
    function parseHslaColorComponents(text) {
      var m = text.match(/^hsla\(\s*([0-9A-Fa-f.]+(?:deg|grad|rad|turn)?)\s*,\s*([0-9A-Fa-f.]+%?)\s*,\s*([0-9A-Fa-f.]+%?)\s*,\s*([0-9A-Fa-f.]+%?)\s*\)$/);
      if (!m) {
        return null;
      }
      var comps = [
        parseCssNumberOrAngle(m[1]),
        parseCssNumberOrPercentage(m[2], 100),
        parseCssNumberOrPercentage(m[3], 100),
        parseCssNumberOrPercentage(m[4], 1)
      ];
      if (isNaN(comps[0]) || isNaN(comps[1]) || isNaN(comps[2]) || isNaN(comps[3])) {
        return null;
      }
      return comps;
    }
    function createHslaColorParser(type) {
      return function(text) {
        var comps = parseHslaColorComponents(text);
        return comps ? new color_1.Color(comps, "hsl", type) : null;
      };
    }
    function parseHexRgbColorComponents(text) {
      var mRgb = text.match(/^#([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])$/);
      if (mRgb) {
        return [
          parseInt(mRgb[1] + mRgb[1], 16),
          parseInt(mRgb[2] + mRgb[2], 16),
          parseInt(mRgb[3] + mRgb[3], 16)
        ];
      }
      var mRrggbb = text.match(/^(?:#|0x)([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})$/);
      if (mRrggbb) {
        return [
          parseInt(mRrggbb[1], 16),
          parseInt(mRrggbb[2], 16),
          parseInt(mRrggbb[3], 16)
        ];
      }
      return null;
    }
    function parseHexRgbColor(text) {
      var comps = parseHexRgbColorComponents(text);
      return comps ? new color_1.Color(comps, "rgb", "int") : null;
    }
    function parseHexRgbaColorComponents(text) {
      var mRgb = text.match(/^#?([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])$/);
      if (mRgb) {
        return [
          parseInt(mRgb[1] + mRgb[1], 16),
          parseInt(mRgb[2] + mRgb[2], 16),
          parseInt(mRgb[3] + mRgb[3], 16),
          (0, number_util_1.mapRange)(parseInt(mRgb[4] + mRgb[4], 16), 0, 255, 0, 1)
        ];
      }
      var mRrggbb = text.match(/^(?:#|0x)?([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})([0-9A-Fa-f]{2})$/);
      if (mRrggbb) {
        return [
          parseInt(mRrggbb[1], 16),
          parseInt(mRrggbb[2], 16),
          parseInt(mRrggbb[3], 16),
          (0, number_util_1.mapRange)(parseInt(mRrggbb[4], 16), 0, 255, 0, 1)
        ];
      }
      return null;
    }
    function parseHexRgbaColor(text) {
      var comps = parseHexRgbaColorComponents(text);
      return comps ? new color_1.Color(comps, "rgb", "int") : null;
    }
    function parseObjectRgbColorComponents(text) {
      var m = text.match(/^\{\s*r\s*:\s*([0-9A-Fa-f.]+%?)\s*,\s*g\s*:\s*([0-9A-Fa-f.]+%?)\s*,\s*b\s*:\s*([0-9A-Fa-f.]+%?)\s*\}$/);
      if (!m) {
        return null;
      }
      var comps = [
        parseFloat(m[1]),
        parseFloat(m[2]),
        parseFloat(m[3])
      ];
      if (isNaN(comps[0]) || isNaN(comps[1]) || isNaN(comps[2])) {
        return null;
      }
      return comps;
    }
    function createObjectRgbColorParser(type) {
      return function(text) {
        var comps = parseObjectRgbColorComponents(text);
        return comps ? new color_1.Color(comps, "rgb", type) : null;
      };
    }
    function parseObjectRgbaColorComponents(text) {
      var m = text.match(/^\{\s*r\s*:\s*([0-9A-Fa-f.]+%?)\s*,\s*g\s*:\s*([0-9A-Fa-f.]+%?)\s*,\s*b\s*:\s*([0-9A-Fa-f.]+%?)\s*,\s*a\s*:\s*([0-9A-Fa-f.]+%?)\s*\}$/);
      if (!m) {
        return null;
      }
      var comps = [
        parseFloat(m[1]),
        parseFloat(m[2]),
        parseFloat(m[3]),
        parseFloat(m[4])
      ];
      if (isNaN(comps[0]) || isNaN(comps[1]) || isNaN(comps[2]) || isNaN(comps[3])) {
        return null;
      }
      return comps;
    }
    function createObjectRgbaColorParser(type) {
      return function(text) {
        var comps = parseObjectRgbaColorComponents(text);
        return comps ? new color_1.Color(comps, "rgb", type) : null;
      };
    }
    var NOTATION_TO_PARSER_MAP = {
      "func.rgb": createFunctionalRgbColorParser("int"),
      "func.rgba": createFunctionalRgbaColorParser("int"),
      "func.hsl": createHslColorParser("int"),
      "func.hsla": createHslaColorParser("int"),
      "hex.rgb": parseHexRgbColor,
      "hex.rgba": parseHexRgbaColor
    };
    function getColorNotation(text) {
      var notations = Object.keys(NOTATION_TO_PARSER_MAP);
      return notations.reduce(function(result, notation) {
        if (result) {
          return result;
        }
        var subparser = NOTATION_TO_PARSER_MAP[notation];
        return subparser(text) ? notation : null;
      }, null);
    }
    exports.getColorNotation = getColorNotation;
    var PARSER_AND_RESULT = [
      {
        parser: parseHexRgbColorComponents,
        result: {
          alpha: false,
          mode: "rgb",
          notation: "hex"
        }
      },
      {
        parser: parseHexRgbaColorComponents,
        result: {
          alpha: true,
          mode: "rgb",
          notation: "hex"
        }
      },
      {
        parser: parseFunctionalRgbColorComponents,
        result: {
          alpha: false,
          mode: "rgb",
          notation: "func"
        }
      },
      {
        parser: parseFunctionalRgbaColorComponents,
        result: {
          alpha: true,
          mode: "rgb",
          notation: "func"
        }
      },
      {
        parser: parseHslColorComponents,
        result: {
          alpha: false,
          mode: "hsl",
          notation: "func"
        }
      },
      {
        parser: parseHslaColorComponents,
        result: {
          alpha: true,
          mode: "hsl",
          notation: "func"
        }
      },
      {
        parser: parseObjectRgbColorComponents,
        result: {
          alpha: false,
          mode: "rgb",
          notation: "object"
        }
      },
      {
        parser: parseObjectRgbaColorComponents,
        result: {
          alpha: true,
          mode: "rgb",
          notation: "object"
        }
      }
    ];
    function detectStringColor(text) {
      return PARSER_AND_RESULT.reduce(function(prev, _a) {
        var parser = _a.parser, detection = _a.result;
        if (prev) {
          return prev;
        }
        return parser(text) ? detection : null;
      }, null);
    }
    function detectStringColorFormat(text, type) {
      if (type === void 0) {
        type = "int";
      }
      var r = detectStringColor(text);
      if (!r) {
        return null;
      }
      if (r.notation === "hex" && type !== "float") {
        return __assign(__assign({}, r), { type: "int" });
      }
      if (r.notation === "func") {
        return __assign(__assign({}, r), { type });
      }
      return null;
    }
    exports.detectStringColorFormat = detectStringColorFormat;
    var CompositeColorParser = function(text) {
      var notation = getColorNotation(text);
      return notation ? NOTATION_TO_PARSER_MAP[notation](text) : null;
    };
    exports.CompositeColorParser = CompositeColorParser;
    var TYPE_TO_PARSERS = {
      int: [
        parseHexRgbColor,
        parseHexRgbaColor,
        createFunctionalRgbColorParser("int"),
        createFunctionalRgbaColorParser("int"),
        createHslColorParser("int"),
        createHslaColorParser("int"),
        createObjectRgbColorParser("int"),
        createObjectRgbaColorParser("int")
      ],
      float: [
        createFunctionalRgbColorParser("float"),
        createFunctionalRgbaColorParser("float"),
        createHslColorParser("float"),
        createHslaColorParser("float"),
        createObjectRgbColorParser("float"),
        createObjectRgbaColorParser("float")
      ]
    };
    function createColorStringBindingReader(type) {
      var parsers = TYPE_TO_PARSERS[type];
      return function(value) {
        if (typeof value !== "string") {
          return color_1.Color.black(type);
        }
        var result = parsers.reduce(function(prev, parser) {
          if (prev) {
            return prev;
          }
          return parser(value);
        }, null);
        return result !== null && result !== void 0 ? result : color_1.Color.black(type);
      };
    }
    exports.createColorStringBindingReader = createColorStringBindingReader;
    function createColorStringParser(type) {
      var parsers = TYPE_TO_PARSERS[type];
      return function(value) {
        return parsers.reduce(function(prev, parser) {
          if (prev) {
            return prev;
          }
          return parser(value);
        }, null);
      };
    }
    exports.createColorStringParser = createColorStringParser;
    function hasAlphaComponent(notation) {
      return notation === "func.hsla" || notation === "func.rgba" || notation === "hex.rgba";
    }
    exports.hasAlphaComponent = hasAlphaComponent;
    function colorFromString(value) {
      if (typeof value === "string") {
        var cv = (0, exports.CompositeColorParser)(value);
        if (cv) {
          return cv;
        }
      }
      return color_1.Color.black();
    }
    exports.colorFromString = colorFromString;
    function zerofill(comp) {
      var hex = (0, number_util_1.constrainRange)(Math.floor(comp), 0, 255).toString(16);
      return hex.length === 1 ? "0".concat(hex) : hex;
    }
    function colorToHexRgbString(value, prefix) {
      if (prefix === void 0) {
        prefix = "#";
      }
      var hexes = (0, color_model_1.removeAlphaComponent)(value.getComponents("rgb")).map(zerofill).join("");
      return "".concat(prefix).concat(hexes);
    }
    exports.colorToHexRgbString = colorToHexRgbString;
    function colorToHexRgbaString(value, prefix) {
      if (prefix === void 0) {
        prefix = "#";
      }
      var rgbaComps = value.getComponents("rgb");
      var hexes = [rgbaComps[0], rgbaComps[1], rgbaComps[2], rgbaComps[3] * 255].map(zerofill).join("");
      return "".concat(prefix).concat(hexes);
    }
    exports.colorToHexRgbaString = colorToHexRgbaString;
    function colorToFunctionalRgbString(value, opt_type) {
      var formatter = (0, number_1.createNumberFormatter)(opt_type === "float" ? 2 : 0);
      var comps = (0, color_model_1.removeAlphaComponent)(value.getComponents("rgb", opt_type)).map(function(comp) {
        return formatter(comp);
      });
      return "rgb(".concat(comps.join(", "), ")");
    }
    exports.colorToFunctionalRgbString = colorToFunctionalRgbString;
    function createFunctionalRgbColorFormatter(type) {
      return function(value) {
        return colorToFunctionalRgbString(value, type);
      };
    }
    function colorToFunctionalRgbaString(value, opt_type) {
      var aFormatter = (0, number_1.createNumberFormatter)(2);
      var rgbFormatter = (0, number_1.createNumberFormatter)(opt_type === "float" ? 2 : 0);
      var comps = value.getComponents("rgb", opt_type).map(function(comp, index) {
        var formatter = index === 3 ? aFormatter : rgbFormatter;
        return formatter(comp);
      });
      return "rgba(".concat(comps.join(", "), ")");
    }
    exports.colorToFunctionalRgbaString = colorToFunctionalRgbaString;
    function createFunctionalRgbaColorFormatter(type) {
      return function(value) {
        return colorToFunctionalRgbaString(value, type);
      };
    }
    function colorToFunctionalHslString(value) {
      var formatters = [
        (0, number_1.createNumberFormatter)(0),
        percentage_1.formatPercentage,
        percentage_1.formatPercentage
      ];
      var comps = (0, color_model_1.removeAlphaComponent)(value.getComponents("hsl")).map(function(comp, index) {
        return formatters[index](comp);
      });
      return "hsl(".concat(comps.join(", "), ")");
    }
    exports.colorToFunctionalHslString = colorToFunctionalHslString;
    function colorToFunctionalHslaString(value) {
      var formatters = [
        (0, number_1.createNumberFormatter)(0),
        percentage_1.formatPercentage,
        percentage_1.formatPercentage,
        (0, number_1.createNumberFormatter)(2)
      ];
      var comps = value.getComponents("hsl").map(function(comp, index) {
        return formatters[index](comp);
      });
      return "hsla(".concat(comps.join(", "), ")");
    }
    exports.colorToFunctionalHslaString = colorToFunctionalHslaString;
    function colorToObjectRgbString(value, type) {
      var formatter = (0, number_1.createNumberFormatter)(type === "float" ? 2 : 0);
      var names = ["r", "g", "b"];
      var comps = (0, color_model_1.removeAlphaComponent)(value.getComponents("rgb", type)).map(function(comp, index) {
        return "".concat(names[index], ": ").concat(formatter(comp));
      });
      return "{".concat(comps.join(", "), "}");
    }
    exports.colorToObjectRgbString = colorToObjectRgbString;
    function createObjectRgbColorFormatter(type) {
      return function(value) {
        return colorToObjectRgbString(value, type);
      };
    }
    function colorToObjectRgbaString(value, type) {
      var aFormatter = (0, number_1.createNumberFormatter)(2);
      var rgbFormatter = (0, number_1.createNumberFormatter)(type === "float" ? 2 : 0);
      var names = ["r", "g", "b", "a"];
      var comps = value.getComponents("rgb", type).map(function(comp, index) {
        var formatter = index === 3 ? aFormatter : rgbFormatter;
        return "".concat(names[index], ": ").concat(formatter(comp));
      });
      return "{".concat(comps.join(", "), "}");
    }
    exports.colorToObjectRgbaString = colorToObjectRgbaString;
    function createObjectRgbaColorFormatter(type) {
      return function(value) {
        return colorToObjectRgbaString(value, type);
      };
    }
    var NOTATION_TO_STRINGIFIER_MAP = {
      "func.hsl": colorToFunctionalHslString,
      "func.hsla": colorToFunctionalHslaString,
      "func.rgb": colorToFunctionalRgbString,
      "func.rgba": colorToFunctionalRgbaString,
      "hex.rgb": colorToHexRgbString,
      "hex.rgba": colorToHexRgbaString
    };
    function getColorStringifier(notation) {
      return NOTATION_TO_STRINGIFIER_MAP[notation];
    }
    exports.getColorStringifier = getColorStringifier;
    var FORMAT_AND_STRINGIFIERS = __spreadArray([
      {
        format: {
          alpha: false,
          mode: "rgb",
          notation: "hex",
          type: "int"
        },
        stringifier: colorToHexRgbString
      },
      {
        format: {
          alpha: true,
          mode: "rgb",
          notation: "hex",
          type: "int"
        },
        stringifier: colorToHexRgbaString
      },
      {
        format: {
          alpha: false,
          mode: "hsl",
          notation: "func",
          type: "int"
        },
        stringifier: colorToFunctionalHslString
      },
      {
        format: {
          alpha: true,
          mode: "hsl",
          notation: "func",
          type: "int"
        },
        stringifier: colorToFunctionalHslaString
      }
    ], ["int", "float"].reduce(function(prev, type) {
      return __spreadArray(__spreadArray([], prev, true), [
        {
          format: {
            alpha: false,
            mode: "rgb",
            notation: "func",
            type
          },
          stringifier: createFunctionalRgbColorFormatter(type)
        },
        {
          format: {
            alpha: true,
            mode: "rgb",
            notation: "func",
            type
          },
          stringifier: createFunctionalRgbaColorFormatter(type)
        },
        {
          format: {
            alpha: false,
            mode: "rgb",
            notation: "object",
            type
          },
          stringifier: createObjectRgbColorFormatter(type)
        },
        {
          format: {
            alpha: true,
            mode: "rgb",
            notation: "object",
            type
          },
          stringifier: createObjectRgbaColorFormatter(type)
        }
      ], false);
    }, []), true);
    function findColorStringifier(format) {
      return FORMAT_AND_STRINGIFIERS.reduce(function(prev, fas) {
        if (prev) {
          return prev;
        }
        return equalsStringColorFormat(fas.format, format) ? fas.stringifier : null;
      }, null);
    }
    exports.findColorStringifier = findColorStringifier;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/a-palette.js
var require_a_palette = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/a-palette.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.APaletteView = void 0;
    var number_util_1 = require_number_util();
    var class_name_1 = require_class_name();
    var color_string_1 = require_color_string();
    var color_1 = require_color2();
    var className = (0, class_name_1.ClassName)("apl");
    var APaletteView = (
      /** @class */
      function() {
        function APaletteView2(doc, config) {
          this.onValueChange_ = this.onValueChange_.bind(this);
          this.value = config.value;
          this.value.emitter.on("change", this.onValueChange_);
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          config.viewProps.bindTabIndex(this.element);
          var barElem = doc.createElement("div");
          barElem.classList.add(className("b"));
          this.element.appendChild(barElem);
          var colorElem = doc.createElement("div");
          colorElem.classList.add(className("c"));
          barElem.appendChild(colorElem);
          this.colorElem_ = colorElem;
          var markerElem = doc.createElement("div");
          markerElem.classList.add(className("m"));
          this.element.appendChild(markerElem);
          this.markerElem_ = markerElem;
          var previewElem = doc.createElement("div");
          previewElem.classList.add(className("p"));
          this.markerElem_.appendChild(previewElem);
          this.previewElem_ = previewElem;
          this.update_();
        }
        APaletteView2.prototype.update_ = function() {
          var c = this.value.rawValue;
          var rgbaComps = c.getComponents("rgb");
          var leftColor = new color_1.Color([rgbaComps[0], rgbaComps[1], rgbaComps[2], 0], "rgb");
          var rightColor = new color_1.Color([rgbaComps[0], rgbaComps[1], rgbaComps[2], 255], "rgb");
          var gradientComps = [
            "to right",
            (0, color_string_1.colorToFunctionalRgbaString)(leftColor),
            (0, color_string_1.colorToFunctionalRgbaString)(rightColor)
          ];
          this.colorElem_.style.background = "linear-gradient(".concat(gradientComps.join(","), ")");
          this.previewElem_.style.backgroundColor = (0, color_string_1.colorToFunctionalRgbaString)(c);
          var left = (0, number_util_1.mapRange)(rgbaComps[3], 0, 1, 0, 100);
          this.markerElem_.style.left = "".concat(left, "%");
        };
        APaletteView2.prototype.onValueChange_ = function() {
          this.update_();
        };
        return APaletteView2;
      }()
    );
    exports.APaletteView = APaletteView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/a-palette.js
var require_a_palette2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/a-palette.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.APaletteController = void 0;
    var ui_1 = require_ui();
    var pointer_handler_1 = require_pointer_handler();
    var color_1 = require_color2();
    var util_1 = require_util2();
    var a_palette_1 = require_a_palette();
    var APaletteController = (
      /** @class */
      function() {
        function APaletteController2(doc, config) {
          this.onKeyDown_ = this.onKeyDown_.bind(this);
          this.onKeyUp_ = this.onKeyUp_.bind(this);
          this.onPointerDown_ = this.onPointerDown_.bind(this);
          this.onPointerMove_ = this.onPointerMove_.bind(this);
          this.onPointerUp_ = this.onPointerUp_.bind(this);
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.view = new a_palette_1.APaletteView(doc, {
            value: this.value,
            viewProps: this.viewProps
          });
          this.ptHandler_ = new pointer_handler_1.PointerHandler(this.view.element);
          this.ptHandler_.emitter.on("down", this.onPointerDown_);
          this.ptHandler_.emitter.on("move", this.onPointerMove_);
          this.ptHandler_.emitter.on("up", this.onPointerUp_);
          this.view.element.addEventListener("keydown", this.onKeyDown_);
          this.view.element.addEventListener("keyup", this.onKeyUp_);
        }
        APaletteController2.prototype.handlePointerEvent_ = function(d, opts) {
          if (!d.point) {
            return;
          }
          var alpha = d.point.x / d.bounds.width;
          var c = this.value.rawValue;
          var _a = c.getComponents("hsv"), h = _a[0], s = _a[1], v = _a[2];
          this.value.setRawValue(new color_1.Color([h, s, v, alpha], "hsv"), opts);
        };
        APaletteController2.prototype.onPointerDown_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: false,
            last: false
          });
        };
        APaletteController2.prototype.onPointerMove_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: false,
            last: false
          });
        };
        APaletteController2.prototype.onPointerUp_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: true,
            last: true
          });
        };
        APaletteController2.prototype.onKeyDown_ = function(ev) {
          var step = (0, ui_1.getStepForKey)((0, util_1.getBaseStepForColor)(true), (0, ui_1.getHorizontalStepKeys)(ev));
          if (step === 0) {
            return;
          }
          var c = this.value.rawValue;
          var _a = c.getComponents("hsv"), h = _a[0], s = _a[1], v = _a[2], a = _a[3];
          this.value.setRawValue(new color_1.Color([h, s, v, a + step], "hsv"), {
            forceEmit: false,
            last: false
          });
        };
        APaletteController2.prototype.onKeyUp_ = function(ev) {
          var step = (0, ui_1.getStepForKey)((0, util_1.getBaseStepForColor)(true), (0, ui_1.getHorizontalStepKeys)(ev));
          if (step === 0) {
            return;
          }
          this.value.setRawValue(this.value.rawValue, {
            forceEmit: true,
            last: true
          });
        };
        return APaletteController2;
      }()
    );
    exports.APaletteController = APaletteController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/color-text.js
var require_color_text = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/color-text.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ColorTextView = void 0;
    var dom_util_1 = require_dom_util();
    var reactive_1 = require_reactive();
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("coltxt");
    function createModeSelectElement(doc) {
      var selectElem = doc.createElement("select");
      var items = [
        { text: "RGB", value: "rgb" },
        { text: "HSL", value: "hsl" },
        { text: "HSV", value: "hsv" }
      ];
      selectElem.appendChild(items.reduce(function(frag, item) {
        var optElem = doc.createElement("option");
        optElem.textContent = item.text;
        optElem.value = item.value;
        frag.appendChild(optElem);
        return frag;
      }, doc.createDocumentFragment()));
      return selectElem;
    }
    var ColorTextView = (
      /** @class */
      function() {
        function ColorTextView2(doc, config) {
          var _this = this;
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var modeElem = doc.createElement("div");
          modeElem.classList.add(className("m"));
          this.modeElem_ = createModeSelectElement(doc);
          this.modeElem_.classList.add(className("ms"));
          modeElem.appendChild(this.modeSelectElement);
          config.viewProps.bindDisabled(this.modeElem_);
          var modeMarkerElem = doc.createElement("div");
          modeMarkerElem.classList.add(className("mm"));
          modeMarkerElem.appendChild((0, dom_util_1.createSvgIconElement)(doc, "dropdown"));
          modeElem.appendChild(modeMarkerElem);
          this.element.appendChild(modeElem);
          var textsElem = doc.createElement("div");
          textsElem.classList.add(className("w"));
          this.element.appendChild(textsElem);
          this.textsElem_ = textsElem;
          this.textViews_ = config.textViews;
          this.applyTextViews_();
          (0, reactive_1.bindValue)(config.colorMode, function(mode) {
            _this.modeElem_.value = mode;
          });
        }
        Object.defineProperty(ColorTextView2.prototype, "modeSelectElement", {
          get: function() {
            return this.modeElem_;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(ColorTextView2.prototype, "textViews", {
          get: function() {
            return this.textViews_;
          },
          set: function(textViews) {
            this.textViews_ = textViews;
            this.applyTextViews_();
          },
          enumerable: false,
          configurable: true
        });
        ColorTextView2.prototype.applyTextViews_ = function() {
          var _this = this;
          (0, dom_util_1.removeChildElements)(this.textsElem_);
          var doc = this.element.ownerDocument;
          this.textViews_.forEach(function(v) {
            var compElem = doc.createElement("div");
            compElem.classList.add(className("c"));
            compElem.appendChild(v.element);
            _this.textsElem_.appendChild(compElem);
          });
        };
        return ColorTextView2;
      }()
    );
    exports.ColorTextView = ColorTextView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/color-text.js
var require_color_text2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/color-text.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ColorTextController = void 0;
    var definite_range_1 = require_definite_range();
    var number_1 = require_number();
    var value_map_1 = require_value_map();
    var value_sync_1 = require_value_sync();
    var values_1 = require_values();
    var number_text_1 = require_number_text2();
    var color_1 = require_color2();
    var color_model_1 = require_color_model();
    var util_1 = require_util2();
    var color_text_1 = require_color_text();
    function createFormatter(type) {
      return (0, number_1.createNumberFormatter)(type === "float" ? 2 : 0);
    }
    function createConstraint(mode, type, index) {
      var max = (0, color_model_1.getColorMaxComponents)(mode, type)[index];
      return new definite_range_1.DefiniteRangeConstraint({
        min: 0,
        max
      });
    }
    function createComponentController(doc, config, index) {
      return new number_text_1.NumberTextController(doc, {
        arrayPosition: index === 0 ? "fst" : index === 3 - 1 ? "lst" : "mid",
        baseStep: (0, util_1.getBaseStepForColor)(false),
        parser: config.parser,
        props: value_map_1.ValueMap.fromObject({
          draggingScale: config.colorType === "float" ? 0.01 : 1,
          formatter: createFormatter(config.colorType)
        }),
        value: (0, values_1.createValue)(0, {
          constraint: createConstraint(config.colorMode, config.colorType, index)
        }),
        viewProps: config.viewProps
      });
    }
    var ColorTextController = (
      /** @class */
      function() {
        function ColorTextController2(doc, config) {
          this.onModeSelectChange_ = this.onModeSelectChange_.bind(this);
          this.colorType_ = config.colorType;
          this.parser_ = config.parser;
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.colorMode = (0, values_1.createValue)(this.value.rawValue.mode);
          this.ccs_ = this.createComponentControllers_(doc);
          this.view = new color_text_1.ColorTextView(doc, {
            colorMode: this.colorMode,
            textViews: [this.ccs_[0].view, this.ccs_[1].view, this.ccs_[2].view],
            viewProps: this.viewProps
          });
          this.view.modeSelectElement.addEventListener("change", this.onModeSelectChange_);
        }
        ColorTextController2.prototype.createComponentControllers_ = function(doc) {
          var _this = this;
          var cc = {
            colorMode: this.colorMode.rawValue,
            colorType: this.colorType_,
            parser: this.parser_,
            viewProps: this.viewProps
          };
          var ccs = [
            createComponentController(doc, cc, 0),
            createComponentController(doc, cc, 1),
            createComponentController(doc, cc, 2)
          ];
          ccs.forEach(function(cs, index) {
            (0, value_sync_1.connectValues)({
              primary: _this.value,
              secondary: cs.value,
              forward: function(p) {
                return p.rawValue.getComponents(_this.colorMode.rawValue, _this.colorType_)[index];
              },
              backward: function(p, s) {
                var pickedMode = _this.colorMode.rawValue;
                var comps = p.rawValue.getComponents(pickedMode, _this.colorType_);
                comps[index] = s.rawValue;
                return new color_1.Color((0, color_model_1.appendAlphaComponent)((0, color_model_1.removeAlphaComponent)(comps), comps[3]), pickedMode, _this.colorType_);
              }
            });
          });
          return ccs;
        };
        ColorTextController2.prototype.onModeSelectChange_ = function(ev) {
          var selectElem = ev.currentTarget;
          this.colorMode.rawValue = selectElem.value;
          this.ccs_ = this.createComponentControllers_(this.view.element.ownerDocument);
          this.view.textViews = [
            this.ccs_[0].view,
            this.ccs_[1].view,
            this.ccs_[2].view
          ];
        };
        return ColorTextController2;
      }()
    );
    exports.ColorTextController = ColorTextController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/h-palette.js
var require_h_palette = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/h-palette.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HPaletteView = void 0;
    var number_util_1 = require_number_util();
    var class_name_1 = require_class_name();
    var color_string_1 = require_color_string();
    var color_1 = require_color2();
    var className = (0, class_name_1.ClassName)("hpl");
    var HPaletteView = (
      /** @class */
      function() {
        function HPaletteView2(doc, config) {
          this.onValueChange_ = this.onValueChange_.bind(this);
          this.value = config.value;
          this.value.emitter.on("change", this.onValueChange_);
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          config.viewProps.bindTabIndex(this.element);
          var colorElem = doc.createElement("div");
          colorElem.classList.add(className("c"));
          this.element.appendChild(colorElem);
          var markerElem = doc.createElement("div");
          markerElem.classList.add(className("m"));
          this.element.appendChild(markerElem);
          this.markerElem_ = markerElem;
          this.update_();
        }
        HPaletteView2.prototype.update_ = function() {
          var c = this.value.rawValue;
          var h = c.getComponents("hsv")[0];
          this.markerElem_.style.backgroundColor = (0, color_string_1.colorToFunctionalRgbString)(new color_1.Color([h, 100, 100], "hsv"));
          var left = (0, number_util_1.mapRange)(h, 0, 360, 0, 100);
          this.markerElem_.style.left = "".concat(left, "%");
        };
        HPaletteView2.prototype.onValueChange_ = function() {
          this.update_();
        };
        return HPaletteView2;
      }()
    );
    exports.HPaletteView = HPaletteView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/h-palette.js
var require_h_palette2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/h-palette.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HPaletteController = void 0;
    var number_util_1 = require_number_util();
    var ui_1 = require_ui();
    var pointer_handler_1 = require_pointer_handler();
    var color_1 = require_color2();
    var util_1 = require_util2();
    var h_palette_1 = require_h_palette();
    var HPaletteController = (
      /** @class */
      function() {
        function HPaletteController2(doc, config) {
          this.onKeyDown_ = this.onKeyDown_.bind(this);
          this.onKeyUp_ = this.onKeyUp_.bind(this);
          this.onPointerDown_ = this.onPointerDown_.bind(this);
          this.onPointerMove_ = this.onPointerMove_.bind(this);
          this.onPointerUp_ = this.onPointerUp_.bind(this);
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.view = new h_palette_1.HPaletteView(doc, {
            value: this.value,
            viewProps: this.viewProps
          });
          this.ptHandler_ = new pointer_handler_1.PointerHandler(this.view.element);
          this.ptHandler_.emitter.on("down", this.onPointerDown_);
          this.ptHandler_.emitter.on("move", this.onPointerMove_);
          this.ptHandler_.emitter.on("up", this.onPointerUp_);
          this.view.element.addEventListener("keydown", this.onKeyDown_);
          this.view.element.addEventListener("keyup", this.onKeyUp_);
        }
        HPaletteController2.prototype.handlePointerEvent_ = function(d, opts) {
          if (!d.point) {
            return;
          }
          var hue = (0, number_util_1.mapRange)((0, number_util_1.constrainRange)(d.point.x, 0, d.bounds.width), 0, d.bounds.width, 0, 360);
          var c = this.value.rawValue;
          var _a = c.getComponents("hsv"), s = _a[1], v = _a[2], a = _a[3];
          this.value.setRawValue(new color_1.Color([hue, s, v, a], "hsv"), opts);
        };
        HPaletteController2.prototype.onPointerDown_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: false,
            last: false
          });
        };
        HPaletteController2.prototype.onPointerMove_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: false,
            last: false
          });
        };
        HPaletteController2.prototype.onPointerUp_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: true,
            last: true
          });
        };
        HPaletteController2.prototype.onKeyDown_ = function(ev) {
          var step = (0, ui_1.getStepForKey)((0, util_1.getBaseStepForColor)(false), (0, ui_1.getHorizontalStepKeys)(ev));
          if (step === 0) {
            return;
          }
          var c = this.value.rawValue;
          var _a = c.getComponents("hsv"), h = _a[0], s = _a[1], v = _a[2], a = _a[3];
          this.value.setRawValue(new color_1.Color([h + step, s, v, a], "hsv"), {
            forceEmit: false,
            last: false
          });
        };
        HPaletteController2.prototype.onKeyUp_ = function(ev) {
          var step = (0, ui_1.getStepForKey)((0, util_1.getBaseStepForColor)(false), (0, ui_1.getHorizontalStepKeys)(ev));
          if (step === 0) {
            return;
          }
          this.value.setRawValue(this.value.rawValue, {
            forceEmit: true,
            last: true
          });
        };
        return HPaletteController2;
      }()
    );
    exports.HPaletteController = HPaletteController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/sv-palette.js
var require_sv_palette = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/sv-palette.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SvPaletteView = void 0;
    var dom_util_1 = require_dom_util();
    var number_util_1 = require_number_util();
    var class_name_1 = require_class_name();
    var color_model_1 = require_color_model();
    var className = (0, class_name_1.ClassName)("svp");
    var CANVAS_RESOL = 64;
    var SvPaletteView = (
      /** @class */
      function() {
        function SvPaletteView2(doc, config) {
          this.onValueChange_ = this.onValueChange_.bind(this);
          this.value = config.value;
          this.value.emitter.on("change", this.onValueChange_);
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          config.viewProps.bindTabIndex(this.element);
          var canvasElem = doc.createElement("canvas");
          canvasElem.height = CANVAS_RESOL;
          canvasElem.width = CANVAS_RESOL;
          canvasElem.classList.add(className("c"));
          this.element.appendChild(canvasElem);
          this.canvasElement = canvasElem;
          var markerElem = doc.createElement("div");
          markerElem.classList.add(className("m"));
          this.element.appendChild(markerElem);
          this.markerElem_ = markerElem;
          this.update_();
        }
        SvPaletteView2.prototype.update_ = function() {
          var ctx = (0, dom_util_1.getCanvasContext)(this.canvasElement);
          if (!ctx) {
            return;
          }
          var c = this.value.rawValue;
          var hsvComps = c.getComponents("hsv");
          var width = this.canvasElement.width;
          var height = this.canvasElement.height;
          var imgData = ctx.getImageData(0, 0, width, height);
          var data = imgData.data;
          for (var iy = 0; iy < height; iy++) {
            for (var ix = 0; ix < width; ix++) {
              var s = (0, number_util_1.mapRange)(ix, 0, width, 0, 100);
              var v = (0, number_util_1.mapRange)(iy, 0, height, 100, 0);
              var rgbComps = (0, color_model_1.hsvToRgbInt)(hsvComps[0], s, v);
              var i = (iy * width + ix) * 4;
              data[i] = rgbComps[0];
              data[i + 1] = rgbComps[1];
              data[i + 2] = rgbComps[2];
              data[i + 3] = 255;
            }
          }
          ctx.putImageData(imgData, 0, 0);
          var left = (0, number_util_1.mapRange)(hsvComps[1], 0, 100, 0, 100);
          this.markerElem_.style.left = "".concat(left, "%");
          var top = (0, number_util_1.mapRange)(hsvComps[2], 0, 100, 100, 0);
          this.markerElem_.style.top = "".concat(top, "%");
        };
        SvPaletteView2.prototype.onValueChange_ = function() {
          this.update_();
        };
        return SvPaletteView2;
      }()
    );
    exports.SvPaletteView = SvPaletteView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/sv-palette.js
var require_sv_palette2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/sv-palette.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SvPaletteController = void 0;
    var number_util_1 = require_number_util();
    var ui_1 = require_ui();
    var pointer_handler_1 = require_pointer_handler();
    var color_1 = require_color2();
    var util_1 = require_util2();
    var sv_palette_1 = require_sv_palette();
    var SvPaletteController = (
      /** @class */
      function() {
        function SvPaletteController2(doc, config) {
          this.onKeyDown_ = this.onKeyDown_.bind(this);
          this.onKeyUp_ = this.onKeyUp_.bind(this);
          this.onPointerDown_ = this.onPointerDown_.bind(this);
          this.onPointerMove_ = this.onPointerMove_.bind(this);
          this.onPointerUp_ = this.onPointerUp_.bind(this);
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.view = new sv_palette_1.SvPaletteView(doc, {
            value: this.value,
            viewProps: this.viewProps
          });
          this.ptHandler_ = new pointer_handler_1.PointerHandler(this.view.element);
          this.ptHandler_.emitter.on("down", this.onPointerDown_);
          this.ptHandler_.emitter.on("move", this.onPointerMove_);
          this.ptHandler_.emitter.on("up", this.onPointerUp_);
          this.view.element.addEventListener("keydown", this.onKeyDown_);
          this.view.element.addEventListener("keyup", this.onKeyUp_);
        }
        SvPaletteController2.prototype.handlePointerEvent_ = function(d, opts) {
          if (!d.point) {
            return;
          }
          var saturation = (0, number_util_1.mapRange)(d.point.x, 0, d.bounds.width, 0, 100);
          var value = (0, number_util_1.mapRange)(d.point.y, 0, d.bounds.height, 100, 0);
          var _a = this.value.rawValue.getComponents("hsv"), h = _a[0], a = _a[3];
          this.value.setRawValue(new color_1.Color([h, saturation, value, a], "hsv"), opts);
        };
        SvPaletteController2.prototype.onPointerDown_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: false,
            last: false
          });
        };
        SvPaletteController2.prototype.onPointerMove_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: false,
            last: false
          });
        };
        SvPaletteController2.prototype.onPointerUp_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: true,
            last: true
          });
        };
        SvPaletteController2.prototype.onKeyDown_ = function(ev) {
          if ((0, ui_1.isArrowKey)(ev.key)) {
            ev.preventDefault();
          }
          var _a = this.value.rawValue.getComponents("hsv"), h = _a[0], s = _a[1], v = _a[2], a = _a[3];
          var baseStep = (0, util_1.getBaseStepForColor)(false);
          var ds = (0, ui_1.getStepForKey)(baseStep, (0, ui_1.getHorizontalStepKeys)(ev));
          var dv = (0, ui_1.getStepForKey)(baseStep, (0, ui_1.getVerticalStepKeys)(ev));
          if (ds === 0 && dv === 0) {
            return;
          }
          this.value.setRawValue(new color_1.Color([h, s + ds, v + dv, a], "hsv"), {
            forceEmit: false,
            last: false
          });
        };
        SvPaletteController2.prototype.onKeyUp_ = function(ev) {
          var baseStep = (0, util_1.getBaseStepForColor)(false);
          var ds = (0, ui_1.getStepForKey)(baseStep, (0, ui_1.getHorizontalStepKeys)(ev));
          var dv = (0, ui_1.getStepForKey)(baseStep, (0, ui_1.getVerticalStepKeys)(ev));
          if (ds === 0 && dv === 0) {
            return;
          }
          this.value.setRawValue(this.value.rawValue, {
            forceEmit: true,
            last: true
          });
        };
        return SvPaletteController2;
      }()
    );
    exports.SvPaletteController = SvPaletteController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/color-picker.js
var require_color_picker2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/color-picker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ColorPickerController = void 0;
    var definite_range_1 = require_definite_range();
    var number_1 = require_number();
    var value_map_1 = require_value_map();
    var value_sync_1 = require_value_sync();
    var values_1 = require_values();
    var number_text_1 = require_number_text2();
    var color_1 = require_color2();
    var color_picker_1 = require_color_picker();
    var a_palette_1 = require_a_palette2();
    var color_text_1 = require_color_text2();
    var h_palette_1 = require_h_palette2();
    var sv_palette_1 = require_sv_palette2();
    var ColorPickerController = (
      /** @class */
      function() {
        function ColorPickerController2(doc, config) {
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.hPaletteC_ = new h_palette_1.HPaletteController(doc, {
            value: this.value,
            viewProps: this.viewProps
          });
          this.svPaletteC_ = new sv_palette_1.SvPaletteController(doc, {
            value: this.value,
            viewProps: this.viewProps
          });
          this.alphaIcs_ = config.supportsAlpha ? {
            palette: new a_palette_1.APaletteController(doc, {
              value: this.value,
              viewProps: this.viewProps
            }),
            text: new number_text_1.NumberTextController(doc, {
              parser: number_1.parseNumber,
              baseStep: 0.1,
              props: value_map_1.ValueMap.fromObject({
                draggingScale: 0.01,
                formatter: (0, number_1.createNumberFormatter)(2)
              }),
              value: (0, values_1.createValue)(0, {
                constraint: new definite_range_1.DefiniteRangeConstraint({ min: 0, max: 1 })
              }),
              viewProps: this.viewProps
            })
          } : null;
          if (this.alphaIcs_) {
            (0, value_sync_1.connectValues)({
              primary: this.value,
              secondary: this.alphaIcs_.text.value,
              forward: function(p) {
                return p.rawValue.getComponents()[3];
              },
              backward: function(p, s) {
                var comps = p.rawValue.getComponents();
                comps[3] = s.rawValue;
                return new color_1.Color(comps, p.rawValue.mode);
              }
            });
          }
          this.textC_ = new color_text_1.ColorTextController(doc, {
            colorType: config.colorType,
            parser: number_1.parseNumber,
            value: this.value,
            viewProps: this.viewProps
          });
          this.view = new color_picker_1.ColorPickerView(doc, {
            alphaViews: this.alphaIcs_ ? {
              palette: this.alphaIcs_.palette.view,
              text: this.alphaIcs_.text.view
            } : null,
            hPaletteView: this.hPaletteC_.view,
            supportsAlpha: config.supportsAlpha,
            svPaletteView: this.svPaletteC_.view,
            textView: this.textC_.view,
            viewProps: this.viewProps
          });
        }
        Object.defineProperty(ColorPickerController2.prototype, "textController", {
          get: function() {
            return this.textC_;
          },
          enumerable: false,
          configurable: true
        });
        return ColorPickerController2;
      }()
    );
    exports.ColorPickerController = ColorPickerController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/color-swatch.js
var require_color_swatch = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/view/color-swatch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ColorSwatchView = void 0;
    var class_name_1 = require_class_name();
    var color_string_1 = require_color_string();
    var className = (0, class_name_1.ClassName)("colsw");
    var ColorSwatchView = (
      /** @class */
      function() {
        function ColorSwatchView2(doc, config) {
          this.onValueChange_ = this.onValueChange_.bind(this);
          config.value.emitter.on("change", this.onValueChange_);
          this.value = config.value;
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var swatchElem = doc.createElement("div");
          swatchElem.classList.add(className("sw"));
          this.element.appendChild(swatchElem);
          this.swatchElem_ = swatchElem;
          var buttonElem = doc.createElement("button");
          buttonElem.classList.add(className("b"));
          config.viewProps.bindDisabled(buttonElem);
          this.element.appendChild(buttonElem);
          this.buttonElement = buttonElem;
          this.update_();
        }
        ColorSwatchView2.prototype.update_ = function() {
          var value = this.value.rawValue;
          this.swatchElem_.style.backgroundColor = (0, color_string_1.colorToHexRgbaString)(value);
        };
        ColorSwatchView2.prototype.onValueChange_ = function() {
          this.update_();
        };
        return ColorSwatchView2;
      }()
    );
    exports.ColorSwatchView = ColorSwatchView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/color-swatch.js
var require_color_swatch2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/color-swatch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ColorSwatchController = void 0;
    var color_swatch_1 = require_color_swatch();
    var ColorSwatchController = (
      /** @class */
      function() {
        function ColorSwatchController2(doc, config) {
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.view = new color_swatch_1.ColorSwatchView(doc, {
            value: this.value,
            viewProps: this.viewProps
          });
        }
        return ColorSwatchController2;
      }()
    );
    exports.ColorSwatchController = ColorSwatchController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/color.js
var require_color3 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/controller/color.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ColorController = void 0;
    var foldable_1 = require_foldable();
    var popup_1 = require_popup2();
    var text_1 = require_text2();
    var dom_util_1 = require_dom_util();
    var value_map_1 = require_value_map();
    var value_sync_1 = require_value_sync();
    var type_util_1 = require_type_util();
    var color_1 = require_color();
    var color_picker_1 = require_color_picker2();
    var color_swatch_1 = require_color_swatch2();
    var ColorController = (
      /** @class */
      function() {
        function ColorController2(doc, config) {
          var _this = this;
          this.onButtonBlur_ = this.onButtonBlur_.bind(this);
          this.onButtonClick_ = this.onButtonClick_.bind(this);
          this.onPopupChildBlur_ = this.onPopupChildBlur_.bind(this);
          this.onPopupChildKeydown_ = this.onPopupChildKeydown_.bind(this);
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.foldable_ = foldable_1.Foldable.create(config.expanded);
          this.swatchC_ = new color_swatch_1.ColorSwatchController(doc, {
            value: this.value,
            viewProps: this.viewProps
          });
          var buttonElem = this.swatchC_.view.buttonElement;
          buttonElem.addEventListener("blur", this.onButtonBlur_);
          buttonElem.addEventListener("click", this.onButtonClick_);
          this.textC_ = new text_1.TextController(doc, {
            parser: config.parser,
            props: value_map_1.ValueMap.fromObject({
              formatter: config.formatter
            }),
            value: this.value,
            viewProps: this.viewProps
          });
          this.view = new color_1.ColorView(doc, {
            foldable: this.foldable_,
            pickerLayout: config.pickerLayout
          });
          this.view.swatchElement.appendChild(this.swatchC_.view.element);
          this.view.textElement.appendChild(this.textC_.view.element);
          this.popC_ = config.pickerLayout === "popup" ? new popup_1.PopupController(doc, {
            viewProps: this.viewProps
          }) : null;
          var pickerC = new color_picker_1.ColorPickerController(doc, {
            colorType: config.colorType,
            supportsAlpha: config.supportsAlpha,
            value: this.value,
            viewProps: this.viewProps
          });
          pickerC.view.allFocusableElements.forEach(function(elem) {
            elem.addEventListener("blur", _this.onPopupChildBlur_);
            elem.addEventListener("keydown", _this.onPopupChildKeydown_);
          });
          this.pickerC_ = pickerC;
          if (this.popC_) {
            this.view.element.appendChild(this.popC_.view.element);
            this.popC_.view.element.appendChild(pickerC.view.element);
            (0, value_sync_1.connectValues)({
              primary: this.foldable_.value("expanded"),
              secondary: this.popC_.shows,
              forward: function(p) {
                return p.rawValue;
              },
              backward: function(_, s) {
                return s.rawValue;
              }
            });
          } else if (this.view.pickerElement) {
            this.view.pickerElement.appendChild(this.pickerC_.view.element);
            (0, foldable_1.bindFoldable)(this.foldable_, this.view.pickerElement);
          }
        }
        Object.defineProperty(ColorController2.prototype, "textController", {
          get: function() {
            return this.textC_;
          },
          enumerable: false,
          configurable: true
        });
        ColorController2.prototype.onButtonBlur_ = function(e) {
          if (!this.popC_) {
            return;
          }
          var elem = this.view.element;
          var nextTarget = (0, type_util_1.forceCast)(e.relatedTarget);
          if (!nextTarget || !elem.contains(nextTarget)) {
            this.popC_.shows.rawValue = false;
          }
        };
        ColorController2.prototype.onButtonClick_ = function() {
          this.foldable_.set("expanded", !this.foldable_.get("expanded"));
          if (this.foldable_.get("expanded")) {
            this.pickerC_.view.allFocusableElements[0].focus();
          }
        };
        ColorController2.prototype.onPopupChildBlur_ = function(ev) {
          if (!this.popC_) {
            return;
          }
          var elem = this.popC_.view.element;
          var nextTarget = (0, dom_util_1.findNextTarget)(ev);
          if (nextTarget && elem.contains(nextTarget)) {
            return;
          }
          if (nextTarget && nextTarget === this.swatchC_.view.buttonElement && !(0, dom_util_1.supportsTouch)(elem.ownerDocument)) {
            return;
          }
          this.popC_.shows.rawValue = false;
        };
        ColorController2.prototype.onPopupChildKeydown_ = function(ev) {
          if (this.popC_) {
            if (ev.key === "Escape") {
              this.popC_.shows.rawValue = false;
            }
          } else if (this.view.pickerElement) {
            if (ev.key === "Escape") {
              this.swatchC_.view.buttonElement.focus();
            }
          }
        };
        return ColorController2;
      }()
    );
    exports.ColorController = ColorController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/converter/color-number.js
var require_color_number = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/converter/color-number.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.colorFromRgbaNumber = exports.colorFromRgbNumber = exports.numberToRgbaColor = exports.numberToRgbColor = exports.colorToRgbaNumber = exports.colorToRgbNumber = exports.colorFromObject = void 0;
    var number_util_1 = require_number_util();
    var color_1 = require_color2();
    var color_model_1 = require_color_model();
    function colorFromObject(value, opt_type) {
      if (color_1.Color.isColorObject(value)) {
        return color_1.Color.fromObject(value, opt_type);
      }
      return color_1.Color.black(opt_type);
    }
    exports.colorFromObject = colorFromObject;
    function colorToRgbNumber(value) {
      return (0, color_model_1.removeAlphaComponent)(value.getComponents("rgb")).reduce(function(result, comp) {
        return result << 8 | Math.floor(comp) & 255;
      }, 0);
    }
    exports.colorToRgbNumber = colorToRgbNumber;
    function colorToRgbaNumber(value) {
      return value.getComponents("rgb").reduce(function(result, comp, index) {
        var hex = Math.floor(index === 3 ? comp * 255 : comp) & 255;
        return result << 8 | hex;
      }, 0) >>> 0;
    }
    exports.colorToRgbaNumber = colorToRgbaNumber;
    function numberToRgbColor(num) {
      return new color_1.Color([num >> 16 & 255, num >> 8 & 255, num & 255], "rgb");
    }
    exports.numberToRgbColor = numberToRgbColor;
    function numberToRgbaColor(num) {
      return new color_1.Color([
        num >> 24 & 255,
        num >> 16 & 255,
        num >> 8 & 255,
        (0, number_util_1.mapRange)(num & 255, 0, 255, 0, 1)
      ], "rgb");
    }
    exports.numberToRgbaColor = numberToRgbaColor;
    function colorFromRgbNumber(value) {
      if (typeof value !== "number") {
        return color_1.Color.black();
      }
      return numberToRgbColor(value);
    }
    exports.colorFromRgbNumber = colorFromRgbNumber;
    function colorFromRgbaNumber(value) {
      if (typeof value !== "number") {
        return color_1.Color.black();
      }
      return numberToRgbaColor(value);
    }
    exports.colorFromRgbaNumber = colorFromRgbaNumber;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/converter/writer.js
var require_writer = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/converter/writer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createColorObjectWriter = exports.writeRgbColorObject = exports.writeRgbaColorObject = exports.createColorNumberWriter = exports.createColorStringWriter = void 0;
    var primitive_1 = require_primitive();
    var color_number_1 = require_color_number();
    var color_string_1 = require_color_string();
    function createColorStringWriter(format) {
      var stringify = (0, color_string_1.findColorStringifier)(format);
      return stringify ? function(target, value) {
        (0, primitive_1.writePrimitive)(target, stringify(value));
      } : null;
    }
    exports.createColorStringWriter = createColorStringWriter;
    function createColorNumberWriter(supportsAlpha) {
      var colorToNumber = supportsAlpha ? color_number_1.colorToRgbaNumber : color_number_1.colorToRgbNumber;
      return function(target, value) {
        (0, primitive_1.writePrimitive)(target, colorToNumber(value));
      };
    }
    exports.createColorNumberWriter = createColorNumberWriter;
    function writeRgbaColorObject(target, value, opt_type) {
      var obj = value.toRgbaObject(opt_type);
      target.writeProperty("r", obj.r);
      target.writeProperty("g", obj.g);
      target.writeProperty("b", obj.b);
      target.writeProperty("a", obj.a);
    }
    exports.writeRgbaColorObject = writeRgbaColorObject;
    function writeRgbColorObject(target, value, opt_type) {
      var obj = value.toRgbaObject(opt_type);
      target.writeProperty("r", obj.r);
      target.writeProperty("g", obj.g);
      target.writeProperty("b", obj.b);
    }
    exports.writeRgbColorObject = writeRgbColorObject;
    function createColorObjectWriter(supportsAlpha, opt_type) {
      return function(target, inValue) {
        if (supportsAlpha) {
          writeRgbaColorObject(target, inValue, opt_type);
        } else {
          writeRgbColorObject(target, inValue, opt_type);
        }
      };
    }
    exports.createColorObjectWriter = createColorObjectWriter;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/plugin-number.js
var require_plugin_number = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/plugin-number.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NumberColorInputPlugin = void 0;
    var color_1 = require_color3();
    var color_number_1 = require_color_number();
    var color_string_1 = require_color_string();
    var writer_1 = require_writer();
    var color_2 = require_color2();
    var util_1 = require_util2();
    function shouldSupportAlpha(inputParams) {
      var _a;
      if ((inputParams === null || inputParams === void 0 ? void 0 : inputParams.alpha) || ((_a = inputParams === null || inputParams === void 0 ? void 0 : inputParams.color) === null || _a === void 0 ? void 0 : _a.alpha)) {
        return true;
      }
      return false;
    }
    function createFormatter(supportsAlpha) {
      return supportsAlpha ? function(v) {
        return (0, color_string_1.colorToHexRgbaString)(v, "0x");
      } : function(v) {
        return (0, color_string_1.colorToHexRgbString)(v, "0x");
      };
    }
    function isForColor(params) {
      if ("color" in params) {
        return true;
      }
      if ("view" in params && params.view === "color") {
        return true;
      }
      return false;
    }
    exports.NumberColorInputPlugin = {
      id: "input-color-number",
      type: "input",
      accept: function(value, params) {
        if (typeof value !== "number") {
          return null;
        }
        if (!isForColor(params)) {
          return null;
        }
        var result = (0, util_1.parseColorInputParams)(params);
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(args) {
          return shouldSupportAlpha(args.params) ? color_number_1.colorFromRgbaNumber : color_number_1.colorFromRgbNumber;
        },
        equals: color_2.Color.equals,
        writer: function(args) {
          return (0, writer_1.createColorNumberWriter)(shouldSupportAlpha(args.params));
        }
      },
      controller: function(args) {
        var supportsAlpha = shouldSupportAlpha(args.params);
        var expanded = "expanded" in args.params ? args.params.expanded : void 0;
        var picker = "picker" in args.params ? args.params.picker : void 0;
        return new color_1.ColorController(args.document, {
          colorType: "int",
          expanded: expanded !== null && expanded !== void 0 ? expanded : false,
          formatter: createFormatter(supportsAlpha),
          parser: (0, color_string_1.createColorStringParser)("int"),
          pickerLayout: picker !== null && picker !== void 0 ? picker : "popup",
          supportsAlpha,
          value: args.value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/plugin-object.js
var require_plugin_object = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/plugin-object.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ObjectColorInputPlugin = void 0;
    var color_1 = require_color3();
    var color_number_1 = require_color_number();
    var color_string_1 = require_color_string();
    var writer_1 = require_writer();
    var color_2 = require_color2();
    var util_1 = require_util2();
    function shouldSupportAlpha(initialValue) {
      return color_2.Color.isRgbaColorObject(initialValue);
    }
    function createColorObjectReader(opt_type) {
      return function(value) {
        return (0, color_number_1.colorFromObject)(value, opt_type);
      };
    }
    function createColorObjectFormatter(supportsAlpha, type) {
      return function(value) {
        if (supportsAlpha) {
          return (0, color_string_1.colorToObjectRgbaString)(value, type);
        }
        return (0, color_string_1.colorToObjectRgbString)(value, type);
      };
    }
    exports.ObjectColorInputPlugin = {
      id: "input-color-object",
      type: "input",
      accept: function(value, params) {
        if (!color_2.Color.isColorObject(value)) {
          return null;
        }
        var result = (0, util_1.parseColorInputParams)(params);
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(args) {
          return createColorObjectReader((0, util_1.extractColorType)(args.params));
        },
        equals: color_2.Color.equals,
        writer: function(args) {
          return (0, writer_1.createColorObjectWriter)(shouldSupportAlpha(args.initialValue), (0, util_1.extractColorType)(args.params));
        }
      },
      controller: function(args) {
        var _a;
        var supportsAlpha = color_2.Color.isRgbaColorObject(args.initialValue);
        var expanded = "expanded" in args.params ? args.params.expanded : void 0;
        var picker = "picker" in args.params ? args.params.picker : void 0;
        var type = (_a = (0, util_1.extractColorType)(args.params)) !== null && _a !== void 0 ? _a : "int";
        return new color_1.ColorController(args.document, {
          colorType: type,
          expanded: expanded !== null && expanded !== void 0 ? expanded : false,
          formatter: createColorObjectFormatter(supportsAlpha, type),
          parser: (0, color_string_1.createColorStringParser)(type),
          pickerLayout: picker !== null && picker !== void 0 ? picker : "popup",
          supportsAlpha,
          value: args.value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/color/plugin-string.js
var require_plugin_string = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/color/plugin-string.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StringColorInputPlugin = void 0;
    var tp_error_1 = require_tp_error();
    var color_1 = require_color3();
    var color_string_1 = require_color_string();
    var writer_1 = require_writer();
    var color_2 = require_color2();
    var util_1 = require_util2();
    exports.StringColorInputPlugin = {
      id: "input-color-string",
      type: "input",
      accept: function(value, params) {
        if (typeof value !== "string") {
          return null;
        }
        if ("view" in params && params.view === "text") {
          return null;
        }
        var format = (0, color_string_1.detectStringColorFormat)(value, (0, util_1.extractColorType)(params));
        if (!format) {
          return null;
        }
        var stringifier = (0, color_string_1.findColorStringifier)(format);
        if (!stringifier) {
          return null;
        }
        var result = (0, util_1.parseColorInputParams)(params);
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(args) {
          var _a;
          return (0, color_string_1.createColorStringBindingReader)((_a = (0, util_1.extractColorType)(args.params)) !== null && _a !== void 0 ? _a : "int");
        },
        equals: color_2.Color.equals,
        writer: function(args) {
          var format = (0, color_string_1.detectStringColorFormat)(args.initialValue, (0, util_1.extractColorType)(args.params));
          if (!format) {
            throw tp_error_1.TpError.shouldNeverHappen();
          }
          var writer = (0, writer_1.createColorStringWriter)(format);
          if (!writer) {
            throw tp_error_1.TpError.notBindable();
          }
          return writer;
        }
      },
      controller: function(args) {
        var format = (0, color_string_1.detectStringColorFormat)(args.initialValue, (0, util_1.extractColorType)(args.params));
        if (!format) {
          throw tp_error_1.TpError.shouldNeverHappen();
        }
        var stringifier = (0, color_string_1.findColorStringifier)(format);
        if (!stringifier) {
          throw tp_error_1.TpError.shouldNeverHappen();
        }
        var expanded = "expanded" in args.params ? args.params.expanded : void 0;
        var picker = "picker" in args.params ? args.params.picker : void 0;
        return new color_1.ColorController(args.document, {
          colorType: format.type,
          expanded: expanded !== null && expanded !== void 0 ? expanded : false,
          formatter: stringifier,
          parser: (0, color_string_1.createColorStringParser)(format.type),
          pickerLayout: picker !== null && picker !== void 0 ? picker : "popup",
          supportsAlpha: format.alpha,
          value: args.value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/common/constraint/point-nd.js
var require_point_nd = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/common/constraint/point-nd.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PointNdConstraint = void 0;
    var PointNdConstraint = (
      /** @class */
      function() {
        function PointNdConstraint2(config) {
          this.components = config.components;
          this.asm_ = config.assembly;
        }
        PointNdConstraint2.prototype.constrain = function(value) {
          var _this = this;
          var comps = this.asm_.toComponents(value).map(function(comp, index) {
            var _a, _b;
            return (_b = (_a = _this.components[index]) === null || _a === void 0 ? void 0 : _a.constrain(comp)) !== null && _b !== void 0 ? _b : comp;
          });
          return this.asm_.fromComponents(comps);
        };
        return PointNdConstraint2;
      }()
    );
    exports.PointNdConstraint = PointNdConstraint;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/common/view/point-nd-text.js
var require_point_nd_text = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/common/view/point-nd-text.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PointNdTextView = void 0;
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("pndtxt");
    var PointNdTextView = (
      /** @class */
      function() {
        function PointNdTextView2(doc, config) {
          var _this = this;
          this.textViews = config.textViews;
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          this.textViews.forEach(function(v) {
            var axisElem = doc.createElement("div");
            axisElem.classList.add(className("a"));
            axisElem.appendChild(v.element);
            _this.element.appendChild(axisElem);
          });
        }
        return PointNdTextView2;
      }()
    );
    exports.PointNdTextView = PointNdTextView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/common/controller/point-nd-text.js
var require_point_nd_text2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/common/controller/point-nd-text.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PointNdTextController = void 0;
    var value_sync_1 = require_value_sync();
    var values_1 = require_values();
    var number_text_1 = require_number_text2();
    var point_nd_text_1 = require_point_nd_text();
    function createAxisController(doc, config, index) {
      return new number_text_1.NumberTextController(doc, {
        arrayPosition: index === 0 ? "fst" : index === config.axes.length - 1 ? "lst" : "mid",
        baseStep: config.axes[index].baseStep,
        parser: config.parser,
        props: config.axes[index].textProps,
        value: (0, values_1.createValue)(0, {
          constraint: config.axes[index].constraint
        }),
        viewProps: config.viewProps
      });
    }
    var PointNdTextController = (
      /** @class */
      function() {
        function PointNdTextController2(doc, config) {
          var _this = this;
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.acs_ = config.axes.map(function(_, index) {
            return createAxisController(doc, config, index);
          });
          this.acs_.forEach(function(c, index) {
            (0, value_sync_1.connectValues)({
              primary: _this.value,
              secondary: c.value,
              forward: function(p) {
                return config.assembly.toComponents(p.rawValue)[index];
              },
              backward: function(p, s) {
                var comps = config.assembly.toComponents(p.rawValue);
                comps[index] = s.rawValue;
                return config.assembly.fromComponents(comps);
              }
            });
          });
          this.view = new point_nd_text_1.PointNdTextView(doc, {
            textViews: this.acs_.map(function(ac) {
              return ac.view;
            })
          });
        }
        return PointNdTextController2;
      }()
    );
    exports.PointNdTextController = PointNdTextController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/number/plugin.js
var require_plugin7 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/number/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NumberInputPlugin = exports.findNumberRange = exports.createRangeConstraint = exports.createStepConstraint = void 0;
    var composite_1 = require_composite();
    var definite_range_1 = require_definite_range();
    var list_1 = require_list();
    var range_1 = require_range();
    var step_1 = require_step();
    var list_2 = require_list3();
    var number_1 = require_number();
    var value_map_1 = require_value_map();
    var number_text_1 = require_number_text2();
    var slider_text_1 = require_slider_text2();
    var params_parsers_1 = require_params_parsers();
    var primitive_1 = require_primitive();
    var util_1 = require_util();
    var type_util_1 = require_type_util();
    function createStepConstraint(params, initialValue) {
      if ("step" in params && !(0, type_util_1.isEmpty)(params.step)) {
        return new step_1.StepConstraint(params.step, initialValue);
      }
      return null;
    }
    exports.createStepConstraint = createStepConstraint;
    function createRangeConstraint(params) {
      if (!(0, type_util_1.isEmpty)(params.max) && !(0, type_util_1.isEmpty)(params.min)) {
        return new definite_range_1.DefiniteRangeConstraint({
          max: params.max,
          min: params.min
        });
      }
      if (!(0, type_util_1.isEmpty)(params.max) || !(0, type_util_1.isEmpty)(params.min)) {
        return new range_1.RangeConstraint({
          max: params.max,
          min: params.min
        });
      }
      return null;
    }
    exports.createRangeConstraint = createRangeConstraint;
    function findNumberRange(c) {
      var drc = (0, composite_1.findConstraint)(c, definite_range_1.DefiniteRangeConstraint);
      if (drc) {
        return [drc.values.get("min"), drc.values.get("max")];
      }
      var rc = (0, composite_1.findConstraint)(c, range_1.RangeConstraint);
      if (rc) {
        return [rc.minValue, rc.maxValue];
      }
      return [void 0, void 0];
    }
    exports.findNumberRange = findNumberRange;
    function createConstraint(params, initialValue) {
      var constraints = [];
      var sc = createStepConstraint(params, initialValue);
      if (sc) {
        constraints.push(sc);
      }
      var rc = createRangeConstraint(params);
      if (rc) {
        constraints.push(rc);
      }
      var lc = (0, util_1.createListConstraint)(params.options);
      if (lc) {
        constraints.push(lc);
      }
      return new composite_1.CompositeConstraint(constraints);
    }
    exports.NumberInputPlugin = {
      id: "input-number",
      type: "input",
      accept: function(value, params) {
        if (typeof value !== "number") {
          return null;
        }
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          format: p.optional.function,
          max: p.optional.number,
          min: p.optional.number,
          options: p.optional.custom(util_1.parseListOptions),
          step: p.optional.number
        });
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(_args) {
          return number_1.numberFromUnknown;
        },
        constraint: function(args) {
          return createConstraint(args.params, args.initialValue);
        },
        writer: function(_args) {
          return primitive_1.writePrimitive;
        }
      },
      controller: function(args) {
        var _a;
        var value = args.value;
        var c = args.constraint;
        var lc = c && (0, composite_1.findConstraint)(c, list_1.ListConstraint);
        if (lc) {
          return new list_2.ListController(args.document, {
            props: new value_map_1.ValueMap({
              options: lc.values.value("options")
            }),
            value,
            viewProps: args.viewProps
          });
        }
        var formatter = (_a = "format" in args.params ? args.params.format : void 0) !== null && _a !== void 0 ? _a : (0, number_1.createNumberFormatter)((0, util_1.getSuitableDecimalDigits)(c, value.rawValue));
        var drc = c && (0, composite_1.findConstraint)(c, definite_range_1.DefiniteRangeConstraint);
        if (drc) {
          return new slider_text_1.SliderTextController(args.document, {
            baseStep: (0, util_1.getBaseStep)(c),
            parser: number_1.parseNumber,
            sliderProps: new value_map_1.ValueMap({
              maxValue: drc.values.value("max"),
              minValue: drc.values.value("min")
            }),
            textProps: value_map_1.ValueMap.fromObject({
              draggingScale: (0, util_1.getSuitableDraggingScale)(c, value.rawValue),
              formatter
            }),
            value,
            viewProps: args.viewProps
          });
        }
        return new number_text_1.NumberTextController(args.document, {
          baseStep: (0, util_1.getBaseStep)(c),
          parser: number_1.parseNumber,
          props: value_map_1.ValueMap.fromObject({
            draggingScale: (0, util_1.getSuitableDraggingScale)(c, value.rawValue),
            formatter
          }),
          value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/model/point-2d.js
var require_point_2d = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/model/point-2d.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Point2dAssembly = exports.Point2d = void 0;
    var type_util_1 = require_type_util();
    var Point2d = (
      /** @class */
      function() {
        function Point2d2(x, y) {
          if (x === void 0) {
            x = 0;
          }
          if (y === void 0) {
            y = 0;
          }
          this.x = x;
          this.y = y;
        }
        Point2d2.prototype.getComponents = function() {
          return [this.x, this.y];
        };
        Point2d2.isObject = function(obj) {
          if ((0, type_util_1.isEmpty)(obj)) {
            return false;
          }
          var x = obj.x;
          var y = obj.y;
          if (typeof x !== "number" || typeof y !== "number") {
            return false;
          }
          return true;
        };
        Point2d2.equals = function(v1, v2) {
          return v1.x === v2.x && v1.y === v2.y;
        };
        Point2d2.prototype.toObject = function() {
          return {
            x: this.x,
            y: this.y
          };
        };
        return Point2d2;
      }()
    );
    exports.Point2d = Point2d;
    exports.Point2dAssembly = {
      toComponents: function(p) {
        return p.getComponents();
      },
      fromComponents: function(comps) {
        return new (Point2d.bind.apply(Point2d, __spreadArray([void 0], comps, false)))();
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/view/point-2d.js
var require_point_2d2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/view/point-2d.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Point2dView = void 0;
    var dom_util_1 = require_dom_util();
    var reactive_1 = require_reactive();
    var class_name_1 = require_class_name();
    var reactive_2 = require_reactive2();
    var className = (0, class_name_1.ClassName)("p2d");
    var Point2dView = (
      /** @class */
      function() {
        function Point2dView2(doc, config) {
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          (0, reactive_1.bindValue)(config.expanded, (0, reactive_2.valueToClassName)(this.element, className(void 0, "expanded")));
          var headElem = doc.createElement("div");
          headElem.classList.add(className("h"));
          this.element.appendChild(headElem);
          var buttonElem = doc.createElement("button");
          buttonElem.classList.add(className("b"));
          buttonElem.appendChild((0, dom_util_1.createSvgIconElement)(doc, "p2dpad"));
          config.viewProps.bindDisabled(buttonElem);
          headElem.appendChild(buttonElem);
          this.buttonElement = buttonElem;
          var textElem = doc.createElement("div");
          textElem.classList.add(className("t"));
          headElem.appendChild(textElem);
          this.textElement = textElem;
          if (config.pickerLayout === "inline") {
            var pickerElem = doc.createElement("div");
            pickerElem.classList.add(className("p"));
            this.element.appendChild(pickerElem);
            this.pickerElement = pickerElem;
          } else {
            this.pickerElement = null;
          }
        }
        return Point2dView2;
      }()
    );
    exports.Point2dView = Point2dView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/view/point-2d-picker.js
var require_point_2d_picker = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/view/point-2d-picker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Point2dPickerView = void 0;
    var dom_util_1 = require_dom_util();
    var number_util_1 = require_number_util();
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("p2dp");
    var Point2dPickerView = (
      /** @class */
      function() {
        function Point2dPickerView2(doc, config) {
          this.onFoldableChange_ = this.onFoldableChange_.bind(this);
          this.onValueChange_ = this.onValueChange_.bind(this);
          this.invertsY_ = config.invertsY;
          this.maxValue_ = config.maxValue;
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          if (config.layout === "popup") {
            this.element.classList.add(className(void 0, "p"));
          }
          config.viewProps.bindClassModifiers(this.element);
          var padElem = doc.createElement("div");
          padElem.classList.add(className("p"));
          config.viewProps.bindTabIndex(padElem);
          this.element.appendChild(padElem);
          this.padElement = padElem;
          var svgElem = doc.createElementNS(dom_util_1.SVG_NS, "svg");
          svgElem.classList.add(className("g"));
          this.padElement.appendChild(svgElem);
          this.svgElem_ = svgElem;
          var xAxisElem = doc.createElementNS(dom_util_1.SVG_NS, "line");
          xAxisElem.classList.add(className("ax"));
          xAxisElem.setAttributeNS(null, "x1", "0");
          xAxisElem.setAttributeNS(null, "y1", "50%");
          xAxisElem.setAttributeNS(null, "x2", "100%");
          xAxisElem.setAttributeNS(null, "y2", "50%");
          this.svgElem_.appendChild(xAxisElem);
          var yAxisElem = doc.createElementNS(dom_util_1.SVG_NS, "line");
          yAxisElem.classList.add(className("ax"));
          yAxisElem.setAttributeNS(null, "x1", "50%");
          yAxisElem.setAttributeNS(null, "y1", "0");
          yAxisElem.setAttributeNS(null, "x2", "50%");
          yAxisElem.setAttributeNS(null, "y2", "100%");
          this.svgElem_.appendChild(yAxisElem);
          var lineElem = doc.createElementNS(dom_util_1.SVG_NS, "line");
          lineElem.classList.add(className("l"));
          lineElem.setAttributeNS(null, "x1", "50%");
          lineElem.setAttributeNS(null, "y1", "50%");
          this.svgElem_.appendChild(lineElem);
          this.lineElem_ = lineElem;
          var markerElem = doc.createElement("div");
          markerElem.classList.add(className("m"));
          this.padElement.appendChild(markerElem);
          this.markerElem_ = markerElem;
          config.value.emitter.on("change", this.onValueChange_);
          this.value = config.value;
          this.update_();
        }
        Object.defineProperty(Point2dPickerView2.prototype, "allFocusableElements", {
          get: function() {
            return [this.padElement];
          },
          enumerable: false,
          configurable: true
        });
        Point2dPickerView2.prototype.update_ = function() {
          var _a = this.value.rawValue.getComponents(), x = _a[0], y = _a[1];
          var max = this.maxValue_;
          var px = (0, number_util_1.mapRange)(x, -max, +max, 0, 100);
          var py = (0, number_util_1.mapRange)(y, -max, +max, 0, 100);
          var ipy = this.invertsY_ ? 100 - py : py;
          this.lineElem_.setAttributeNS(null, "x2", "".concat(px, "%"));
          this.lineElem_.setAttributeNS(null, "y2", "".concat(ipy, "%"));
          this.markerElem_.style.left = "".concat(px, "%");
          this.markerElem_.style.top = "".concat(ipy, "%");
        };
        Point2dPickerView2.prototype.onValueChange_ = function() {
          this.update_();
        };
        Point2dPickerView2.prototype.onFoldableChange_ = function() {
          this.update_();
        };
        return Point2dPickerView2;
      }()
    );
    exports.Point2dPickerView = Point2dPickerView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/controller/point-2d-picker.js
var require_point_2d_picker2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/controller/point-2d-picker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Point2dPickerController = void 0;
    var number_util_1 = require_number_util();
    var ui_1 = require_ui();
    var pointer_handler_1 = require_pointer_handler();
    var point_2d_1 = require_point_2d();
    var point_2d_picker_1 = require_point_2d_picker();
    function computeOffset(ev, baseSteps, invertsY) {
      return [
        (0, ui_1.getStepForKey)(baseSteps[0], (0, ui_1.getHorizontalStepKeys)(ev)),
        (0, ui_1.getStepForKey)(baseSteps[1], (0, ui_1.getVerticalStepKeys)(ev)) * (invertsY ? 1 : -1)
      ];
    }
    var Point2dPickerController = (
      /** @class */
      function() {
        function Point2dPickerController2(doc, config) {
          this.onPadKeyDown_ = this.onPadKeyDown_.bind(this);
          this.onPadKeyUp_ = this.onPadKeyUp_.bind(this);
          this.onPointerDown_ = this.onPointerDown_.bind(this);
          this.onPointerMove_ = this.onPointerMove_.bind(this);
          this.onPointerUp_ = this.onPointerUp_.bind(this);
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.baseSteps_ = config.baseSteps;
          this.maxValue_ = config.maxValue;
          this.invertsY_ = config.invertsY;
          this.view = new point_2d_picker_1.Point2dPickerView(doc, {
            invertsY: this.invertsY_,
            layout: config.layout,
            maxValue: this.maxValue_,
            value: this.value,
            viewProps: this.viewProps
          });
          this.ptHandler_ = new pointer_handler_1.PointerHandler(this.view.padElement);
          this.ptHandler_.emitter.on("down", this.onPointerDown_);
          this.ptHandler_.emitter.on("move", this.onPointerMove_);
          this.ptHandler_.emitter.on("up", this.onPointerUp_);
          this.view.padElement.addEventListener("keydown", this.onPadKeyDown_);
          this.view.padElement.addEventListener("keyup", this.onPadKeyUp_);
        }
        Point2dPickerController2.prototype.handlePointerEvent_ = function(d, opts) {
          if (!d.point) {
            return;
          }
          var max = this.maxValue_;
          var px = (0, number_util_1.mapRange)(d.point.x, 0, d.bounds.width, -max, +max);
          var py = (0, number_util_1.mapRange)(this.invertsY_ ? d.bounds.height - d.point.y : d.point.y, 0, d.bounds.height, -max, +max);
          this.value.setRawValue(new point_2d_1.Point2d(px, py), opts);
        };
        Point2dPickerController2.prototype.onPointerDown_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: false,
            last: false
          });
        };
        Point2dPickerController2.prototype.onPointerMove_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: false,
            last: false
          });
        };
        Point2dPickerController2.prototype.onPointerUp_ = function(ev) {
          this.handlePointerEvent_(ev.data, {
            forceEmit: true,
            last: true
          });
        };
        Point2dPickerController2.prototype.onPadKeyDown_ = function(ev) {
          if ((0, ui_1.isArrowKey)(ev.key)) {
            ev.preventDefault();
          }
          var _a = computeOffset(ev, this.baseSteps_, this.invertsY_), dx = _a[0], dy = _a[1];
          if (dx === 0 && dy === 0) {
            return;
          }
          this.value.setRawValue(new point_2d_1.Point2d(this.value.rawValue.x + dx, this.value.rawValue.y + dy), {
            forceEmit: false,
            last: false
          });
        };
        Point2dPickerController2.prototype.onPadKeyUp_ = function(ev) {
          var _a = computeOffset(ev, this.baseSteps_, this.invertsY_), dx = _a[0], dy = _a[1];
          if (dx === 0 && dy === 0) {
            return;
          }
          this.value.setRawValue(this.value.rawValue, {
            forceEmit: true,
            last: true
          });
        };
        return Point2dPickerController2;
      }()
    );
    exports.Point2dPickerController = Point2dPickerController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/controller/point-2d.js
var require_point_2d3 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/controller/point-2d.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Point2dController = void 0;
    var foldable_1 = require_foldable();
    var popup_1 = require_popup2();
    var dom_util_1 = require_dom_util();
    var value_sync_1 = require_value_sync();
    var type_util_1 = require_type_util();
    var point_nd_text_1 = require_point_nd_text2();
    var point_2d_1 = require_point_2d();
    var point_2d_2 = require_point_2d2();
    var point_2d_picker_1 = require_point_2d_picker2();
    var Point2dController = (
      /** @class */
      function() {
        function Point2dController2(doc, config) {
          var _this = this;
          var _a, _b;
          this.onPopupChildBlur_ = this.onPopupChildBlur_.bind(this);
          this.onPopupChildKeydown_ = this.onPopupChildKeydown_.bind(this);
          this.onPadButtonBlur_ = this.onPadButtonBlur_.bind(this);
          this.onPadButtonClick_ = this.onPadButtonClick_.bind(this);
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.foldable_ = foldable_1.Foldable.create(config.expanded);
          this.popC_ = config.pickerLayout === "popup" ? new popup_1.PopupController(doc, {
            viewProps: this.viewProps
          }) : null;
          var padC = new point_2d_picker_1.Point2dPickerController(doc, {
            baseSteps: [config.axes[0].baseStep, config.axes[1].baseStep],
            invertsY: config.invertsY,
            layout: config.pickerLayout,
            maxValue: config.maxValue,
            value: this.value,
            viewProps: this.viewProps
          });
          padC.view.allFocusableElements.forEach(function(elem) {
            elem.addEventListener("blur", _this.onPopupChildBlur_);
            elem.addEventListener("keydown", _this.onPopupChildKeydown_);
          });
          this.pickerC_ = padC;
          this.textC_ = new point_nd_text_1.PointNdTextController(doc, {
            assembly: point_2d_1.Point2dAssembly,
            axes: config.axes,
            parser: config.parser,
            value: this.value,
            viewProps: this.viewProps
          });
          this.view = new point_2d_2.Point2dView(doc, {
            expanded: this.foldable_.value("expanded"),
            pickerLayout: config.pickerLayout,
            viewProps: this.viewProps
          });
          this.view.textElement.appendChild(this.textC_.view.element);
          (_a = this.view.buttonElement) === null || _a === void 0 ? void 0 : _a.addEventListener("blur", this.onPadButtonBlur_);
          (_b = this.view.buttonElement) === null || _b === void 0 ? void 0 : _b.addEventListener("click", this.onPadButtonClick_);
          if (this.popC_) {
            this.view.element.appendChild(this.popC_.view.element);
            this.popC_.view.element.appendChild(this.pickerC_.view.element);
            (0, value_sync_1.connectValues)({
              primary: this.foldable_.value("expanded"),
              secondary: this.popC_.shows,
              forward: function(p) {
                return p.rawValue;
              },
              backward: function(_, s) {
                return s.rawValue;
              }
            });
          } else if (this.view.pickerElement) {
            this.view.pickerElement.appendChild(this.pickerC_.view.element);
            (0, foldable_1.bindFoldable)(this.foldable_, this.view.pickerElement);
          }
        }
        Point2dController2.prototype.onPadButtonBlur_ = function(e) {
          if (!this.popC_) {
            return;
          }
          var elem = this.view.element;
          var nextTarget = (0, type_util_1.forceCast)(e.relatedTarget);
          if (!nextTarget || !elem.contains(nextTarget)) {
            this.popC_.shows.rawValue = false;
          }
        };
        Point2dController2.prototype.onPadButtonClick_ = function() {
          this.foldable_.set("expanded", !this.foldable_.get("expanded"));
          if (this.foldable_.get("expanded")) {
            this.pickerC_.view.allFocusableElements[0].focus();
          }
        };
        Point2dController2.prototype.onPopupChildBlur_ = function(ev) {
          if (!this.popC_) {
            return;
          }
          var elem = this.popC_.view.element;
          var nextTarget = (0, dom_util_1.findNextTarget)(ev);
          if (nextTarget && elem.contains(nextTarget)) {
            return;
          }
          if (nextTarget && nextTarget === this.view.buttonElement && !(0, dom_util_1.supportsTouch)(elem.ownerDocument)) {
            return;
          }
          this.popC_.shows.rawValue = false;
        };
        Point2dController2.prototype.onPopupChildKeydown_ = function(ev) {
          if (this.popC_) {
            if (ev.key === "Escape") {
              this.popC_.shows.rawValue = false;
            }
          } else if (this.view.pickerElement) {
            if (ev.key === "Escape") {
              this.view.buttonElement.focus();
            }
          }
        };
        return Point2dController2;
      }()
    );
    exports.Point2dController = Point2dController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/converter/point-2d.js
var require_point_2d4 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/converter/point-2d.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.writePoint2d = exports.point2dFromUnknown = void 0;
    var point_2d_1 = require_point_2d();
    function point2dFromUnknown(value) {
      return point_2d_1.Point2d.isObject(value) ? new point_2d_1.Point2d(value.x, value.y) : new point_2d_1.Point2d();
    }
    exports.point2dFromUnknown = point2dFromUnknown;
    function writePoint2d(target, value) {
      target.writeProperty("x", value.x);
      target.writeProperty("y", value.y);
    }
    exports.writePoint2d = writePoint2d;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/plugin.js
var require_plugin8 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-2d/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Point2dInputPlugin = exports.getSuitableMaxValue = exports.createDimensionConstraint = void 0;
    var composite_1 = require_composite();
    var number_1 = require_number();
    var value_map_1 = require_value_map();
    var params_parsers_1 = require_params_parsers();
    var tp_error_1 = require_tp_error();
    var util_1 = require_util();
    var index_1 = require_cjs();
    var point_nd_1 = require_point_nd();
    var plugin_1 = require_plugin7();
    var point_2d_1 = require_point_2d3();
    var point_2d_2 = require_point_2d4();
    var point_2d_3 = require_point_2d();
    function createDimensionConstraint(params, initialValue) {
      if (!params) {
        return void 0;
      }
      var constraints = [];
      var cs = (0, plugin_1.createStepConstraint)(params, initialValue);
      if (cs) {
        constraints.push(cs);
      }
      var rs = (0, plugin_1.createRangeConstraint)(params);
      if (rs) {
        constraints.push(rs);
      }
      return new composite_1.CompositeConstraint(constraints);
    }
    exports.createDimensionConstraint = createDimensionConstraint;
    function createConstraint(params, initialValue) {
      return new point_nd_1.PointNdConstraint({
        assembly: point_2d_3.Point2dAssembly,
        components: [
          createDimensionConstraint("x" in params ? params.x : void 0, initialValue.x),
          createDimensionConstraint("y" in params ? params.y : void 0, initialValue.y)
        ]
      });
    }
    function getSuitableMaxDimensionValue(constraint, rawValue) {
      var _a = constraint ? (0, plugin_1.findNumberRange)(constraint) : [], min = _a[0], max = _a[1];
      if (!(0, index_1.isEmpty)(min) || !(0, index_1.isEmpty)(max)) {
        return Math.max(Math.abs(min !== null && min !== void 0 ? min : 0), Math.abs(max !== null && max !== void 0 ? max : 0));
      }
      var step = (0, util_1.getBaseStep)(constraint);
      return Math.max(Math.abs(step) * 10, Math.abs(rawValue) * 10);
    }
    function getSuitableMaxValue(initialValue, constraint) {
      var xc = constraint instanceof point_nd_1.PointNdConstraint ? constraint.components[0] : void 0;
      var yc = constraint instanceof point_nd_1.PointNdConstraint ? constraint.components[1] : void 0;
      var xr = getSuitableMaxDimensionValue(xc, initialValue.x);
      var yr = getSuitableMaxDimensionValue(yc, initialValue.y);
      return Math.max(xr, yr);
    }
    exports.getSuitableMaxValue = getSuitableMaxValue;
    function createAxis(initialValue, constraint) {
      return {
        baseStep: (0, util_1.getBaseStep)(constraint),
        constraint,
        textProps: value_map_1.ValueMap.fromObject({
          draggingScale: (0, util_1.getSuitableDraggingScale)(constraint, initialValue),
          formatter: (0, number_1.createNumberFormatter)((0, util_1.getSuitableDecimalDigits)(constraint, initialValue))
        })
      };
    }
    function shouldInvertY(params) {
      if (!("y" in params)) {
        return false;
      }
      var yParams = params.y;
      if (!yParams) {
        return false;
      }
      return "inverted" in yParams ? !!yParams.inverted : false;
    }
    exports.Point2dInputPlugin = {
      id: "input-point2d",
      type: "input",
      accept: function(value, params) {
        if (!point_2d_3.Point2d.isObject(value)) {
          return null;
        }
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          expanded: p.optional.boolean,
          picker: p.optional.custom(util_1.parsePickerLayout),
          x: p.optional.custom(util_1.parsePointDimensionParams),
          y: p.optional.object({
            inverted: p.optional.boolean,
            max: p.optional.number,
            min: p.optional.number,
            step: p.optional.number
          })
        });
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(_args) {
          return point_2d_2.point2dFromUnknown;
        },
        constraint: function(args) {
          return createConstraint(args.params, args.initialValue);
        },
        equals: point_2d_3.Point2d.equals,
        writer: function(_args) {
          return point_2d_2.writePoint2d;
        }
      },
      controller: function(args) {
        var doc = args.document;
        var value = args.value;
        var c = args.constraint;
        if (!(c instanceof point_nd_1.PointNdConstraint)) {
          throw tp_error_1.TpError.shouldNeverHappen();
        }
        var expanded = "expanded" in args.params ? args.params.expanded : void 0;
        var picker = "picker" in args.params ? args.params.picker : void 0;
        return new point_2d_1.Point2dController(doc, {
          axes: [
            createAxis(value.rawValue.x, c.components[0]),
            createAxis(value.rawValue.y, c.components[1])
          ],
          expanded: expanded !== null && expanded !== void 0 ? expanded : false,
          invertsY: shouldInvertY(args.params),
          maxValue: getSuitableMaxValue(value.rawValue, c),
          parser: number_1.parseNumber,
          pickerLayout: picker !== null && picker !== void 0 ? picker : "popup",
          value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-3d/model/point-3d.js
var require_point_3d = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-3d/model/point-3d.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Point3dAssembly = exports.Point3d = void 0;
    var type_util_1 = require_type_util();
    var Point3d = (
      /** @class */
      function() {
        function Point3d2(x, y, z) {
          if (x === void 0) {
            x = 0;
          }
          if (y === void 0) {
            y = 0;
          }
          if (z === void 0) {
            z = 0;
          }
          this.x = x;
          this.y = y;
          this.z = z;
        }
        Point3d2.prototype.getComponents = function() {
          return [this.x, this.y, this.z];
        };
        Point3d2.isObject = function(obj) {
          if ((0, type_util_1.isEmpty)(obj)) {
            return false;
          }
          var x = obj.x;
          var y = obj.y;
          var z = obj.z;
          if (typeof x !== "number" || typeof y !== "number" || typeof z !== "number") {
            return false;
          }
          return true;
        };
        Point3d2.equals = function(v1, v2) {
          return v1.x === v2.x && v1.y === v2.y && v1.z === v2.z;
        };
        Point3d2.prototype.toObject = function() {
          return {
            x: this.x,
            y: this.y,
            z: this.z
          };
        };
        return Point3d2;
      }()
    );
    exports.Point3d = Point3d;
    exports.Point3dAssembly = {
      toComponents: function(p) {
        return p.getComponents();
      },
      fromComponents: function(comps) {
        return new (Point3d.bind.apply(Point3d, __spreadArray([void 0], comps, false)))();
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-3d/converter/point-3d.js
var require_point_3d2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-3d/converter/point-3d.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.writePoint3d = exports.point3dFromUnknown = void 0;
    var point_3d_1 = require_point_3d();
    function point3dFromUnknown(value) {
      return point_3d_1.Point3d.isObject(value) ? new point_3d_1.Point3d(value.x, value.y, value.z) : new point_3d_1.Point3d();
    }
    exports.point3dFromUnknown = point3dFromUnknown;
    function writePoint3d(target, value) {
      target.writeProperty("x", value.x);
      target.writeProperty("y", value.y);
      target.writeProperty("z", value.z);
    }
    exports.writePoint3d = writePoint3d;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-3d/plugin.js
var require_plugin9 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-3d/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Point3dInputPlugin = void 0;
    var number_1 = require_number();
    var value_map_1 = require_value_map();
    var params_parsers_1 = require_params_parsers();
    var tp_error_1 = require_tp_error();
    var util_1 = require_util();
    var point_nd_1 = require_point_nd();
    var point_nd_text_1 = require_point_nd_text2();
    var plugin_1 = require_plugin8();
    var point_3d_1 = require_point_3d2();
    var point_3d_2 = require_point_3d();
    function createConstraint(params, initialValue) {
      return new point_nd_1.PointNdConstraint({
        assembly: point_3d_2.Point3dAssembly,
        components: [
          (0, plugin_1.createDimensionConstraint)("x" in params ? params.x : void 0, initialValue.x),
          (0, plugin_1.createDimensionConstraint)("y" in params ? params.y : void 0, initialValue.y),
          (0, plugin_1.createDimensionConstraint)("z" in params ? params.z : void 0, initialValue.z)
        ]
      });
    }
    function createAxis(initialValue, constraint) {
      return {
        baseStep: (0, util_1.getBaseStep)(constraint),
        constraint,
        textProps: value_map_1.ValueMap.fromObject({
          draggingScale: (0, util_1.getSuitableDraggingScale)(constraint, initialValue),
          formatter: (0, number_1.createNumberFormatter)((0, util_1.getSuitableDecimalDigits)(constraint, initialValue))
        })
      };
    }
    exports.Point3dInputPlugin = {
      id: "input-point3d",
      type: "input",
      accept: function(value, params) {
        if (!point_3d_2.Point3d.isObject(value)) {
          return null;
        }
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          x: p.optional.custom(util_1.parsePointDimensionParams),
          y: p.optional.custom(util_1.parsePointDimensionParams),
          z: p.optional.custom(util_1.parsePointDimensionParams)
        });
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(_args) {
          return point_3d_1.point3dFromUnknown;
        },
        constraint: function(args) {
          return createConstraint(args.params, args.initialValue);
        },
        equals: point_3d_2.Point3d.equals,
        writer: function(_args) {
          return point_3d_1.writePoint3d;
        }
      },
      controller: function(args) {
        var value = args.value;
        var c = args.constraint;
        if (!(c instanceof point_nd_1.PointNdConstraint)) {
          throw tp_error_1.TpError.shouldNeverHappen();
        }
        return new point_nd_text_1.PointNdTextController(args.document, {
          assembly: point_3d_2.Point3dAssembly,
          axes: [
            createAxis(value.rawValue.x, c.components[0]),
            createAxis(value.rawValue.y, c.components[1]),
            createAxis(value.rawValue.z, c.components[2])
          ],
          parser: number_1.parseNumber,
          value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-4d/model/point-4d.js
var require_point_4d = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-4d/model/point-4d.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Point4dAssembly = exports.Point4d = void 0;
    var type_util_1 = require_type_util();
    var Point4d = (
      /** @class */
      function() {
        function Point4d2(x, y, z, w) {
          if (x === void 0) {
            x = 0;
          }
          if (y === void 0) {
            y = 0;
          }
          if (z === void 0) {
            z = 0;
          }
          if (w === void 0) {
            w = 0;
          }
          this.x = x;
          this.y = y;
          this.z = z;
          this.w = w;
        }
        Point4d2.prototype.getComponents = function() {
          return [this.x, this.y, this.z, this.w];
        };
        Point4d2.isObject = function(obj) {
          if ((0, type_util_1.isEmpty)(obj)) {
            return false;
          }
          var x = obj.x;
          var y = obj.y;
          var z = obj.z;
          var w = obj.w;
          if (typeof x !== "number" || typeof y !== "number" || typeof z !== "number" || typeof w !== "number") {
            return false;
          }
          return true;
        };
        Point4d2.equals = function(v1, v2) {
          return v1.x === v2.x && v1.y === v2.y && v1.z === v2.z && v1.w === v2.w;
        };
        Point4d2.prototype.toObject = function() {
          return {
            x: this.x,
            y: this.y,
            z: this.z,
            w: this.w
          };
        };
        return Point4d2;
      }()
    );
    exports.Point4d = Point4d;
    exports.Point4dAssembly = {
      toComponents: function(p) {
        return p.getComponents();
      },
      fromComponents: function(comps) {
        return new (Point4d.bind.apply(Point4d, __spreadArray([void 0], comps, false)))();
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-4d/converter/point-4d.js
var require_point_4d2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-4d/converter/point-4d.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.writePoint4d = exports.point4dFromUnknown = void 0;
    var point_4d_1 = require_point_4d();
    function point4dFromUnknown(value) {
      return point_4d_1.Point4d.isObject(value) ? new point_4d_1.Point4d(value.x, value.y, value.z, value.w) : new point_4d_1.Point4d();
    }
    exports.point4dFromUnknown = point4dFromUnknown;
    function writePoint4d(target, value) {
      target.writeProperty("x", value.x);
      target.writeProperty("y", value.y);
      target.writeProperty("z", value.z);
      target.writeProperty("w", value.w);
    }
    exports.writePoint4d = writePoint4d;
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/point-4d/plugin.js
var require_plugin10 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/point-4d/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Point4dInputPlugin = void 0;
    var number_1 = require_number();
    var value_map_1 = require_value_map();
    var params_parsers_1 = require_params_parsers();
    var tp_error_1 = require_tp_error();
    var util_1 = require_util();
    var point_nd_1 = require_point_nd();
    var point_nd_text_1 = require_point_nd_text2();
    var plugin_1 = require_plugin8();
    var point_4d_1 = require_point_4d2();
    var point_4d_2 = require_point_4d();
    function createConstraint(params, initialValue) {
      return new point_nd_1.PointNdConstraint({
        assembly: point_4d_2.Point4dAssembly,
        components: [
          (0, plugin_1.createDimensionConstraint)("x" in params ? params.x : void 0, initialValue.x),
          (0, plugin_1.createDimensionConstraint)("y" in params ? params.y : void 0, initialValue.y),
          (0, plugin_1.createDimensionConstraint)("z" in params ? params.z : void 0, initialValue.z),
          (0, plugin_1.createDimensionConstraint)("w" in params ? params.w : void 0, initialValue.w)
        ]
      });
    }
    function createAxis(initialValue, constraint) {
      return {
        baseStep: (0, util_1.getBaseStep)(constraint),
        constraint,
        textProps: value_map_1.ValueMap.fromObject({
          draggingScale: (0, util_1.getSuitableDraggingScale)(constraint, initialValue),
          formatter: (0, number_1.createNumberFormatter)((0, util_1.getSuitableDecimalDigits)(constraint, initialValue))
        })
      };
    }
    exports.Point4dInputPlugin = {
      id: "input-point4d",
      type: "input",
      accept: function(value, params) {
        if (!point_4d_2.Point4d.isObject(value)) {
          return null;
        }
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          x: p.optional.custom(util_1.parsePointDimensionParams),
          y: p.optional.custom(util_1.parsePointDimensionParams),
          z: p.optional.custom(util_1.parsePointDimensionParams),
          w: p.optional.custom(util_1.parsePointDimensionParams)
        });
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(_args) {
          return point_4d_1.point4dFromUnknown;
        },
        constraint: function(args) {
          return createConstraint(args.params, args.initialValue);
        },
        equals: point_4d_2.Point4d.equals,
        writer: function(_args) {
          return point_4d_1.writePoint4d;
        }
      },
      controller: function(args) {
        var value = args.value;
        var c = args.constraint;
        if (!(c instanceof point_nd_1.PointNdConstraint)) {
          throw tp_error_1.TpError.shouldNeverHappen();
        }
        return new point_nd_text_1.PointNdTextController(args.document, {
          assembly: point_4d_2.Point4dAssembly,
          axes: value.rawValue.getComponents().map(function(comp, index) {
            return createAxis(comp, c.components[index]);
          }),
          parser: number_1.parseNumber,
          value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/string/plugin.js
var require_plugin11 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/string/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StringInputPlugin = void 0;
    var composite_1 = require_composite();
    var list_1 = require_list();
    var list_2 = require_list3();
    var text_1 = require_text2();
    var string_1 = require_string();
    var value_map_1 = require_value_map();
    var params_parsers_1 = require_params_parsers();
    var primitive_1 = require_primitive();
    var util_1 = require_util();
    function createConstraint(params) {
      var constraints = [];
      var lc = (0, util_1.createListConstraint)(params.options);
      if (lc) {
        constraints.push(lc);
      }
      return new composite_1.CompositeConstraint(constraints);
    }
    exports.StringInputPlugin = {
      id: "input-string",
      type: "input",
      accept: function(value, params) {
        if (typeof value !== "string") {
          return null;
        }
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          options: p.optional.custom(util_1.parseListOptions)
        });
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(_args) {
          return string_1.stringFromUnknown;
        },
        constraint: function(args) {
          return createConstraint(args.params);
        },
        writer: function(_args) {
          return primitive_1.writePrimitive;
        }
      },
      controller: function(args) {
        var doc = args.document;
        var value = args.value;
        var c = args.constraint;
        var lc = c && (0, composite_1.findConstraint)(c, list_1.ListConstraint);
        if (lc) {
          return new list_2.ListController(doc, {
            props: new value_map_1.ValueMap({
              options: lc.values.value("options")
            }),
            value,
            viewProps: args.viewProps
          });
        }
        return new text_1.TextController(doc, {
          parser: function(v) {
            return v;
          },
          props: value_map_1.ValueMap.fromObject({
            formatter: string_1.formatString
          }),
          value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/misc/constants.js
var require_constants = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/misc/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Constants = void 0;
    exports.Constants = {
      monitor: {
        defaultInterval: 200,
        defaultLineCount: 3
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/monitor-binding/common/view/multi-log.js
var require_multi_log = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/monitor-binding/common/view/multi-log.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MultiLogView = void 0;
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("mll");
    var MultiLogView = (
      /** @class */
      function() {
        function MultiLogView2(doc, config) {
          this.onValueUpdate_ = this.onValueUpdate_.bind(this);
          this.formatter_ = config.formatter;
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var textareaElem = doc.createElement("textarea");
          textareaElem.classList.add(className("i"));
          textareaElem.style.height = "calc(var(--bld-us) * ".concat(config.lineCount, ")");
          textareaElem.readOnly = true;
          config.viewProps.bindDisabled(textareaElem);
          this.element.appendChild(textareaElem);
          this.textareaElem_ = textareaElem;
          config.value.emitter.on("change", this.onValueUpdate_);
          this.value = config.value;
          this.update_();
        }
        MultiLogView2.prototype.update_ = function() {
          var _this = this;
          var elem = this.textareaElem_;
          var shouldScroll = elem.scrollTop === elem.scrollHeight - elem.clientHeight;
          var lines = [];
          this.value.rawValue.forEach(function(value) {
            if (value !== void 0) {
              lines.push(_this.formatter_(value));
            }
          });
          elem.textContent = lines.join("\n");
          if (shouldScroll) {
            elem.scrollTop = elem.scrollHeight;
          }
        };
        MultiLogView2.prototype.onValueUpdate_ = function() {
          this.update_();
        };
        return MultiLogView2;
      }()
    );
    exports.MultiLogView = MultiLogView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/monitor-binding/common/controller/multi-log.js
var require_multi_log2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/monitor-binding/common/controller/multi-log.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MultiLogController = void 0;
    var multi_log_1 = require_multi_log();
    var MultiLogController = (
      /** @class */
      function() {
        function MultiLogController2(doc, config) {
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.view = new multi_log_1.MultiLogView(doc, {
            formatter: config.formatter,
            lineCount: config.lineCount,
            value: this.value,
            viewProps: this.viewProps
          });
        }
        return MultiLogController2;
      }()
    );
    exports.MultiLogController = MultiLogController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/monitor-binding/common/view/single-log.js
var require_single_log = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/monitor-binding/common/view/single-log.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SingleLogView = void 0;
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("sgl");
    var SingleLogView = (
      /** @class */
      function() {
        function SingleLogView2(doc, config) {
          this.onValueUpdate_ = this.onValueUpdate_.bind(this);
          this.formatter_ = config.formatter;
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          var inputElem = doc.createElement("input");
          inputElem.classList.add(className("i"));
          inputElem.readOnly = true;
          inputElem.type = "text";
          config.viewProps.bindDisabled(inputElem);
          this.element.appendChild(inputElem);
          this.inputElement = inputElem;
          config.value.emitter.on("change", this.onValueUpdate_);
          this.value = config.value;
          this.update_();
        }
        SingleLogView2.prototype.update_ = function() {
          var values = this.value.rawValue;
          var lastValue = values[values.length - 1];
          this.inputElement.value = lastValue !== void 0 ? this.formatter_(lastValue) : "";
        };
        SingleLogView2.prototype.onValueUpdate_ = function() {
          this.update_();
        };
        return SingleLogView2;
      }()
    );
    exports.SingleLogView = SingleLogView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/monitor-binding/common/controller/single-log.js
var require_single_log2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/monitor-binding/common/controller/single-log.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SingleLogController = void 0;
    var single_log_1 = require_single_log();
    var SingleLogController = (
      /** @class */
      function() {
        function SingleLogController2(doc, config) {
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.view = new single_log_1.SingleLogView(doc, {
            formatter: config.formatter,
            value: this.value,
            viewProps: this.viewProps
          });
        }
        return SingleLogController2;
      }()
    );
    exports.SingleLogController = SingleLogController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/monitor-binding/boolean/plugin.js
var require_plugin12 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/monitor-binding/boolean/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BooleanMonitorPlugin = void 0;
    var boolean_1 = require_boolean();
    var params_parsers_1 = require_params_parsers();
    var constants_1 = require_constants();
    var multi_log_1 = require_multi_log2();
    var single_log_1 = require_single_log2();
    exports.BooleanMonitorPlugin = {
      id: "monitor-bool",
      type: "monitor",
      accept: function(value, params) {
        if (typeof value !== "boolean") {
          return null;
        }
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          lineCount: p.optional.number
        });
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(_args) {
          return boolean_1.boolFromUnknown;
        }
      },
      controller: function(args) {
        var _a;
        if (args.value.rawValue.length === 1) {
          return new single_log_1.SingleLogController(args.document, {
            formatter: boolean_1.BooleanFormatter,
            value: args.value,
            viewProps: args.viewProps
          });
        }
        return new multi_log_1.MultiLogController(args.document, {
          formatter: boolean_1.BooleanFormatter,
          lineCount: (_a = args.params.lineCount) !== null && _a !== void 0 ? _a : constants_1.Constants.monitor.defaultLineCount,
          value: args.value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/monitor-binding/number/view/graph-log.js
var require_graph_log = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/monitor-binding/number/view/graph-log.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GraphLogView = void 0;
    var dom_util_1 = require_dom_util();
    var number_util_1 = require_number_util();
    var class_name_1 = require_class_name();
    var className = (0, class_name_1.ClassName)("grl");
    var GraphLogView = (
      /** @class */
      function() {
        function GraphLogView2(doc, config) {
          this.onCursorChange_ = this.onCursorChange_.bind(this);
          this.onValueUpdate_ = this.onValueUpdate_.bind(this);
          this.element = doc.createElement("div");
          this.element.classList.add(className());
          config.viewProps.bindClassModifiers(this.element);
          this.formatter_ = config.formatter;
          this.props_ = config.props;
          this.cursor_ = config.cursor;
          this.cursor_.emitter.on("change", this.onCursorChange_);
          var svgElem = doc.createElementNS(dom_util_1.SVG_NS, "svg");
          svgElem.classList.add(className("g"));
          svgElem.style.height = "calc(var(--bld-us) * ".concat(config.lineCount, ")");
          this.element.appendChild(svgElem);
          this.svgElem_ = svgElem;
          var lineElem = doc.createElementNS(dom_util_1.SVG_NS, "polyline");
          this.svgElem_.appendChild(lineElem);
          this.lineElem_ = lineElem;
          var tooltipElem = doc.createElement("div");
          tooltipElem.classList.add(className("t"), (0, class_name_1.ClassName)("tt")());
          this.element.appendChild(tooltipElem);
          this.tooltipElem_ = tooltipElem;
          config.value.emitter.on("change", this.onValueUpdate_);
          this.value = config.value;
          this.update_();
        }
        Object.defineProperty(GraphLogView2.prototype, "graphElement", {
          get: function() {
            return this.svgElem_;
          },
          enumerable: false,
          configurable: true
        });
        GraphLogView2.prototype.update_ = function() {
          var bounds = this.svgElem_.getBoundingClientRect();
          var maxIndex = this.value.rawValue.length - 1;
          var min = this.props_.get("minValue");
          var max = this.props_.get("maxValue");
          var points = [];
          this.value.rawValue.forEach(function(v, index) {
            if (v === void 0) {
              return;
            }
            var x = (0, number_util_1.mapRange)(index, 0, maxIndex, 0, bounds.width);
            var y = (0, number_util_1.mapRange)(v, min, max, bounds.height, 0);
            points.push([x, y].join(","));
          });
          this.lineElem_.setAttributeNS(null, "points", points.join(" "));
          var tooltipElem = this.tooltipElem_;
          var value = this.value.rawValue[this.cursor_.rawValue];
          if (value === void 0) {
            tooltipElem.classList.remove(className("t", "a"));
            return;
          }
          var tx = (0, number_util_1.mapRange)(this.cursor_.rawValue, 0, maxIndex, 0, bounds.width);
          var ty = (0, number_util_1.mapRange)(value, min, max, bounds.height, 0);
          tooltipElem.style.left = "".concat(tx, "px");
          tooltipElem.style.top = "".concat(ty, "px");
          tooltipElem.textContent = "".concat(this.formatter_(value));
          if (!tooltipElem.classList.contains(className("t", "a"))) {
            tooltipElem.classList.add(className("t", "a"), className("t", "in"));
            (0, dom_util_1.forceReflow)(tooltipElem);
            tooltipElem.classList.remove(className("t", "in"));
          }
        };
        GraphLogView2.prototype.onValueUpdate_ = function() {
          this.update_();
        };
        GraphLogView2.prototype.onCursorChange_ = function() {
          this.update_();
        };
        return GraphLogView2;
      }()
    );
    exports.GraphLogView = GraphLogView;
  }
});

// node_modules/@tweakpane/core/dist/cjs/monitor-binding/number/controller/graph-log.js
var require_graph_log2 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/monitor-binding/number/controller/graph-log.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GraphLogController = void 0;
    var dom_util_1 = require_dom_util();
    var values_1 = require_values();
    var number_util_1 = require_number_util();
    var pointer_handler_1 = require_pointer_handler();
    var graph_log_1 = require_graph_log();
    var GraphLogController = (
      /** @class */
      function() {
        function GraphLogController2(doc, config) {
          this.onGraphMouseMove_ = this.onGraphMouseMove_.bind(this);
          this.onGraphMouseLeave_ = this.onGraphMouseLeave_.bind(this);
          this.onGraphPointerDown_ = this.onGraphPointerDown_.bind(this);
          this.onGraphPointerMove_ = this.onGraphPointerMove_.bind(this);
          this.onGraphPointerUp_ = this.onGraphPointerUp_.bind(this);
          this.props_ = config.props;
          this.value = config.value;
          this.viewProps = config.viewProps;
          this.cursor_ = (0, values_1.createValue)(-1);
          this.view = new graph_log_1.GraphLogView(doc, {
            cursor: this.cursor_,
            formatter: config.formatter,
            lineCount: config.lineCount,
            props: this.props_,
            value: this.value,
            viewProps: this.viewProps
          });
          if (!(0, dom_util_1.supportsTouch)(doc)) {
            this.view.element.addEventListener("mousemove", this.onGraphMouseMove_);
            this.view.element.addEventListener("mouseleave", this.onGraphMouseLeave_);
          } else {
            var ph = new pointer_handler_1.PointerHandler(this.view.element);
            ph.emitter.on("down", this.onGraphPointerDown_);
            ph.emitter.on("move", this.onGraphPointerMove_);
            ph.emitter.on("up", this.onGraphPointerUp_);
          }
        }
        GraphLogController2.prototype.onGraphMouseLeave_ = function() {
          this.cursor_.rawValue = -1;
        };
        GraphLogController2.prototype.onGraphMouseMove_ = function(ev) {
          var bounds = this.view.element.getBoundingClientRect();
          this.cursor_.rawValue = Math.floor((0, number_util_1.mapRange)(ev.offsetX, 0, bounds.width, 0, this.value.rawValue.length));
        };
        GraphLogController2.prototype.onGraphPointerDown_ = function(ev) {
          this.onGraphPointerMove_(ev);
        };
        GraphLogController2.prototype.onGraphPointerMove_ = function(ev) {
          if (!ev.data.point) {
            this.cursor_.rawValue = -1;
            return;
          }
          this.cursor_.rawValue = Math.floor((0, number_util_1.mapRange)(ev.data.point.x, 0, ev.data.bounds.width, 0, this.value.rawValue.length));
        };
        GraphLogController2.prototype.onGraphPointerUp_ = function() {
          this.cursor_.rawValue = -1;
        };
        return GraphLogController2;
      }()
    );
    exports.GraphLogController = GraphLogController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/monitor-binding/number/plugin.js
var require_plugin13 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/monitor-binding/number/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NumberMonitorPlugin = void 0;
    var number_1 = require_number();
    var value_map_1 = require_value_map();
    var params_parsers_1 = require_params_parsers();
    var constants_1 = require_constants();
    var type_util_1 = require_type_util();
    var multi_log_1 = require_multi_log2();
    var single_log_1 = require_single_log2();
    var graph_log_1 = require_graph_log2();
    function createFormatter(params) {
      return "format" in params && !(0, type_util_1.isEmpty)(params.format) ? params.format : (0, number_1.createNumberFormatter)(2);
    }
    function createTextMonitor(args) {
      var _a;
      if (args.value.rawValue.length === 1) {
        return new single_log_1.SingleLogController(args.document, {
          formatter: createFormatter(args.params),
          value: args.value,
          viewProps: args.viewProps
        });
      }
      return new multi_log_1.MultiLogController(args.document, {
        formatter: createFormatter(args.params),
        lineCount: (_a = args.params.lineCount) !== null && _a !== void 0 ? _a : constants_1.Constants.monitor.defaultLineCount,
        value: args.value,
        viewProps: args.viewProps
      });
    }
    function createGraphMonitor(args) {
      var _a, _b, _c;
      return new graph_log_1.GraphLogController(args.document, {
        formatter: createFormatter(args.params),
        lineCount: (_a = args.params.lineCount) !== null && _a !== void 0 ? _a : constants_1.Constants.monitor.defaultLineCount,
        props: value_map_1.ValueMap.fromObject({
          maxValue: (_b = "max" in args.params ? args.params.max : null) !== null && _b !== void 0 ? _b : 100,
          minValue: (_c = "min" in args.params ? args.params.min : null) !== null && _c !== void 0 ? _c : 0
        }),
        value: args.value,
        viewProps: args.viewProps
      });
    }
    function shouldShowGraph(params) {
      return "view" in params && params.view === "graph";
    }
    exports.NumberMonitorPlugin = {
      id: "monitor-number",
      type: "monitor",
      accept: function(value, params) {
        if (typeof value !== "number") {
          return null;
        }
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          format: p.optional.function,
          lineCount: p.optional.number,
          max: p.optional.number,
          min: p.optional.number,
          view: p.optional.string
        });
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        defaultBufferSize: function(params) {
          return shouldShowGraph(params) ? 64 : 1;
        },
        reader: function(_args) {
          return number_1.numberFromUnknown;
        }
      },
      controller: function(args) {
        if (shouldShowGraph(args.params)) {
          return createGraphMonitor(args);
        }
        return createTextMonitor(args);
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/monitor-binding/string/plugin.js
var require_plugin14 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/monitor-binding/string/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StringMonitorPlugin = void 0;
    var string_1 = require_string();
    var params_parsers_1 = require_params_parsers();
    var constants_1 = require_constants();
    var multi_log_1 = require_multi_log2();
    var single_log_1 = require_single_log2();
    exports.StringMonitorPlugin = {
      id: "monitor-string",
      type: "monitor",
      accept: function(value, params) {
        if (typeof value !== "string") {
          return null;
        }
        var p = params_parsers_1.ParamsParsers;
        var result = (0, params_parsers_1.parseParams)(params, {
          lineCount: p.optional.number,
          multiline: p.optional.boolean
        });
        return result ? {
          initialValue: value,
          params: result
        } : null;
      },
      binding: {
        reader: function(_args) {
          return string_1.stringFromUnknown;
        }
      },
      controller: function(args) {
        var _a;
        var value = args.value;
        var multiline = value.rawValue.length > 1 || "multiline" in args.params && args.params.multiline;
        if (multiline) {
          return new multi_log_1.MultiLogController(args.document, {
            formatter: string_1.formatString,
            lineCount: (_a = args.params.lineCount) !== null && _a !== void 0 ? _a : constants_1.Constants.monitor.defaultLineCount,
            value,
            viewProps: args.viewProps
          });
        }
        return new single_log_1.SingleLogController(args.document, {
          formatter: string_1.formatString,
          value,
          viewProps: args.viewProps
        });
      }
    };
  }
});

// node_modules/@tweakpane/core/dist/cjs/plugin/plugin.js
var require_plugin15 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/plugin/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tweakpane/core/dist/cjs/input-binding/plugin.js
var require_plugin16 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/input-binding/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createInputBindingController = void 0;
    var blade_1 = require_blade3();
    var input_binding_1 = require_input_binding2();
    var input_1 = require_input();
    var value_map_1 = require_value_map();
    var values_1 = require_values();
    var view_props_1 = require_view_props();
    var params_parsers_1 = require_params_parsers();
    var type_util_1 = require_type_util();
    function createInputBindingController(plugin, args) {
      var _a;
      var result = plugin.accept(args.target.read(), args.params);
      if ((0, type_util_1.isEmpty)(result)) {
        return null;
      }
      var p = params_parsers_1.ParamsParsers;
      var valueArgs = {
        target: args.target,
        initialValue: result.initialValue,
        params: result.params
      };
      var reader = plugin.binding.reader(valueArgs);
      var constraint = plugin.binding.constraint ? plugin.binding.constraint(valueArgs) : void 0;
      var value = (0, values_1.createValue)(reader(result.initialValue), {
        constraint,
        equals: plugin.binding.equals
      });
      var binding = new input_1.InputBinding({
        reader,
        target: args.target,
        value,
        writer: plugin.binding.writer(valueArgs)
      });
      var disabled = p.optional.boolean(args.params.disabled).value;
      var hidden = p.optional.boolean(args.params.hidden).value;
      var controller = plugin.controller({
        constraint,
        document: args.document,
        initialValue: result.initialValue,
        params: result.params,
        value: binding.value,
        viewProps: view_props_1.ViewProps.create({
          disabled,
          hidden
        })
      });
      return new input_binding_1.InputBindingController(args.document, {
        binding,
        blade: (0, blade_1.createBlade)(),
        props: value_map_1.ValueMap.fromObject({
          label: "label" in args.params ? (_a = p.optional.string(args.params.label).value) !== null && _a !== void 0 ? _a : null : args.target.key
        }),
        valueController: controller
      });
    }
    exports.createInputBindingController = createInputBindingController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/monitor-binding/plugin.js
var require_plugin17 = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/monitor-binding/plugin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMonitorBindingController = void 0;
    var blade_1 = require_blade3();
    var monitor_binding_1 = require_monitor_binding2();
    var monitor_1 = require_monitor();
    var interval_1 = require_interval();
    var manual_1 = require_manual();
    var buffered_value_1 = require_buffered_value();
    var value_map_1 = require_value_map();
    var view_props_1 = require_view_props();
    var params_parsers_1 = require_params_parsers();
    var constants_1 = require_constants();
    var type_util_1 = require_type_util();
    function createTicker(document, interval) {
      return interval === 0 ? new manual_1.ManualTicker() : new interval_1.IntervalTicker(document, interval !== null && interval !== void 0 ? interval : constants_1.Constants.monitor.defaultInterval);
    }
    function createMonitorBindingController(plugin, args) {
      var _a, _b, _c;
      var p = params_parsers_1.ParamsParsers;
      var result = plugin.accept(args.target.read(), args.params);
      if ((0, type_util_1.isEmpty)(result)) {
        return null;
      }
      var bindingArgs = {
        target: args.target,
        initialValue: result.initialValue,
        params: result.params
      };
      var reader = plugin.binding.reader(bindingArgs);
      var bufferSize = (_b = (_a = p.optional.number(args.params.bufferSize).value) !== null && _a !== void 0 ? _a : plugin.binding.defaultBufferSize && plugin.binding.defaultBufferSize(result.params)) !== null && _b !== void 0 ? _b : 1;
      var interval = p.optional.number(args.params.interval).value;
      var binding = new monitor_1.MonitorBinding({
        reader,
        target: args.target,
        ticker: createTicker(args.document, interval),
        value: (0, buffered_value_1.initializeBuffer)(bufferSize)
      });
      var disabled = p.optional.boolean(args.params.disabled).value;
      var hidden = p.optional.boolean(args.params.hidden).value;
      var controller = plugin.controller({
        document: args.document,
        params: result.params,
        value: binding.value,
        viewProps: view_props_1.ViewProps.create({
          disabled,
          hidden
        })
      });
      return new monitor_binding_1.MonitorBindingController(args.document, {
        binding,
        blade: (0, blade_1.createBlade)(),
        props: value_map_1.ValueMap.fromObject({
          label: "label" in args.params ? (_c = p.optional.string(args.params.label).value) !== null && _c !== void 0 ? _c : null : args.target.key
        }),
        valueController: controller
      });
    }
    exports.createMonitorBindingController = createMonitorBindingController;
  }
});

// node_modules/@tweakpane/core/dist/cjs/plugin/pool.js
var require_pool = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/plugin/pool.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PluginPool = void 0;
    var input_binding_1 = require_input_binding();
    var input_binding_2 = require_input_binding2();
    var monitor_binding_1 = require_monitor_binding();
    var monitor_binding_2 = require_monitor_binding2();
    var plugin_1 = require_plugin5();
    var rack_1 = require_rack();
    var rack_2 = require_rack2();
    var tp_error_1 = require_tp_error();
    var plugin_2 = require_plugin16();
    var type_util_1 = require_type_util();
    var plugin_3 = require_plugin17();
    var PluginPool = (
      /** @class */
      function() {
        function PluginPool2() {
          this.pluginsMap_ = {
            blades: [],
            inputs: [],
            monitors: []
          };
        }
        PluginPool2.prototype.getAll = function() {
          return __spreadArray(__spreadArray(__spreadArray([], this.pluginsMap_.blades, true), this.pluginsMap_.inputs, true), this.pluginsMap_.monitors, true);
        };
        PluginPool2.prototype.register = function(r) {
          if (r.type === "blade") {
            this.pluginsMap_.blades.unshift(r);
          } else if (r.type === "input") {
            this.pluginsMap_.inputs.unshift(r);
          } else if (r.type === "monitor") {
            this.pluginsMap_.monitors.unshift(r);
          }
        };
        PluginPool2.prototype.createInput = function(document, target, params) {
          var initialValue = target.read();
          if ((0, type_util_1.isEmpty)(initialValue)) {
            throw new tp_error_1.TpError({
              context: {
                key: target.key
              },
              type: "nomatchingcontroller"
            });
          }
          var bc = this.pluginsMap_.inputs.reduce(function(result, plugin) {
            return result !== null && result !== void 0 ? result : (0, plugin_2.createInputBindingController)(plugin, {
              document,
              target,
              params
            });
          }, null);
          if (bc) {
            return bc;
          }
          throw new tp_error_1.TpError({
            context: {
              key: target.key
            },
            type: "nomatchingcontroller"
          });
        };
        PluginPool2.prototype.createMonitor = function(document, target, params) {
          var bc = this.pluginsMap_.monitors.reduce(function(result, plugin) {
            return result !== null && result !== void 0 ? result : (0, plugin_3.createMonitorBindingController)(plugin, {
              document,
              params,
              target
            });
          }, null);
          if (bc) {
            return bc;
          }
          throw new tp_error_1.TpError({
            context: {
              key: target.key
            },
            type: "nomatchingcontroller"
          });
        };
        PluginPool2.prototype.createBlade = function(document, params) {
          var bc = this.pluginsMap_.blades.reduce(function(result, plugin) {
            return result !== null && result !== void 0 ? result : (0, plugin_1.createBladeController)(plugin, {
              document,
              params
            });
          }, null);
          if (!bc) {
            throw new tp_error_1.TpError({
              type: "nomatchingview",
              context: {
                params
              }
            });
          }
          return bc;
        };
        PluginPool2.prototype.createBladeApi = function(bc) {
          var _this = this;
          if (bc instanceof input_binding_2.InputBindingController) {
            return new input_binding_1.InputBindingApi(bc);
          }
          if (bc instanceof monitor_binding_2.MonitorBindingController) {
            return new monitor_binding_1.MonitorBindingApi(bc);
          }
          if (bc instanceof rack_2.RackController) {
            return new rack_1.RackApi(bc, this);
          }
          var api = this.pluginsMap_.blades.reduce(function(result, plugin) {
            return result !== null && result !== void 0 ? result : plugin.api({
              controller: bc,
              pool: _this
            });
          }, null);
          if (!api) {
            throw tp_error_1.TpError.shouldNeverHappen();
          }
          return api;
        };
        return PluginPool2;
      }()
    );
    exports.PluginPool = PluginPool;
  }
});

// node_modules/@tweakpane/core/dist/cjs/plugin/plugins.js
var require_plugins = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/plugin/plugins.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createDefaultPluginPool = void 0;
    var plugin_1 = require_plugin();
    var plugin_2 = require_plugin2();
    var plugin_3 = require_plugin3();
    var plugin_4 = require_plugin4();
    var plugin_5 = require_plugin6();
    var plugin_number_1 = require_plugin_number();
    var plugin_object_1 = require_plugin_object();
    var plugin_string_1 = require_plugin_string();
    var plugin_6 = require_plugin7();
    var plugin_7 = require_plugin8();
    var plugin_8 = require_plugin9();
    var plugin_9 = require_plugin10();
    var plugin_10 = require_plugin11();
    var plugin_11 = require_plugin12();
    var plugin_12 = require_plugin13();
    var plugin_13 = require_plugin14();
    var pool_1 = require_pool();
    function createDefaultPluginPool() {
      var pool = new pool_1.PluginPool();
      [
        // Inpput
        plugin_7.Point2dInputPlugin,
        plugin_8.Point3dInputPlugin,
        plugin_9.Point4dInputPlugin,
        plugin_10.StringInputPlugin,
        plugin_6.NumberInputPlugin,
        plugin_string_1.StringColorInputPlugin,
        plugin_object_1.ObjectColorInputPlugin,
        plugin_number_1.NumberColorInputPlugin,
        plugin_5.BooleanInputPlugin,
        // Monitor
        plugin_11.BooleanMonitorPlugin,
        plugin_13.StringMonitorPlugin,
        plugin_12.NumberMonitorPlugin,
        // Blade
        plugin_1.ButtonBladePlugin,
        plugin_2.FolderBladePlugin,
        plugin_3.SeparatorBladePlugin,
        plugin_4.TabBladePlugin
      ].forEach(function(p) {
        pool.register(p);
      });
      return pool;
    }
    exports.createDefaultPluginPool = createDefaultPluginPool;
  }
});

// node_modules/@tweakpane/core/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/@tweakpane/core/dist/cjs/index.js"(exports) {
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createBladeController = void 0;
    __exportStar(require_blade(), exports);
    __exportStar(require_events(), exports);
    __exportStar(require_params(), exports);
    __exportStar(require_tp_event(), exports);
    __exportStar(require_target(), exports);
    __exportStar(require_button(), exports);
    __exportStar(require_button3(), exports);
    __exportStar(require_button2(), exports);
    __exportStar(require_plugin(), exports);
    __exportStar(require_blade2(), exports);
    __exportStar(require_value_blade(), exports);
    __exportStar(require_blade_positions(), exports);
    __exportStar(require_blade3(), exports);
    __exportStar(require_foldable(), exports);
    __exportStar(require_folder(), exports);
    __exportStar(require_folder3(), exports);
    __exportStar(require_folder2(), exports);
    __exportStar(require_plugin2(), exports);
    __exportStar(require_input_binding(), exports);
    __exportStar(require_input_binding2(), exports);
    __exportStar(require_label2(), exports);
    __exportStar(require_value_label(), exports);
    __exportStar(require_label(), exports);
    __exportStar(require_monitor_binding(), exports);
    __exportStar(require_monitor_binding2(), exports);
    __exportStar(require_separator(), exports);
    __exportStar(require_separator3(), exports);
    __exportStar(require_plugin3(), exports);
    __exportStar(require_tab(), exports);
    __exportStar(require_tab_page2(), exports);
    __exportStar(require_tab4(), exports);
    __exportStar(require_tab_page(), exports);
    __exportStar(require_plugin4(), exports);
    var plugin_1 = require_plugin5();
    Object.defineProperty(exports, "createBladeController", { enumerable: true, get: function() {
      return plugin_1.createBladeController;
    } });
    __exportStar(require_manual(), exports);
    __exportStar(require_interval(), exports);
    __exportStar(require_ticker(), exports);
    __exportStar(require_input(), exports);
    __exportStar(require_monitor(), exports);
    __exportStar(require_composite(), exports);
    __exportStar(require_constraint(), exports);
    __exportStar(require_definite_range(), exports);
    __exportStar(require_list(), exports);
    __exportStar(require_range(), exports);
    __exportStar(require_step(), exports);
    __exportStar(require_controller(), exports);
    __exportStar(require_list3(), exports);
    __exportStar(require_popup2(), exports);
    __exportStar(require_text2(), exports);
    __exportStar(require_value(), exports);
    __exportStar(require_boolean(), exports);
    __exportStar(require_formatter(), exports);
    __exportStar(require_number(), exports);
    __exportStar(require_parser2(), exports);
    __exportStar(require_percentage(), exports);
    __exportStar(require_string(), exports);
    __exportStar(require_buffered_value(), exports);
    __exportStar(require_emitter(), exports);
    __exportStar(require_reactive(), exports);
    __exportStar(require_value2(), exports);
    __exportStar(require_value_map(), exports);
    __exportStar(require_value_sync(), exports);
    __exportStar(require_values(), exports);
    __exportStar(require_view_props(), exports);
    __exportStar(require_number_text2(), exports);
    __exportStar(require_slider2(), exports);
    __exportStar(require_slider_text2(), exports);
    __exportStar(require_number_text(), exports);
    __exportStar(require_slider(), exports);
    __exportStar(require_slider_text(), exports);
    __exportStar(require_class_name(), exports);
    __exportStar(require_list2(), exports);
    __exportStar(require_plain(), exports);
    __exportStar(require_pointer_handler(), exports);
    __exportStar(require_popup(), exports);
    __exportStar(require_reactive2(), exports);
    __exportStar(require_text(), exports);
    __exportStar(require_view(), exports);
    __exportStar(require_compat(), exports);
    __exportStar(require_dom_util(), exports);
    __exportStar(require_number_util(), exports);
    __exportStar(require_params_parsers(), exports);
    __exportStar(require_params2(), exports);
    __exportStar(require_primitive(), exports);
    __exportStar(require_tp_error(), exports);
    __exportStar(require_ui(), exports);
    __exportStar(require_util(), exports);
    __exportStar(require_checkbox2(), exports);
    __exportStar(require_plugin6(), exports);
    __exportStar(require_color3(), exports);
    __exportStar(require_color_number(), exports);
    __exportStar(require_color_string(), exports);
    __exportStar(require_color2(), exports);
    __exportStar(require_plugin_number(), exports);
    __exportStar(require_plugin_object(), exports);
    __exportStar(require_plugin_string(), exports);
    __exportStar(require_point_nd(), exports);
    __exportStar(require_point_nd_text2(), exports);
    __exportStar(require_plugin7(), exports);
    __exportStar(require_point_2d3(), exports);
    __exportStar(require_plugin8(), exports);
    __exportStar(require_plugin9(), exports);
    __exportStar(require_plugin10(), exports);
    __exportStar(require_plugin11(), exports);
    __exportStar(require_constants(), exports);
    __exportStar(require_type_util(), exports);
    __exportStar(require_plugin12(), exports);
    __exportStar(require_multi_log2(), exports);
    __exportStar(require_single_log2(), exports);
    __exportStar(require_graph_log2(), exports);
    __exportStar(require_plugin13(), exports);
    __exportStar(require_plugin14(), exports);
    __exportStar(require_plugin15(), exports);
    __exportStar(require_plugins(), exports);
    __exportStar(require_pool(), exports);
  }
});
export default require_cjs();
//# sourceMappingURL=@tweakpane_core.js.map
